[
  {
    "objectID": "viz/total_hourly_rides_vs_temp_2_total_subs_cust.html",
    "href": "viz/total_hourly_rides_vs_temp_2_total_subs_cust.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION"
  },
  {
    "objectID": "viz/total_hourly_rides_vs_temp_2_total_subs_cust.html#total-hourly-rides-vs-temperature-total-subscribers-and-customers",
    "href": "viz/total_hourly_rides_vs_temp_2_total_subs_cust.html#total-hourly-rides-vs-temperature-total-subscribers-and-customers",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION"
  },
  {
    "objectID": "viz/bike_ride_bucket_histogram.html",
    "href": "viz/bike_ride_bucket_histogram.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n\n\nThis histogram visualizes the distribution of total ride counts per bike, grouped into buckets of 100 rides each. It provides insight into how evenly or unevenly individual bikes are used over the dataset’s timespan.\n\n\n\n\nX-Axis (Ride Count Range):\n\nLabeled in bins of 100 rides (e.g., 0-99, 100-199, …, 5500-5599).\nRepresents the total number of rides associated with each bike.\n\nY-Axis (Number of Bikes):\n\nIndicates how many bikes fall within each ride count range.\nPeaks near 300 bikes in the most frequently occurring bins.\n\n\n\n\n\n\nBars:\n\nColored purple with black borders.\nUniform width, covering each 100-ride range.\nDistribution forms a roughly symmetric bell-shaped curve centered around the 2700–3499 range.\n\n\n\n\n\n\nLow-end Outliers:\n\nA noticeable spike in the 0–99 bin (~130 bikes), suggesting a set of bikes with extremely limited or no use.\nMay include stolen, damaged, or new bikes added near the end of the data collection period.\n\nCore Distribution:\n\nThe majority of bikes (~200–280 per bin) fall between 2200–3999 rides.\nIndicates typical usage patterns and operational consistency.\n\nHigh-end Tail:\n\nUsage drops off steadily after ~4000 rides per bike.\nVery few bikes exceed 5000 rides.\n\n\n\n\n\n\nThe chart implies a relatively well-utilized fleet with a normal distribution centered around ~3000 rides per bike.\nThe left-side spike at 0–99 highlights potential outliers worth investigating:\n\nUnderused bikes,\nPossible malfunctions,\nSeasonal deployments,\nRecent fleet additions.\n\nThe right tail shows some high-mileage bikes that may be candidates for maintenance or replacement soon.\n\n\n\n\nThis visualization is valuable for: - Fleet maintenance planning (identify overused/underused bikes), - Lifecycle analysis (detect uneven distribution of wear), - Deployment strategy (optimize rotation or redistribution).\n.headers on\n.mode csv\n.output bike_ride_buckets.csv\nWITH bucketed AS (\n  SELECT\n    (ride_count / 100) * 100 AS bucket_start,\n    COUNT(*) AS bike_count\n  FROM (\n    SELECT bike_id, COUNT(*) AS ride_count\n    FROM rides\n    WHERE bike_id IS NOT NULL\n    GROUP BY bike_id\n  )\n  GROUP BY bucket_start\n  ORDER BY bucket_start\n)\nSELECT\n  bucket_start,\n  bucket_start + 99 AS bucket_end,\n  bike_count\nFROM bucketed;\n.output stdout\nset datafile separator \",\"\nset terminal pngcairo size 1000,600 enhanced font 'Verdana,10'\nset output 'bike_ride_bucket_histogram.png'\n\nset title \"Distribution of Ride Counts per Bike\"\nset xlabel \"Ride Count Range\"\nset ylabel \"Number of Bikes\"\nset style fill solid 1.0 border -1\nset boxwidth 0.9\nset grid ytics\nunset key\nset xtics rotate by -45\n\n# Format x-tics with the bucket label, like \"0–99\"\nplot 'bike_ride_buckets.csv' using ($0):3:xtic(strcol(1).\"-\".strcol(2)) with boxes"
  },
  {
    "objectID": "viz/bike_ride_bucket_histogram.html#distribution-of-ride-counts-per-bike",
    "href": "viz/bike_ride_bucket_histogram.html#distribution-of-ride-counts-per-bike",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n\n\nThis histogram visualizes the distribution of total ride counts per bike, grouped into buckets of 100 rides each. It provides insight into how evenly or unevenly individual bikes are used over the dataset’s timespan.\n\n\n\n\nX-Axis (Ride Count Range):\n\nLabeled in bins of 100 rides (e.g., 0-99, 100-199, …, 5500-5599).\nRepresents the total number of rides associated with each bike.\n\nY-Axis (Number of Bikes):\n\nIndicates how many bikes fall within each ride count range.\nPeaks near 300 bikes in the most frequently occurring bins.\n\n\n\n\n\n\nBars:\n\nColored purple with black borders.\nUniform width, covering each 100-ride range.\nDistribution forms a roughly symmetric bell-shaped curve centered around the 2700–3499 range.\n\n\n\n\n\n\nLow-end Outliers:\n\nA noticeable spike in the 0–99 bin (~130 bikes), suggesting a set of bikes with extremely limited or no use.\nMay include stolen, damaged, or new bikes added near the end of the data collection period.\n\nCore Distribution:\n\nThe majority of bikes (~200–280 per bin) fall between 2200–3999 rides.\nIndicates typical usage patterns and operational consistency.\n\nHigh-end Tail:\n\nUsage drops off steadily after ~4000 rides per bike.\nVery few bikes exceed 5000 rides.\n\n\n\n\n\n\nThe chart implies a relatively well-utilized fleet with a normal distribution centered around ~3000 rides per bike.\nThe left-side spike at 0–99 highlights potential outliers worth investigating:\n\nUnderused bikes,\nPossible malfunctions,\nSeasonal deployments,\nRecent fleet additions.\n\nThe right tail shows some high-mileage bikes that may be candidates for maintenance or replacement soon.\n\n\n\n\nThis visualization is valuable for: - Fleet maintenance planning (identify overused/underused bikes), - Lifecycle analysis (detect uneven distribution of wear), - Deployment strategy (optimize rotation or redistribution).\n.headers on\n.mode csv\n.output bike_ride_buckets.csv\nWITH bucketed AS (\n  SELECT\n    (ride_count / 100) * 100 AS bucket_start,\n    COUNT(*) AS bike_count\n  FROM (\n    SELECT bike_id, COUNT(*) AS ride_count\n    FROM rides\n    WHERE bike_id IS NOT NULL\n    GROUP BY bike_id\n  )\n  GROUP BY bucket_start\n  ORDER BY bucket_start\n)\nSELECT\n  bucket_start,\n  bucket_start + 99 AS bucket_end,\n  bike_count\nFROM bucketed;\n.output stdout\nset datafile separator \",\"\nset terminal pngcairo size 1000,600 enhanced font 'Verdana,10'\nset output 'bike_ride_bucket_histogram.png'\n\nset title \"Distribution of Ride Counts per Bike\"\nset xlabel \"Ride Count Range\"\nset ylabel \"Number of Bikes\"\nset style fill solid 1.0 border -1\nset boxwidth 0.9\nset grid ytics\nunset key\nset xtics rotate by -45\n\n# Format x-tics with the bucket label, like \"0–99\"\nplot 'bike_ride_buckets.csv' using ($0):3:xtic(strcol(1).\"-\".strcol(2)) with boxes"
  },
  {
    "objectID": "viz/average_hourly_rides_vs_temp_2_bucket_avg_sub_cust.html",
    "href": "viz/average_hourly_rides_vs_temp_2_bucket_avg_sub_cust.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Hourly rides vs. temperature\n\n  \n\nThis graph show the number of rides starting at a given at a given temperature. Temperature data is recorded hourly.\n\n\nset title  \"Hourly rides vs. temperature\"\nset xlabel \"Temperature (°C)\"\nset ylabel \"Average rides per hour\"\nset grid\nplot \\\n    \"temp_vs_rides.tsv\" using 1:2 with lines lw 2 title \"Total\", \\\n    \"\"                   using 1:3 with lines lw 2 dt 2  title \"Subscribers\", \\\n    \"\"                   using 1:4 with lines lw 2 dt 3  title \"Customers\""
  },
  {
    "objectID": "viz/Top_50_Stations_by_User_Type.html",
    "href": "viz/Top_50_Stations_by_User_Type.html",
    "title": "Top 50 Stations by User Type",
    "section": "",
    "text": "Top 50 Stations by User Type\n\n  \n\nFIGCAPTION\n\n\nThis interactive map of the top 50 stations includes the top 50 stations by number of subscriber rides and the top 50 stations by number of customer rides. We break from the normal color scheme as more contrast was required due to the preexisting colors in the map. So the dots for subscriber stations rendered in blue and the dots for customer stations rendered in red. The dots for stations are offset slightly to avoid one dot obscuring the other for the cases where the station is in the top 50 for both subscribers and customers. This is accomplished by using a data frame where the location of the stations is offset. The size of the dots is scaled by the total number of rides (subscriber or customer as appropriate), so that stations with more rides are larger dots.\nGenerated with the following R command;\nleaflet(top_stations_df_offset) %&gt;%\n     addTiles() %&gt;%\n     addCircleMarkers(\n         lng = ~long_offset,\n         lat = ~lat,\n         color = ~pal(user_type),\n         radius = ~pmax(sqrt(ride_count) / 50, 4),\n         stroke = FALSE,\n         fillOpacity = 0.8,\n         popup = ~paste0(\n             \"&lt;b&gt;\", name, \"&lt;/b&gt;&lt;br&gt;\", \"Rank: #\", rn, \"&lt;br&gt;\",\n             \"User Type: \", user_type, \"&lt;br&gt;\",\n             \"Ride Count: \", format(ride_count, big.mark = \",\")\n         )\n     ) %&gt;%\n     addLegend(\n         position = \"bottomright\",\n         pal = pal,\n         values = ~user_type,\n         title = \"User Type\",\n         opacity = 1\n     )"
  },
  {
    "objectID": "viz/Top_20_Most_Asymmetric_Paths_by_User_Type.html",
    "href": "viz/Top_20_Most_Asymmetric_Paths_by_User_Type.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Top 20 bike-share station pairs with the most directional imbalance by user type. Customers show high asymmetry around central business district hubs, while subscriber asymmetries often reflect lakefront access or commuter endpoint behavior.\n\n\n\n\nTitle: Top 20 Most Asymmetric Paths by User Type X-Axis: Asymmetry Ratio (from 0.0 to ~0.7) Panels: Two side-by-side bar charts\n\nLeft panel: Top asymmetric paths for Customers\nRight panel: Top asymmetric paths for Subscribers\n\n\n\n\n\nAsymmetry Ratio\n\nA value approaching 1 indicates heavy one-way usage between a pair of stations. Rides commonly occur in one direction but rarely the other.\n\nCustomer Patterns\n\nConcentrated near transit stations and central business districts. Reflect unidirectional use, possibly due to nearby public transit hubs, tourism drop-offs, or lack of return trips.\n\nSubscriber Patterns\n\nFocus on lakefront access (e.g., Streeter Dr, Lake Shore Dr) and commuter endpoints. Suggest consistent commuting flows where riders may use other transportation methods for return trips (e.g., walking or transit).\n\nContrast\n\nWhile customers show asymmetry in the urban core, subscribers show it around recreational or edge areas."
  },
  {
    "objectID": "viz/Top_20_Most_Asymmetric_Paths_by_User_Type.html#top-20-most-asymmetric-paths-by-user-type",
    "href": "viz/Top_20_Most_Asymmetric_Paths_by_User_Type.html#top-20-most-asymmetric-paths-by-user-type",
    "title": "Bike share case-study",
    "section": "",
    "text": "Top 20 bike-share station pairs with the most directional imbalance by user type. Customers show high asymmetry around central business district hubs, while subscriber asymmetries often reflect lakefront access or commuter endpoint behavior.\n\n\n\n\nTitle: Top 20 Most Asymmetric Paths by User Type X-Axis: Asymmetry Ratio (from 0.0 to ~0.7) Panels: Two side-by-side bar charts\n\nLeft panel: Top asymmetric paths for Customers\nRight panel: Top asymmetric paths for Subscribers\n\n\n\n\n\nAsymmetry Ratio\n\nA value approaching 1 indicates heavy one-way usage between a pair of stations. Rides commonly occur in one direction but rarely the other.\n\nCustomer Patterns\n\nConcentrated near transit stations and central business districts. Reflect unidirectional use, possibly due to nearby public transit hubs, tourism drop-offs, or lack of return trips.\n\nSubscriber Patterns\n\nFocus on lakefront access (e.g., Streeter Dr, Lake Shore Dr) and commuter endpoints. Suggest consistent commuting flows where riders may use other transportation methods for return trips (e.g., walking or transit).\n\nContrast\n\nWhile customers show asymmetry in the urban core, subscribers show it around recreational or edge areas."
  },
  {
    "objectID": "viz/Temp_vs_Ride_Volume_by_User_Type.html",
    "href": "viz/Temp_vs_Ride_Volume_by_User_Type.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Hourly ride volume by temperature, faceted by user type. Warmer temperatures correlate strongly with increased ride volume for both customers and subscribers, with subscriber volume remaining higher across all temperatures.\n\n\n\n\nThis dual-panel line plot compares hourly ride volume to temperature (°C) for customers (left) and subscribers (right). Both panels show a strong nonlinear increase in ride volume as temperatures rise.\n\n\n\nRide volume is lowest below freezing and begins to climb around 0°C.\nSubscribers maintain higher ride volume than customers across the full temperature range, suggesting greater resilience to cold weather.\nBoth curves exhibit a steep increase above 20°C, peaking near 35–40°C.\nThe growth is smooth and continuous, indicative of a nonlinear relationship rather than a threshold effect.\n\nThese findings support the inclusion of temperature as a continuous predictor of ride behavior in seasonal and temporal analyses.\nggplot(rides_weather_df, aes(x = temp, y = rides)) +\n     geom_smooth(method = \"loess\", se = FALSE, color = \"darkgreen\") +\n     scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +\n     facet_wrap(~ user_type) +\n     labs(\n         title = \"Temperature vs Ride Volume by User Type\",\n         x = \"Temperature (°C)\",\n         y = \"Hourly Ride Volume\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Temp_vs_Ride_Volume_by_User_Type.html#temperature-vs-ride-volume-by-user-type",
    "href": "viz/Temp_vs_Ride_Volume_by_User_Type.html#temperature-vs-ride-volume-by-user-type",
    "title": "Bike share case-study",
    "section": "",
    "text": "Hourly ride volume by temperature, faceted by user type. Warmer temperatures correlate strongly with increased ride volume for both customers and subscribers, with subscriber volume remaining higher across all temperatures.\n\n\n\n\nThis dual-panel line plot compares hourly ride volume to temperature (°C) for customers (left) and subscribers (right). Both panels show a strong nonlinear increase in ride volume as temperatures rise.\n\n\n\nRide volume is lowest below freezing and begins to climb around 0°C.\nSubscribers maintain higher ride volume than customers across the full temperature range, suggesting greater resilience to cold weather.\nBoth curves exhibit a steep increase above 20°C, peaking near 35–40°C.\nThe growth is smooth and continuous, indicative of a nonlinear relationship rather than a threshold effect.\n\nThese findings support the inclusion of temperature as a continuous predictor of ride behavior in seasonal and temporal analyses.\nggplot(rides_weather_df, aes(x = temp, y = rides)) +\n     geom_smooth(method = \"loess\", se = FALSE, color = \"darkgreen\") +\n     scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +\n     facet_wrap(~ user_type) +\n     labs(\n         title = \"Temperature vs Ride Volume by User Type\",\n         x = \"Temperature (°C)\",\n         y = \"Hourly Ride Volume\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Ride_Volume_by_Temp_2_bin.html",
    "href": "viz/Ride_Volume_by_Temp_2_bin.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION"
  },
  {
    "objectID": "viz/Ride_Volume_by_Temp_2_bin.html#ride-volume-by-temperature-2c-bins",
    "href": "viz/Ride_Volume_by_Temp_2_bin.html#ride-volume-by-temperature-2c-bins",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION"
  },
  {
    "objectID": "viz/Ride_Duration_Distribution.html",
    "href": "viz/Ride_Duration_Distribution.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n# Connect to the SQLite database\ncon &lt;- dbConnect(RSQLite::SQLite(), \"caseStudy.db\")\n\n# Pull ride durations for valid subscriber/customer rides under 60 min\nride_durations &lt;- dbGetQuery(con, \"\n  SELECT\n    CASE user_type\n      WHEN 0 THEN 'subscriber'\n      WHEN 1 THEN 'customer'\n    END AS user_type,\n    (end_time - start_time) / 60.0 AS duration_min\n  FROM rides\n  WHERE user_type IN (0, 1)\n    AND end_time &gt; start_time\n    AND (end_time - start_time) &lt; 12000\n\")\n\n# Disconnect\n dbDisconnect(con)\nggplot(ride_durations, aes(x = duration_min, fill = user_type)) +\n     geom_histogram(binwidth = 2, position = \"identity\", alpha = 0.6) +\n     labs(title = \"Ride Duration Distribution\", x = \"Duration (minutes)\", y = \"Ride Count\") +\n     scale_fill_manual(values = c(\"subscriber\" = \"#1f77b4\", \"customer\" = \"#ff7f0e\")) +\n     scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) + \n     theme_minimal()"
  },
  {
    "objectID": "viz/Ride_Duration_Distribution.html#ride-duration-distribution",
    "href": "viz/Ride_Duration_Distribution.html#ride-duration-distribution",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n# Connect to the SQLite database\ncon &lt;- dbConnect(RSQLite::SQLite(), \"caseStudy.db\")\n\n# Pull ride durations for valid subscriber/customer rides under 60 min\nride_durations &lt;- dbGetQuery(con, \"\n  SELECT\n    CASE user_type\n      WHEN 0 THEN 'subscriber'\n      WHEN 1 THEN 'customer'\n    END AS user_type,\n    (end_time - start_time) / 60.0 AS duration_min\n  FROM rides\n  WHERE user_type IN (0, 1)\n    AND end_time &gt; start_time\n    AND (end_time - start_time) &lt; 12000\n\")\n\n# Disconnect\n dbDisconnect(con)\nggplot(ride_durations, aes(x = duration_min, fill = user_type)) +\n     geom_histogram(binwidth = 2, position = \"identity\", alpha = 0.6) +\n     labs(title = \"Ride Duration Distribution\", x = \"Duration (minutes)\", y = \"Ride Count\") +\n     scale_fill_manual(values = c(\"subscriber\" = \"#1f77b4\", \"customer\" = \"#ff7f0e\")) +\n     scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) + \n     theme_minimal()"
  },
  {
    "objectID": "viz/Normalized_Avg_Hourly_Rides_vs_Temperature.html",
    "href": "viz/Normalized_Avg_Hourly_Rides_vs_Temperature.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "📊 Chart Description: Normalized Average Hourly Rides vs Temperature\n\n  \n\nNormalized average hourly rides by temperature (°C), showing subscriber, customer, and total ride volume peaking near 25°C.\n\n\nThis line chart displays how bike ride frequency varies with temperature, separated by user type. The data is normalized, meaning each line ranges from 0 to 1 to emphasize the shape of the trend rather than absolute ride counts. The x-axis shows temperature in degrees Celsius, and the y-axis shows normalized average hourly rides.\nThere are three colored lines:\n\nDark blue line for Subscribers\nDark orange line for Customers\nBlack line for the Total (combined average)\n\n\n\n📈 What the chart shows:\nAll three lines follow a similar bell-shaped curve, indicating that ride volume increases with temperature up to a point and then declines slightly.\n\nBelow 5°C:\n\nAll lines are low. Subscribers still ride more than customers, but both are at their lowest levels.\n\nFrom 5°C to 25°C:\n\nAll user types increase their riding sharply, with customers increasing more rapidly than subscribers.\n\nAround 25°C:\n\nThe normalized ride volume peaks for all users. This temperature appears to be optimal for biking.\n\nBeyond 30°C:\n\nRide volume begins to decline slightly, especially for customers, suggesting heat discourages casual riding more than subscriber riding.\n\n\n\n\n📊 Comparison by User Type:\nCustomers (dark orange line) are more sensitive to temperature changes. They ride less in the cold and more in warm weather, but their participation falls more steeply when it's too hot.\n\nSubscribers (dark blue line) have a flatter, more stable curve, meaning their ride behavior is more consistent across a range of temperatures, likely because they are commuting or riding out of necessity.\n\nThe Total line (black) always lies between the two other lines, as expected from an average.\n\n\n🔍 General Observations:\nThe shape of the curves is very similar across all user types, indicating that temperature influences casual customers and subscribers in a similar way — warmer weather increases ridership for everyone.\n\nThe \"total\" line (black) consistently lies between the customer (dark orange) and subscriber (dark blue) lines, as expected from an average or composite.\n\n\n🌡️ Temperature Effects:\n\nBelow ~5°C (≈ 41°F):\n\nAll ride volumes are low. This likely reflects discomfort, poor road conditions, or safety concerns — especially for casual riders.\n\n5°C to 25°C:\n\nSteady and significant rise in ride volume, particularly among customers. This temperature range is ideal for recreational and commuter use. It suggests good biking weather for most users.\n\nAround 25°C (~77°F):\n\nAppears to be the peak ridership temperature — the “sweet spot” for biking in Chicago (or similar climates), with maximum participation across both customer types.\n\nAbove 30°C (~86°F):\n\nSlight drop-off in ride frequency, especially among casual riders, implying that excessive heat becomes a deterrent to non-essential trips. Subscribers are less affected, possibly due to commuting needs or higher tolerance.\n\n\n\n\n🤔 Behavioral Insights (Celsius Context):\n|Temp Range (°C)|Customer Behavior|Subscriber Behavior|Interpretation| |&lt;5°C|Low ridership|Moderately low|Cold weather suppresses casual rides more strongly| |5–25°C|Steep increase|Moderate increase|Warm-up boosts ridership, especially casual use| |~25°C|Peak ridership|Near-peak|Ideal biking conditions for both groups| |&gt;30°C|Drop or plateau|Slight decline or steady|Hot weather reduces recreational riding|\n📊 Comparison by User Type:\n\nCustomers (dark orange line) are more sensitive to temperature changes. They ride less in the cold and more in warm weather, but their participation falls more steeply when it’s too hot.\nSubscribers (dark blue line) have a flatter, more stable curve, meaning their ride behavior is more consistent across a range of temperatures, likely because they are commuting or riding out of necessity.\nThe Total line (black) always lies between the two other lines, as expected from an average.\n\n\n\n✅ Conclusion:\nCasual users are more sensitive to weather extremes, while subscribers demonstrate more consistent use—likely reflecting commute and utility rather than leisure.\n\n\nProduction Details\n####R source code used to produce the chart\nggplot(normalized_df, aes(x = temp_bin, y = normalized_rides, color = user_type)) +\n    geom_line(size = 1.2) +\n    labs(\n        title = \"Normalized Avg Hourly Rides vs Temperature\",\n        x = \"Temperature (°F)\",\n        y = \"Normalized Avg Hourly Rides\",\n        color = \"User Type\"\n    ) +\n    scale_color_manual(values = c(\"subs\" = \"darkblue\", \"cust\" = \"darkorange\", \"avg\" = \"black\")) +\n    theme_minimal()\n\n\nData Source\n&gt; avg_df  &lt;- readr::read_csv(\"/data/temp_vs_rides_avg.csv\")\n&gt; # Normalize each column to 0-1\n&gt; normalized_df &lt;- avg_df %&gt;%\n+     mutate(across(c(subs, cust, avg), ~ (. - min(.)) / (max(.) - min(.)))) %&gt;%\n+     pivot_longer(cols = c(subs, cust, avg), names_to = \"user_type\", values_to = \"normalized_rides\")"
  },
  {
    "objectID": "viz/Non-Tourist_Non_Loop_Customer_Ride_Distance_Distribution_by_Ride_Duration_Cluster_201M_Grid.html",
    "href": "viz/Non-Tourist_Non_Loop_Customer_Ride_Distance_Distribution_by_Ride_Duration_Cluster_201M_Grid.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION"
  },
  {
    "objectID": "viz/Non-Tourist_Non_Loop_Customer_Ride_Distance_Distribution_by_Ride_Duration_Cluster_201M_Grid.html#non-tourist-non-loop-customer-ride-distance-distribution-by-ride-duration-cluster-201m-grid",
    "href": "viz/Non-Tourist_Non_Loop_Customer_Ride_Distance_Distribution_by_Ride_Duration_Cluster_201M_Grid.html#non-tourist-non-loop-customer-ride-distance-distribution-by-ride-duration-cluster-201m-grid",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION"
  },
  {
    "objectID": "viz/Non-Tourist_Hourly_Ride_Patterns_by_Season_and_Day_type.html",
    "href": "viz/Non-Tourist_Hourly_Ride_Patterns_by_Season_and_Day_type.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(rides_by_hour_season, aes(x = hour, y = ride_count, fill = week_part)) +\n  geom_col(position = \"dodge\") +\n  facet_wrap(~season, ncol = 2) +\n  scale_x_continuous(breaks = 0:23) +\n  scale_fill_manual(values = c(\"Weekday\" = \"darkblue\", \"Weekend\" = \"darkorange\")) +\n  labs(\n    title = \"Hourly Ride Patterns by Season and Day Type (Non-Tourist Stations)\",\n    x = \"Hour of Day\",\n    y = \"Number of Rides\",\n    fill = \"Day Type\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Hourly_Ride_Patterns_by_Season_and_Day_type.html#hourly-ride-patterns-by-season-and-day-type-non-tourist-stations",
    "href": "viz/Non-Tourist_Hourly_Ride_Patterns_by_Season_and_Day_type.html#hourly-ride-patterns-by-season-and-day-type-non-tourist-stations",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(rides_by_hour_season, aes(x = hour, y = ride_count, fill = week_part)) +\n  geom_col(position = \"dodge\") +\n  facet_wrap(~season, ncol = 2) +\n  scale_x_continuous(breaks = 0:23) +\n  scale_fill_manual(values = c(\"Weekday\" = \"darkblue\", \"Weekend\" = \"darkorange\")) +\n  labs(\n    title = \"Hourly Ride Patterns by Season and Day Type (Non-Tourist Stations)\",\n    x = \"Hour of Day\",\n    y = \"Number of Rides\",\n    fill = \"Day Type\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Rides_by_Month.html",
    "href": "viz/Non-Tourist_Customer_Rides_by_Month.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = month)) +\n     geom_bar(fill = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Month\",\n         x = \"Month\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Rides_by_Month.html#non-tourist-customer-rides-by-month",
    "href": "viz/Non-Tourist_Customer_Rides_by_Month.html#non-tourist-customer-rides-by-month",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = month)) +\n     geom_bar(fill = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Month\",\n         x = \"Month\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Rides_by_Hour_Weekday_vs_Weekend.html",
    "href": "viz/Non-Tourist_Customer_Rides_by_Hour_Weekday_vs_Weekend.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(rides_by_hour_weekpart, aes(x = hour, y = ride_count, fill = week_part)) +\ngeom_col(position = \"dodge\") +\nlabs(\ntitle = \"Customer Rides by Hour: Weekday vs Weekend (Non-Tourist Stations)\",\nx = \"Hour of Day\",\ny = \"Number of Rides\",\nfill = \"Day Type\"\n) +\nscale_x_continuous(breaks = 0:23) +\nscale_fill_manual(values = c(\"Weekday\" = \"darkblue\", \"Weekend\" = \"darkorange\")) +\ntheme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Rides_by_Hour_Weekday_vs_Weekend.html#customer-rides-by-hour-weekday-vs-weekend-non-tourist-stations",
    "href": "viz/Non-Tourist_Customer_Rides_by_Hour_Weekday_vs_Weekend.html#customer-rides-by-hour-weekday-vs-weekend-non-tourist-stations",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(rides_by_hour_weekpart, aes(x = hour, y = ride_count, fill = week_part)) +\ngeom_col(position = \"dodge\") +\nlabs(\ntitle = \"Customer Rides by Hour: Weekday vs Weekend (Non-Tourist Stations)\",\nx = \"Hour of Day\",\ny = \"Number of Rides\",\nfill = \"Day Type\"\n) +\nscale_x_continuous(breaks = 0:23) +\nscale_fill_manual(values = c(\"Weekday\" = \"darkblue\", \"Weekend\" = \"darkorange\")) +\ntheme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_by_Hour_Faceted_by_Season.html",
    "href": "viz/Non-Tourist_Customer_Ride_by_Hour_Faceted_by_Season.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Hourly customer ride patterns by season at non-tourist stations. Weekday rides peak strongly in the late afternoon during warmer seasons, while weekend rides are more evenly distributed. Winter shows the lowest activity overall.\n\n\n\n\nTitle: Customer Rides by Hour, Faceted by Season (Non-Tourist Stations)\nX-axis: Hour of Day (0–23)\nY-axis: Ride Count\nLine Colors:\n- Blue: Weekday\n- Orange: Weekend\nFacets (Panels):\n- Spring: Moderate ride volume, single afternoon peak around 17:00\n- Summer: Highest ride volume overall, with a sharp weekday peak from 16:00–18:00\n- Fall: Similar to spring but with slightly lower volume\n- Winter: Subdued ride activity, flatter distribution\n\n\n\n\n\nCommuting Behavior: The sharp weekday peaks in summer and fall suggest commuter-driven use around 17:00, especially among customers using the system for one-way travel home from work or transit.\nSeasonal Sensitivity: Weekend ride patterns are flatter across the day and more seasonally stable, while weekday patterns show strong seasonal variation.\nCold Weather Impact: Winter reduces both weekday and weekend ride volumes significantly, confirming seasonality in casual rider behavior.\n\nLet me know if you’d like to cross-reference this with subscriber behavior or include summary stats in the image notes."
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_by_Hour_Faceted_by_Season.html#customer-rides-by-hour-faceted-by-season-non-tourist-stations",
    "href": "viz/Non-Tourist_Customer_Ride_by_Hour_Faceted_by_Season.html#customer-rides-by-hour-faceted-by-season-non-tourist-stations",
    "title": "Bike share case-study",
    "section": "",
    "text": "Hourly customer ride patterns by season at non-tourist stations. Weekday rides peak strongly in the late afternoon during warmer seasons, while weekend rides are more evenly distributed. Winter shows the lowest activity overall.\n\n\n\n\nTitle: Customer Rides by Hour, Faceted by Season (Non-Tourist Stations)\nX-axis: Hour of Day (0–23)\nY-axis: Ride Count\nLine Colors:\n- Blue: Weekday\n- Orange: Weekend\nFacets (Panels):\n- Spring: Moderate ride volume, single afternoon peak around 17:00\n- Summer: Highest ride volume overall, with a sharp weekday peak from 16:00–18:00\n- Fall: Similar to spring but with slightly lower volume\n- Winter: Subdued ride activity, flatter distribution\n\n\n\n\n\nCommuting Behavior: The sharp weekday peaks in summer and fall suggest commuter-driven use around 17:00, especially among customers using the system for one-way travel home from work or transit.\nSeasonal Sensitivity: Weekend ride patterns are flatter across the day and more seasonally stable, while weekday patterns show strong seasonal variation.\nCold Weather Impact: Winter reduces both weekday and weekend ride volumes significantly, confirming seasonality in casual rider behavior.\n\nLet me know if you’d like to cross-reference this with subscriber behavior or include summary stats in the image notes."
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_Duration_for_Loop_Rides.html",
    "href": "viz/Non-Tourist_Customer_Ride_Duration_for_Loop_Rides.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_Duration_for_Loop_Rides.html#non-tourist-customer-ride-duration-for-loop-rides",
    "href": "viz/Non-Tourist_Customer_Ride_Duration_for_Loop_Rides.html#non-tourist-customer-ride-duration-for-loop-rides",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_Duration_Distribution.html",
    "href": "viz/Non-Tourist_Customer_Ride_Duration_Distribution.html",
    "title": "Non-Tourist Customer Ride Duration Distribution",
    "section": "",
    "text": "Non-Tourist Customer Ride Duration Distribution\n\n  \n\nFIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = ride_length_min)) +\n     geom_histogram(binwidth = 5, fill = \"darkorange\", color = \"white\") +\n     labs(\n         title = \"Non-Tourist Customer Ride Duration Distribution\",\n         x = \"Ride Length (minutes)\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_Count_by_Distance.html",
    "href": "viz/Non-Tourist_Customer_Ride_Count_by_Distance.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_Count_by_Distance.html#non-tourist-customer-ride-count-by-distance",
    "href": "viz/Non-Tourist_Customer_Ride_Count_by_Distance.html#non-tourist-customer-ride-count-by-distance",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Distribution_of_Station-to-Station_Distance.html",
    "href": "viz/Non-Tourist_Customer_Distribution_of_Station-to-Station_Distance.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Distribution_of_Station-to-Station_Distance.html#non-tourist-customer-distribution-of-stations-to-station-distance",
    "href": "viz/Non-Tourist_Customer_Distribution_of_Station-to-Station_Distance.html#non-tourist-customer-distribution-of-stations-to-station-distance",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION"
  },
  {
    "objectID": "viz/Hourly_Rides_vs_Temp.html",
    "href": "viz/Hourly_Rides_vs_Temp.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nThis chart illustrates the relationship between ambient temperature (°C) and the number of rides starting at that temperature. Data is grouped into 2°C bins to smooth short-term fluctuations and reveal broader trends..\n\nThe x-axis shows temperature in degrees Celsius.\nThe y-axis displays the total number of rides per bin, formatted with metric suffixes (e.g., 1k, 1m, etc).\nGrid lines and a clear legend outside the plot area aid interpretability.\n\nThree ride categories are plotted:\n\nTotal Rides (all users)\nSubscribers (dark blue line)\nCustomers (dark orange line)\n\n\n\n\nBike usage increases with warmer weather, peaking for both Subscribers and Customers at 26°C (78.8∘F) temperatures, after which it falls off sharplybe.\nSubscribers tend to be less dependant on temperature range (correlation coefficient VALUE compared to VALUE for Customers), but sill follow the same basic pattern.\nCustomers show a sharper increase in usage with warmth, indicating stronger sensitivity to weather.\n\nThese trends can inform operational decisions and user engagement strategies, particularly around marketing and bike redistribution efforts during seasonal changes.\nBelow is the the SQL command used to gather data for this chart.\n.headers off\n.mode tabs\n.output temp_vs_rides.tsv\n\nWITH binned AS (                          -- 2 °C comfort‑oriented buckets\n    SELECT\n        CAST(temp / 2.0 AS INT) * 2              AS temp_bin,         -- –10,‑8,…,34\n        r.user_type,\n        SUM(r.rides)                             AS rides\n    FROM rides_per_hour_tbl   AS r\n    JOIN hourly_weather       AS w  ON w.epoch = r.epoch\n    GROUP BY temp_bin, r.user_type\n), pivot AS (                             -- turn rows into columns\n    SELECT\n        temp_bin,\n        SUM(rides)                                  AS total,\n        SUM(CASE WHEN user_type='subscriber' THEN rides END) AS subs,\n        SUM(CASE WHEN user_type='customer'   THEN rides END) AS cust\n    FROM binned\n    GROUP BY temp_bin\n    ORDER BY temp_bin\n)\nSELECT temp_bin, total, subs, cust\nFROM pivot;\n\n.output stdout\nset format y \"%.0s%c\"\nset term wxt           \nset title \"Hourly Rides vs. Temperature\"\nset xlabel \"Temperature (°C)\"\nset ylabel \"Rides per hour\"\nset grid\nset datafile separator '\\t'   \nset key outside\nplot \\\n    \"temp_vs_rides.tsv\" every ::1::34 using 1:2 with lines lw 2 lc rgb \"black\" title \"Total\", \\\n    \"\"      every ::1::34 using 1:3 with lines lw 2 lc rgb \"dark-blue\" title \"Subscribers\", \\\n    \"\"      every ::1::34 using 1:4 with lines lw 2 lc rgb \"dark-orange\" title \"Customers\""
  },
  {
    "objectID": "viz/Hourly_Rides_vs_Temp.html#hourly-rides-vs.-temperature-2c-bins",
    "href": "viz/Hourly_Rides_vs_Temp.html#hourly-rides-vs.-temperature-2c-bins",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nThis chart illustrates the relationship between ambient temperature (°C) and the number of rides starting at that temperature. Data is grouped into 2°C bins to smooth short-term fluctuations and reveal broader trends..\n\nThe x-axis shows temperature in degrees Celsius.\nThe y-axis displays the total number of rides per bin, formatted with metric suffixes (e.g., 1k, 1m, etc).\nGrid lines and a clear legend outside the plot area aid interpretability.\n\nThree ride categories are plotted:\n\nTotal Rides (all users)\nSubscribers (dark blue line)\nCustomers (dark orange line)\n\n\n\n\nBike usage increases with warmer weather, peaking for both Subscribers and Customers at 26°C (78.8∘F) temperatures, after which it falls off sharplybe.\nSubscribers tend to be less dependant on temperature range (correlation coefficient VALUE compared to VALUE for Customers), but sill follow the same basic pattern.\nCustomers show a sharper increase in usage with warmth, indicating stronger sensitivity to weather.\n\nThese trends can inform operational decisions and user engagement strategies, particularly around marketing and bike redistribution efforts during seasonal changes.\nBelow is the the SQL command used to gather data for this chart.\n.headers off\n.mode tabs\n.output temp_vs_rides.tsv\n\nWITH binned AS (                          -- 2 °C comfort‑oriented buckets\n    SELECT\n        CAST(temp / 2.0 AS INT) * 2              AS temp_bin,         -- –10,‑8,…,34\n        r.user_type,\n        SUM(r.rides)                             AS rides\n    FROM rides_per_hour_tbl   AS r\n    JOIN hourly_weather       AS w  ON w.epoch = r.epoch\n    GROUP BY temp_bin, r.user_type\n), pivot AS (                             -- turn rows into columns\n    SELECT\n        temp_bin,\n        SUM(rides)                                  AS total,\n        SUM(CASE WHEN user_type='subscriber' THEN rides END) AS subs,\n        SUM(CASE WHEN user_type='customer'   THEN rides END) AS cust\n    FROM binned\n    GROUP BY temp_bin\n    ORDER BY temp_bin\n)\nSELECT temp_bin, total, subs, cust\nFROM pivot;\n\n.output stdout\nset format y \"%.0s%c\"\nset term wxt           \nset title \"Hourly Rides vs. Temperature\"\nset xlabel \"Temperature (°C)\"\nset ylabel \"Rides per hour\"\nset grid\nset datafile separator '\\t'   \nset key outside\nplot \\\n    \"temp_vs_rides.tsv\" every ::1::34 using 1:2 with lines lw 2 lc rgb \"black\" title \"Total\", \\\n    \"\"      every ::1::34 using 1:3 with lines lw 2 lc rgb \"dark-blue\" title \"Subscribers\", \\\n    \"\"      every ::1::34 using 1:4 with lines lw 2 lc rgb \"dark-orange\" title \"Customers\""
  },
  {
    "objectID": "viz/Frequency_of_Temp_bins.html",
    "href": "viz/Frequency_of_Temp_bins.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(aes(x = temp_bin, y = n)) +\n  geom_col(fill = \"gray\") +\n  labs(title = \"Frequency of Temperature Bins\", x = \"Temp (°C)\", y = \"Hours Observed\")"
  },
  {
    "objectID": "viz/Frequency_of_Temp_bins.html#frequency-of-temperature-bins",
    "href": "viz/Frequency_of_Temp_bins.html#frequency-of-temperature-bins",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(aes(x = temp_bin, y = n)) +\n  geom_col(fill = \"gray\") +\n  labs(title = \"Frequency of Temperature Bins\", x = \"Temp (°C)\", y = \"Hours Observed\")"
  },
  {
    "objectID": "viz/Divvy_Stations_in_QGIS.html",
    "href": "viz/Divvy_Stations_in_QGIS.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Divvy Stations in QGIS\n\n\nThis is a screen shot of the Divvy Stations plotted in QGIS. This was found in Divvy_Stations_2013.shp.zip which was included in the Divvy_Stations_Trips_2013.zip file."
  },
  {
    "objectID": "viz/Divvy_Stations_in_QGIS.html#divvy-stations-in-qgis",
    "href": "viz/Divvy_Stations_in_QGIS.html#divvy-stations-in-qgis",
    "title": "Bike share case-study",
    "section": "",
    "text": "Divvy Stations in QGIS\n\n\nThis is a screen shot of the Divvy Stations plotted in QGIS. This was found in Divvy_Stations_2013.shp.zip which was included in the Divvy_Stations_Trips_2013.zip file."
  },
  {
    "objectID": "viz/Avg_Ride_Duration_by_Bike_and_User_type_post_elec.html",
    "href": "viz/Avg_Ride_Duration_by_Bike_and_User_type_post_elec.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Average Ride Duration by Bike Type and User Type\n\n  \n\nFIGCAPTION\n\n\nThe chart titled “Average Ride Duration by Bike Type and User Type” visualizes the average duration (in minutes) of rides for different bike types, segmented by user type (Subscriber vs Customer).\n*** Key observations:\nBike Types: The chart includes classic_bike, docked_bike, electric_bike, and electric_scooter.\nUser Types:\n    Subscribers (in red)\n    Customers (in blue/turquoise)\n*** Findings:\nDocked Bike:\n    Customers have by far the highest average ride duration (over 200 minutes, with a large error bar indicating significant variability).\n    Subscribers do not appear to use docked bikes (no red bar for this category).\n\nClassic Bike:\n    Customers have a higher average ride duration than subscribers.\n    Both user types' durations are much lower than for docked bikes, with customers averaging around 30-40 minutes and subscribers around 15 minutes.\n\nElectric Bike and Electric Scooter:\n    Both user types have similar, relatively low average durations (around 10-15 minutes), with customers slightly higher than subscribers.\n*** General Insight:\nCustomers (non-subscribers) tend to take much longer rides than subscribers, especially on docked bikes.\nSubscribers generally have shorter, more consistent ride durations across all bike types.\nThe variability (as shown by the error bars) is particularly large for docked bikes used by customers.\nggplot(post_electric_rides_df, aes(x = bike_type, y = rides_per_day, fill = user_type)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(\n    title = \"Average Daily Rides by Bike Type and User Type\",\n    x = \"Bike Type\",\n    y = \"Average Rides per Day\",\n    fill = \"User Type\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "viz/Avg_Daily_Rides_by_Bike_and_User_Type_post_elec.html",
    "href": "viz/Avg_Daily_Rides_by_Bike_and_User_Type_post_elec.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n\n\nThis bar chart displays the average number of daily rides by bike type, grouped by user type (Subscriber vs. Customer), for the period after the introduction of electric bikes and scooters.\n\n\n\n\nX-Axis (Bike Type):\n\nclassic_bike\ndocked_bike\nelectric_bike\nelectric_scooter\n\nY-Axis (Average Rides per Day):\n\nRanges from 0 to over 4,500 rides per day.\n\nColor Legend:\n\nRed = Subscriber\nTeal = Customer\n\n\n\n\n\n\nClassic Bikes:\n\nMost used overall.\nSubscribers (red) significantly outnumber Customers in ride volume.\n\nDocked Bikes:\n\nVery low usage overall.\nOnly Customers use docked bikes in this dataset — Subscribers have no visible rides.\n\nElectric Bikes:\n\nPopular among both user types.\nSubscribers still dominate, but the Customer share is substantial.\n\nElectric Scooters:\n\nSlightly more popular with Customers than Subscribers.\nTotal volume is lower than bikes but non-trivial.\n\n\n\n\n\n\nSubscriber Preference:\n\nStrongly favors classic and electric bikes.\nLikely reflects commuting and utilitarian travel patterns.\n\nCustomer Preference:\n\nMore evenly spread across bike types.\nHigher share of docked bike and scooter usage, suggesting casual or occasional use.\n\nModal Shift:\n\nThe presence of electric modes (bike and scooter) introduces significant usage from both user groups, possibly pulling some traffic away from classic bikes.\n\n\n\n\n\nThis visualization supports: - Infrastructure planning (e.g., expansion of electric charging or docking stations), - Marketing strategy (targeting modal preferences by user type), - Evaluating post-launch success of electric mobility options.\npost_electric_rides_df &lt;- dbGetQuery(con, \"SELECT\n   DATE(start_time, 'unixepoch') AS ride_date,\n   user_type,\n   bike_type,\n   COUNT(*) AS ride_count,\n   AVG((end_time - start_time) / 60.0) AS avg_duration_minutes\nFROM rides\nWHERE start_time &gt;= strftime('%s', '2023-01-01') --first e-bike appeared\nGROUP BY ride_date, user_type, bike_type;\n\")\n\ndaily_avg_df &lt;- post_electric_rides_df %&gt;%\n  group_by(user_type, bike_type) %&gt;%\n  summarise(\n    avg_rides_per_day = mean(ride_count),\n    .groups = \"drop\"\n  )\nggplot(daily_avg_df, aes(\n     x = bike_type,\n     y = avg_rides_per_day,\n     fill = fct_recode(as.factor(user_type),\n                       \"Subscriber\" = \"0\",\n                       \"Customer\" = \"1\")\n )) +\n     geom_bar(stat = \"identity\", position = \"dodge\") +\n     labs(\n         title = \"Average Daily Rides by Bike Type and User Type (Post-Electric Launch)\",\n         x = \"Bike Type\",\n         y = \"Average Rides per Day\",\n         fill = \"User Type\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Avg_Daily_Rides_by_Bike_and_User_Type_post_elec.html#image-notes-average-daily-rides-by-bike-type-and-user-type-post-electric-launch",
    "href": "viz/Avg_Daily_Rides_by_Bike_and_User_Type_post_elec.html#image-notes-average-daily-rides-by-bike-type-and-user-type-post-electric-launch",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n\n\nThis bar chart displays the average number of daily rides by bike type, grouped by user type (Subscriber vs. Customer), for the period after the introduction of electric bikes and scooters.\n\n\n\n\nX-Axis (Bike Type):\n\nclassic_bike\ndocked_bike\nelectric_bike\nelectric_scooter\n\nY-Axis (Average Rides per Day):\n\nRanges from 0 to over 4,500 rides per day.\n\nColor Legend:\n\nRed = Subscriber\nTeal = Customer\n\n\n\n\n\n\nClassic Bikes:\n\nMost used overall.\nSubscribers (red) significantly outnumber Customers in ride volume.\n\nDocked Bikes:\n\nVery low usage overall.\nOnly Customers use docked bikes in this dataset — Subscribers have no visible rides.\n\nElectric Bikes:\n\nPopular among both user types.\nSubscribers still dominate, but the Customer share is substantial.\n\nElectric Scooters:\n\nSlightly more popular with Customers than Subscribers.\nTotal volume is lower than bikes but non-trivial.\n\n\n\n\n\n\nSubscriber Preference:\n\nStrongly favors classic and electric bikes.\nLikely reflects commuting and utilitarian travel patterns.\n\nCustomer Preference:\n\nMore evenly spread across bike types.\nHigher share of docked bike and scooter usage, suggesting casual or occasional use.\n\nModal Shift:\n\nThe presence of electric modes (bike and scooter) introduces significant usage from both user groups, possibly pulling some traffic away from classic bikes.\n\n\n\n\n\nThis visualization supports: - Infrastructure planning (e.g., expansion of electric charging or docking stations), - Marketing strategy (targeting modal preferences by user type), - Evaluating post-launch success of electric mobility options.\npost_electric_rides_df &lt;- dbGetQuery(con, \"SELECT\n   DATE(start_time, 'unixepoch') AS ride_date,\n   user_type,\n   bike_type,\n   COUNT(*) AS ride_count,\n   AVG((end_time - start_time) / 60.0) AS avg_duration_minutes\nFROM rides\nWHERE start_time &gt;= strftime('%s', '2023-01-01') --first e-bike appeared\nGROUP BY ride_date, user_type, bike_type;\n\")\n\ndaily_avg_df &lt;- post_electric_rides_df %&gt;%\n  group_by(user_type, bike_type) %&gt;%\n  summarise(\n    avg_rides_per_day = mean(ride_count),\n    .groups = \"drop\"\n  )\nggplot(daily_avg_df, aes(\n     x = bike_type,\n     y = avg_rides_per_day,\n     fill = fct_recode(as.factor(user_type),\n                       \"Subscriber\" = \"0\",\n                       \"Customer\" = \"1\")\n )) +\n     geom_bar(stat = \"identity\", position = \"dodge\") +\n     labs(\n         title = \"Average Daily Rides by Bike Type and User Type (Post-Electric Launch)\",\n         x = \"Bike Type\",\n         y = \"Average Rides per Day\",\n         fill = \"User Type\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html",
    "href": "viz/visualizations.html",
    "title": "Visualizations",
    "section": "",
    "text": "This page presents visualizations from the case study. Visuals are grouped into thematic sections covering time-based patterns, temperature effects, spatial behavior, and more.\n\n\n\n\n\n\n  \n\nFIGCAPTION\n\n\nThis interactive map of the top 50 stations includes the top 50 stations by number of subscriber rides and the top 50 stations by number of customer rides. We break from the normal color scheme as more contrast was required due to the preexisting colors in the map. So the dots for subscriber stations rendered in blue and the dots for customer stations rendered in red. The dots for stations are offset slightly to avoid one dot obscuring the other for the cases where the station is in the top 50 for both subscribers and customers. This is accomplished by using a data frame where the location of the stations is offset. The size of the dots is scaled by the total number of rides (subscriber or customer as appropriate), so that stations with more rides are larger dots.\nIt was created in R using Leaflet.\n\n\n\n\n  \n\nThis interactive map shows the top 10 most frequently traveled station-to-station ride paths for a selected rider group—All Riders, Subscribers, or Customers. Line colors indicate ride volume, revealing distinct spatial usage patterns: casual riders concentrate near the lakefront and tourist zones, while subscribers follow more distributed, commuter-aligned routes. Click to open the full visualization in Tableau.\n\n\n\n\nThis interactive map displays the top 10 most common ride paths (station-to-station pairs) for a selected user group: All Riders, Subscribers, or Customers.\n\nEach line represents a frequently traveled path, regardless of direction.\nLine color corresponds to ride volume between those stations.\nUsers can filter by rider type using the control panel on the right.\n\nThis visualization highlights differences in spatial behavior between groups:\n\nCustomers tend to use routes near the lakefront and popular tourist zones.\nSubscribers favor more distributed, commuter-oriented paths.\n\n“Station usage differs substantially by rider type, bu not in the expected way.”\n\n  \n\nFIGCAPTION\n\n\n\n\n\nThis histogram compares ride volumes for station-to-station pairs with at least 10,000 rides, of which there are 88, sorted by total combined ride count.\nEach bar shows the ride count split between Subscribers (dark blue) and Customers (orange) for a specific path.\nThis view emphasizes which ride paths are dominated by Subscribers (often commuter routes) versus those with more balanced or Customer-heavy traffic.\n\n  \n\nFIGCAPTION\n\n\n\n\n\nThis histogram visualizes the distribution of ride paths (station-to-station pairs) by their subscriber ratio, defined as the proportion of rides taken by Subscribers versus Customers for each path. - The dataset includes all the bi-directional path with at least 10,000 rides. There are 88 such paths.\n\nEach path name represents one bi-directional path, with the length of the bar corresponding to the subscriber ratio (from 0% subscriber to 100%).\n\nThe chart can be sorted by:\n\nPath name (alphabetical)\nSubscriber ratio (to identify Customer-heavy or Subscriber-heavy routes)\n\nThis visualization reveals important asymmetries in how ride paths are used:\n\nPaths with very low subscriber ratios often correspond to tourist-heavy or leisure routes.\nPaths with high subscriber ratios are more likely to represent commuting corridors or utilitarian rides between residential and business areas.\n\n\n\n\n\n\n\n\nRides analyzed across time dimensions like hour, day, month, or season.\n\n\n\n\n\n  \n\nFIGCAPTION\n\n\nggplot(rides_by_hour_weekpart, aes(x = hour, y = ride_count, fill = week_part)) +\n     geom_col(position = \"dodge\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Hour of Day\",\n         subtitle = \"Adjusted to Chicago Local Time\",\n         x = \"Hour of Day\",\n         y = \"Ride Count\",\n         fill = \"Day Type\"\n     ) +\n     scale_x_continuous(breaks = 0:23) +\n     theme_minimal()\n\n\n\n\n\n  \n\nFIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = day_of_week)) +\n     geom_bar(fill = \"steelblue\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Day of the Week\",\n         x = \"Day of the Week\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()\n\n\n\n\n  \n\nFIGCAPTION\n\n\nggplot(rides_by_hour_weekpart, aes(x = hour, y = ride_count, fill = week_part)) +\ngeom_col(position = \"dodge\") +\nlabs(\ntitle = \"Customer Rides by Hour: Weekday vs Weekend (Non-Tourist Stations)\",\nx = \"Hour of Day\",\ny = \"Number of Rides\",\nfill = \"Day Type\"\n) +\nscale_x_continuous(breaks = 0:23) +\nscale_fill_manual(values = c(\"Weekday\" = \"darkblue\", \"Weekend\" = \"darkorange\")) +\ntheme_minimal()\n\n\n\n\n\n  \n\nHourly customer ride patterns by season at non-tourist stations. Weekday rides peak strongly in the late afternoon during warmer seasons, while weekend rides are more evenly distributed. Winter shows the lowest activity overall.\n\n\n\n\nTitle: Customer Rides by Hour, Faceted by Season (Non-Tourist Stations)\nX-axis: Hour of Day (0–23)\nY-axis: Ride Count\nLine Colors:\n- Blue: Weekday\n- Orange: Weekend\nFacets (Panels):\n- Spring: Moderate ride volume, single afternoon peak around 17:00\n- Summer: Highest ride volume overall, with a sharp weekday peak from 16:00–18:00\n- Fall: Similar to spring but with slightly lower volume\n- Winter: Subdued ride activity, flatter distribution\n\n\n\n\n\nCommuting Behavior: The sharp weekday peaks in summer and fall suggest commuter-driven use around 17:00, especially among customers using the system for one-way travel home from work or transit.\nSeasonal Sensitivity: Weekend ride patterns are flatter across the day and more seasonally stable, while weekday patterns show strong seasonal variation.\nCold Weather Impact: Winter reduces both weekday and weekend ride volumes significantly, confirming seasonality in casual rider behavior.\n\nLet me know if you’d like to cross-reference this with subscriber behavior or include summary stats in the image notes.\n\n\n\n\n\n\n  \n\nFIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = month)) +\n     geom_bar(fill = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Month\",\n         x = \"Month\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()\n\n\n\n\n\n  \n\nFIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = season)) +\n     geom_bar(fill = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Season\",\n         x = \"Season\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()\n\n\n\n\n\n  \n\nFIGCAPTION\n\n\nggplot(rides_by_hour_season, aes(x = hour, y = ride_count, fill = week_part)) +\n  geom_col(position = \"dodge\") +\n  facet_wrap(~season, ncol = 2) +\n  scale_x_continuous(breaks = 0:23) +\n  scale_fill_manual(values = c(\"Weekday\" = \"darkblue\", \"Weekend\" = \"darkorange\")) +\n  labs(\n    title = \"Hourly Ride Patterns by Season and Day Type (Non-Tourist Stations)\",\n    x = \"Hour of Day\",\n    y = \"Number of Rides\",\n    fill = \"Day Type\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n  \n\nProportion of daily non-tourist rides by hour of day and day type (weekday vs. weekend). Weekdays show a clear peak in the late afternoon commute hours, while weekends have a more uniform midday distribution.\n\n\n\n\nThis heatmap visualizes the hourly share of total daily rides for non-tourist users, broken out by Day Type (Weekday vs. Weekend). Darker orange indicates a higher proportion of rides within that hour relative to the day’s total.\n\n\n\nWeekdays show a pronounced peak around 17:00–18:00, corresponding to the evening commute.\nWeekend ride proportions are more evenly spread from late morning through mid-afternoon, peaking slightly between 12:00–16:00.\nEarly morning (before 6:00) and late evening (after 21:00) show minimal ride activity for both day types.\n\nThis visualization provides insight into how ride timing differs based on routine schedules, further supporting inferences about commuter versus recreational behavior.\nggplot(ride_props, aes(x = hour, y = week_part, fill = prop)) +\n     geom_tile() +\n     scale_fill_gradient(low = \"white\", high = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Proportion of Daily Rides by Hour and Day Type\",\n         x = \"Hour of Day\",\n         y = \"Day Type\",\n         fill = \"Ride Proportion\"\n     ) +\n     theme_minimal()\n\n\n\n\n\n\n  \n\nHourly difference in ride proportions: Weekday minus Weekend. Red tones highlight hours where weekday rides are more frequent proportionally; blue tones highlight hours dominated by weekend activity.\n\n\n\n\nTitle: Difference in Ride Proportions: Weekday - Weekend X-axis: Hour of Day (0–23) Y-axis: Arbitrary (used to create banded heatmap effect) Color Scale:\n\nRed: Higher ride proportion on weekdays\nBlue: Higher ride proportion on weekends\nWhite: No significant difference in proportion\n\nInterpretation\n\nMorning hours (~7–9 AM) and afternoon hours (~4–6 PM) are clearly more active on weekdays, likely driven by commuting.\nMidday (10 AM–3 PM) shows a higher proportional share of rides on weekends, possibly indicating more recreational usage during these hours.\nNighttime hours (~8 PM onward) still lean toward weekday use, albeit more modestly.\n\nThis visualization normalizes by total weekday and weekend ride volume, enabling meaningful comparison of usage patterns across the day regardless of total volume differences.\n’’’R\nride_query &lt;- sprintf(” SELECT ride_id, start_time, end_time, start_station_id, end_station_id, bike_type FROM rides WHERE user_type = 1 AND start_station_id IN (%s) AND end_station_id IN (%s) AND start_time &gt;= strftime(‘%%s’, ‘2023-01-01’) “, station_ids_sql, station_ids_sql)\nnon_tourist_customer_rides_df &lt;- dbGetQuery(con, ride_query)\nnon_tourist_customer_rides_df &lt;- non_tourist_customer_rides_df %&gt;% mutate( ride_date = as.Date(as.POSIXct(start_time, origin = “1970-01-01”)), day_of_week = weekdays(ride_date), month = format(ride_date, “%B”), season = case_when( month %in% c(“December”, “January”, “February”) ~ “Winter”, month %in% c(“March”, “April”, “May”) ~ “Spring”, month %in% c(“June”, “July”, “August”) ~ “Summer”, month %in% c(“September”, “October”, “November”) ~ “Fall” ) )"
  },
  {
    "objectID": "viz/visualizations.html#interactive-visuals",
    "href": "viz/visualizations.html#interactive-visuals",
    "title": "Visualizations",
    "section": "",
    "text": "FIGCAPTION\n\n\nThis interactive map of the top 50 stations includes the top 50 stations by number of subscriber rides and the top 50 stations by number of customer rides. We break from the normal color scheme as more contrast was required due to the preexisting colors in the map. So the dots for subscriber stations rendered in blue and the dots for customer stations rendered in red. The dots for stations are offset slightly to avoid one dot obscuring the other for the cases where the station is in the top 50 for both subscribers and customers. This is accomplished by using a data frame where the location of the stations is offset. The size of the dots is scaled by the total number of rides (subscriber or customer as appropriate), so that stations with more rides are larger dots.\nIt was created in R using Leaflet.\n\n\n\n\n  \n\nThis interactive map shows the top 10 most frequently traveled station-to-station ride paths for a selected rider group—All Riders, Subscribers, or Customers. Line colors indicate ride volume, revealing distinct spatial usage patterns: casual riders concentrate near the lakefront and tourist zones, while subscribers follow more distributed, commuter-aligned routes. Click to open the full visualization in Tableau.\n\n\n\n\nThis interactive map displays the top 10 most common ride paths (station-to-station pairs) for a selected user group: All Riders, Subscribers, or Customers.\n\nEach line represents a frequently traveled path, regardless of direction.\nLine color corresponds to ride volume between those stations.\nUsers can filter by rider type using the control panel on the right.\n\nThis visualization highlights differences in spatial behavior between groups:\n\nCustomers tend to use routes near the lakefront and popular tourist zones.\nSubscribers favor more distributed, commuter-oriented paths.\n\n“Station usage differs substantially by rider type, bu not in the expected way.”\n\n  \n\nFIGCAPTION\n\n\n\n\n\nThis histogram compares ride volumes for station-to-station pairs with at least 10,000 rides, of which there are 88, sorted by total combined ride count.\nEach bar shows the ride count split between Subscribers (dark blue) and Customers (orange) for a specific path.\nThis view emphasizes which ride paths are dominated by Subscribers (often commuter routes) versus those with more balanced or Customer-heavy traffic.\n\n  \n\nFIGCAPTION\n\n\n\n\n\nThis histogram visualizes the distribution of ride paths (station-to-station pairs) by their subscriber ratio, defined as the proportion of rides taken by Subscribers versus Customers for each path. - The dataset includes all the bi-directional path with at least 10,000 rides. There are 88 such paths.\n\nEach path name represents one bi-directional path, with the length of the bar corresponding to the subscriber ratio (from 0% subscriber to 100%).\n\nThe chart can be sorted by:\n\nPath name (alphabetical)\nSubscriber ratio (to identify Customer-heavy or Subscriber-heavy routes)\n\nThis visualization reveals important asymmetries in how ride paths are used:\n\nPaths with very low subscriber ratios often correspond to tourist-heavy or leisure routes.\nPaths with high subscriber ratios are more likely to represent commuting corridors or utilitarian rides between residential and business areas."
  },
  {
    "objectID": "viz/visualizations.html#static-visualizations",
    "href": "viz/visualizations.html#static-visualizations",
    "title": "Visualizations",
    "section": "",
    "text": "Rides analyzed across time dimensions like hour, day, month, or season."
  },
  {
    "objectID": "viz/visualizations.html#non-tourist-customer-rides-by-hour-of-day",
    "href": "viz/visualizations.html#non-tourist-customer-rides-by-hour-of-day",
    "title": "Visualizations",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(rides_by_hour_weekpart, aes(x = hour, y = ride_count, fill = week_part)) +\n     geom_col(position = \"dodge\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Hour of Day\",\n         subtitle = \"Adjusted to Chicago Local Time\",\n         x = \"Hour of Day\",\n         y = \"Ride Count\",\n         fill = \"Day Type\"\n     ) +\n     scale_x_continuous(breaks = 0:23) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#non-tourist-customer-rides-by-day-of-the-week",
    "href": "viz/visualizations.html#non-tourist-customer-rides-by-day-of-the-week",
    "title": "Visualizations",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = day_of_week)) +\n     geom_bar(fill = \"steelblue\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Day of the Week\",\n         x = \"Day of the Week\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#customer-rides-by-hour-weekday-vs-weekend-non-tourist-stations",
    "href": "viz/visualizations.html#customer-rides-by-hour-weekday-vs-weekend-non-tourist-stations",
    "title": "Visualizations",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(rides_by_hour_weekpart, aes(x = hour, y = ride_count, fill = week_part)) +\ngeom_col(position = \"dodge\") +\nlabs(\ntitle = \"Customer Rides by Hour: Weekday vs Weekend (Non-Tourist Stations)\",\nx = \"Hour of Day\",\ny = \"Number of Rides\",\nfill = \"Day Type\"\n) +\nscale_x_continuous(breaks = 0:23) +\nscale_fill_manual(values = c(\"Weekday\" = \"darkblue\", \"Weekend\" = \"darkorange\")) +\ntheme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#customer-rides-by-hour-faceted-by-season-non-tourist-stations",
    "href": "viz/visualizations.html#customer-rides-by-hour-faceted-by-season-non-tourist-stations",
    "title": "Visualizations",
    "section": "",
    "text": "Hourly customer ride patterns by season at non-tourist stations. Weekday rides peak strongly in the late afternoon during warmer seasons, while weekend rides are more evenly distributed. Winter shows the lowest activity overall.\n\n\n\n\nTitle: Customer Rides by Hour, Faceted by Season (Non-Tourist Stations)\nX-axis: Hour of Day (0–23)\nY-axis: Ride Count\nLine Colors:\n- Blue: Weekday\n- Orange: Weekend\nFacets (Panels):\n- Spring: Moderate ride volume, single afternoon peak around 17:00\n- Summer: Highest ride volume overall, with a sharp weekday peak from 16:00–18:00\n- Fall: Similar to spring but with slightly lower volume\n- Winter: Subdued ride activity, flatter distribution\n\n\n\n\n\nCommuting Behavior: The sharp weekday peaks in summer and fall suggest commuter-driven use around 17:00, especially among customers using the system for one-way travel home from work or transit.\nSeasonal Sensitivity: Weekend ride patterns are flatter across the day and more seasonally stable, while weekday patterns show strong seasonal variation.\nCold Weather Impact: Winter reduces both weekday and weekend ride volumes significantly, confirming seasonality in casual rider behavior.\n\nLet me know if you’d like to cross-reference this with subscriber behavior or include summary stats in the image notes."
  },
  {
    "objectID": "viz/visualizations.html#non-tourist-customer-rides-by-month",
    "href": "viz/visualizations.html#non-tourist-customer-rides-by-month",
    "title": "Visualizations",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = month)) +\n     geom_bar(fill = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Month\",\n         x = \"Month\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#non-tourist-customer-rides-by-season",
    "href": "viz/visualizations.html#non-tourist-customer-rides-by-season",
    "title": "Visualizations",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = season)) +\n     geom_bar(fill = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Season\",\n         x = \"Season\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#hourly-ride-patterns-by-season-and-day-type-non-tourist-stations",
    "href": "viz/visualizations.html#hourly-ride-patterns-by-season-and-day-type-non-tourist-stations",
    "title": "Visualizations",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(rides_by_hour_season, aes(x = hour, y = ride_count, fill = week_part)) +\n  geom_col(position = \"dodge\") +\n  facet_wrap(~season, ncol = 2) +\n  scale_x_continuous(breaks = 0:23) +\n  scale_fill_manual(values = c(\"Weekday\" = \"darkblue\", \"Weekend\" = \"darkorange\")) +\n  labs(\n    title = \"Hourly Ride Patterns by Season and Day Type (Non-Tourist Stations)\",\n    x = \"Hour of Day\",\n    y = \"Number of Rides\",\n    fill = \"Day Type\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#non-tourist-proportion-of-daily-rides-by-hour-and-day-type",
    "href": "viz/visualizations.html#non-tourist-proportion-of-daily-rides-by-hour-and-day-type",
    "title": "Visualizations",
    "section": "",
    "text": "Proportion of daily non-tourist rides by hour of day and day type (weekday vs. weekend). Weekdays show a clear peak in the late afternoon commute hours, while weekends have a more uniform midday distribution.\n\n\n\n\nThis heatmap visualizes the hourly share of total daily rides for non-tourist users, broken out by Day Type (Weekday vs. Weekend). Darker orange indicates a higher proportion of rides within that hour relative to the day’s total.\n\n\n\nWeekdays show a pronounced peak around 17:00–18:00, corresponding to the evening commute.\nWeekend ride proportions are more evenly spread from late morning through mid-afternoon, peaking slightly between 12:00–16:00.\nEarly morning (before 6:00) and late evening (after 21:00) show minimal ride activity for both day types.\n\nThis visualization provides insight into how ride timing differs based on routine schedules, further supporting inferences about commuter versus recreational behavior.\nggplot(ride_props, aes(x = hour, y = week_part, fill = prop)) +\n     geom_tile() +\n     scale_fill_gradient(low = \"white\", high = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Proportion of Daily Rides by Hour and Day Type\",\n         x = \"Hour of Day\",\n         y = \"Day Type\",\n         fill = \"Ride Proportion\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#difference-in-ride-proportions-weedkay-to-weekend",
    "href": "viz/visualizations.html#difference-in-ride-proportions-weedkay-to-weekend",
    "title": "Visualizations",
    "section": "",
    "text": "Hourly difference in ride proportions: Weekday minus Weekend. Red tones highlight hours where weekday rides are more frequent proportionally; blue tones highlight hours dominated by weekend activity.\n\n\n\n\nTitle: Difference in Ride Proportions: Weekday - Weekend X-axis: Hour of Day (0–23) Y-axis: Arbitrary (used to create banded heatmap effect) Color Scale:\n\nRed: Higher ride proportion on weekdays\nBlue: Higher ride proportion on weekends\nWhite: No significant difference in proportion\n\nInterpretation\n\nMorning hours (~7–9 AM) and afternoon hours (~4–6 PM) are clearly more active on weekdays, likely driven by commuting.\nMidday (10 AM–3 PM) shows a higher proportional share of rides on weekends, possibly indicating more recreational usage during these hours.\nNighttime hours (~8 PM onward) still lean toward weekday use, albeit more modestly.\n\nThis visualization normalizes by total weekday and weekend ride volume, enabling meaningful comparison of usage patterns across the day regardless of total volume differences.\n’’’R\nride_query &lt;- sprintf(” SELECT ride_id, start_time, end_time, start_station_id, end_station_id, bike_type FROM rides WHERE user_type = 1 AND start_station_id IN (%s) AND end_station_id IN (%s) AND start_time &gt;= strftime(‘%%s’, ‘2023-01-01’) “, station_ids_sql, station_ids_sql)\nnon_tourist_customer_rides_df &lt;- dbGetQuery(con, ride_query)\nnon_tourist_customer_rides_df &lt;- non_tourist_customer_rides_df %&gt;% mutate( ride_date = as.Date(as.POSIXct(start_time, origin = “1970-01-01”)), day_of_week = weekdays(ride_date), month = format(ride_date, “%B”), season = case_when( month %in% c(“December”, “January”, “February”) ~ “Winter”, month %in% c(“March”, “April”, “May”) ~ “Spring”, month %in% c(“June”, “July”, “August”) ~ “Summer”, month %in% c(“September”, “October”, “November”) ~ “Fall” ) )"
  },
  {
    "objectID": "viz/visualizations.html#hourly-rides-vs.-temperature-2c-bins",
    "href": "viz/visualizations.html#hourly-rides-vs.-temperature-2c-bins",
    "title": "Visualizations",
    "section": "Hourly Rides vs. Temperature (2°C bins)",
    "text": "Hourly Rides vs. Temperature (2°C bins)\n\n  \n\nFIGCAPTION\n\n\nThis chart illustrates the relationship between ambient temperature (°C) and the number of rides starting at that temperature. Data is grouped into 2°C bins to smooth short-term fluctuations and reveal broader trends..\n\nThe x-axis shows temperature in degrees Celsius.\nThe y-axis displays the total number of rides per bin, formatted with metric suffixes (e.g., 1k, 1m, etc).\nGrid lines and a clear legend outside the plot area aid interpretability.\n\nThree ride categories are plotted:\n\nTotal Rides (all users)\nSubscribers (dark blue line)\nCustomers (dark orange line)\n\n\nInsights:\n\nBike usage increases with warmer weather, peaking for both Subscribers and Customers at 26°C (78.8∘F) temperatures, after which it falls off sharplybe.\nSubscribers tend to be less dependant on temperature range (correlation coefficient VALUE compared to VALUE for Customers), but sill follow the same basic pattern.\nCustomers show a sharper increase in usage with warmth, indicating stronger sensitivity to weather.\n\nThese trends can inform operational decisions and user engagement strategies, particularly around marketing and bike redistribution efforts during seasonal changes.\nBelow is the the SQL command used to gather data for this chart.\n.headers off\n.mode tabs\n.output temp_vs_rides.tsv\n\nWITH binned AS (                          -- 2 °C comfort‑oriented buckets\n    SELECT\n        CAST(temp / 2.0 AS INT) * 2              AS temp_bin,         -- –10,‑8,…,34\n        r.user_type,\n        SUM(r.rides)                             AS rides\n    FROM rides_per_hour_tbl   AS r\n    JOIN hourly_weather       AS w  ON w.epoch = r.epoch\n    GROUP BY temp_bin, r.user_type\n), pivot AS (                             -- turn rows into columns\n    SELECT\n        temp_bin,\n        SUM(rides)                                  AS total,\n        SUM(CASE WHEN user_type='subscriber' THEN rides END) AS subs,\n        SUM(CASE WHEN user_type='customer'   THEN rides END) AS cust\n    FROM binned\n    GROUP BY temp_bin\n    ORDER BY temp_bin\n)\nSELECT temp_bin, total, subs, cust\nFROM pivot;\n\n.output stdout\nset format y \"%.0s%c\"\nset term wxt           \nset title \"Hourly Rides vs. Temperature\"\nset xlabel \"Temperature (°C)\"\nset ylabel \"Rides per hour\"\nset grid\nset datafile separator '\\t'   \nset key outside\nplot \\\n    \"temp_vs_rides.tsv\" every ::1::34 using 1:2 with lines lw 2 lc rgb \"black\" title \"Total\", \\\n    \"\"      every ::1::34 using 1:3 with lines lw 2 lc rgb \"dark-blue\" title \"Subscribers\", \\\n    \"\"      every ::1::34 using 1:4 with lines lw 2 lc rgb \"dark-orange\" title \"Customers\""
  },
  {
    "objectID": "viz/visualizations.html#hourly-ride-volume-vs-temperature",
    "href": "viz/visualizations.html#hourly-ride-volume-vs-temperature",
    "title": "Visualizations",
    "section": "Hourly Ride Volume vs Temperature",
    "text": "Hourly Ride Volume vs Temperature\n\n  \n\nFIGCAPTION\n\n\nggplot(rides_weather_df, aes(x = temp, y = rides, color = user_type)) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +\n  scale_color_manual(values = c(\"subscriber\" = \"blue\", \"customer\" = \"red\")) +\n  labs(\n    title = \"Hourly Ride Volume vs Temperature\",\n    x = \"Temperature (°C)\",\n    y = \"Hourly Ride Volume\",\n    color = \"User Type\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#frequency-of-temperature-bins",
    "href": "viz/visualizations.html#frequency-of-temperature-bins",
    "title": "Visualizations",
    "section": "Frequency of Temperature Bins",
    "text": "Frequency of Temperature Bins\n\n  \n\nFIGCAPTION\n\n\nggplot(aes(x = temp_bin, y = n)) +\n  geom_col(fill = \"gray\") +\n  labs(title = \"Frequency of Temperature Bins\", x = \"Temp (°C)\", y = \"Hours Observed\")"
  },
  {
    "objectID": "viz/visualizations.html#ride-volume-by-temperature-and-precipitation",
    "href": "viz/visualizations.html#ride-volume-by-temperature-and-precipitation",
    "title": "Visualizations",
    "section": "Ride Volume by Temperature and Precipitation",
    "text": "Ride Volume by Temperature and Precipitation\n\n  \n\nRide Volume by Temperature and Rain Condition This panel chart shows total ride volume for subscribers and customers, grouped by dry, wet, and unknown precipitation conditions. Most rides occur in dry weather at temperatures between 20–25°C. Wet conditions significantly suppress ridership for both user types, revealing clear sensitivity to rain.\n\n\n\nOverview\nThis line chart panel shows the total ride volume across 2°C temperature bins, broken down by user type (Customer vs. Subscriber) and grouped by rain condition (Dry, Wet, No data). Each panel represents a different precipitation category, allowing direct comparison of behavior under different weather conditions.\n\n\nChart Structure\n\nX-Axis (Temperature Bin °C):\n\nTemperature ranges from -30°C to +30°C.\nBinned in 2°C increments.\n\nY-Axis (Total Rides):\n\nNumber of rides recorded within each temperature bin.\n\nFacets (Panels):\n\nDry: Rides that occurred with no recorded rain.\nNo data: Weather data was missing.\nWet: Rides that occurred during rain conditions.\n\nLines:\n\nRed: Customer ride volume.\nCyan: Subscriber ride volume.\n\n\n\n\nObservations\n\nDry Conditions\n\nMost ride volume occurs here, peaking between 20–26°C.\nSubscribers consistently log more rides than customers across all temperature bins.\nClear bell-shaped distribution centered around optimal riding weather (20–25°C).\n\n\n\nNo Data\n\nVery little volume, but patterns still mirror the dry curve.\nCould include early data before weather tracking began or corrupted weather records.\n\n\n\nWet Conditions\n\nDramatic decrease in ride volume for both user types.\nSubscriber and customer patterns flatten and converge, showing less variance in behavior when it’s raining.\n\n\n\n\nInterpretation\n\nTemperature strongly influences ridership, with optimal weather (20–25°C) showing the highest activity.\nPrecipitation is a major deterrent, suppressing ride volume across all temperatures.\nSubscribers ride more often and in a wider temperature range than customers, especially when conditions are dry.\n\n\n\nUse Case\nThis visualization helps: - Quantify the impact of weather on bike share demand. - Support decisions around dynamic pricing, rebalancing, or user alerts based on forecasted weather. - Segment usage patterns based on environmental conditions, without requiring detailed user data beyond type.\ngroup_by(temp_bin, user_type, precip_label) %&gt;%\n     summarise(rides = sum(rides), .groups = \"drop\") %&gt;%\n     ggplot(aes(x = temp_bin, y = rides, color = user_type)) +\n     geom_line(size = 1) +\n     facet_wrap(~ precip_label, nrow = 1) +\n     labs(\n         title = \"Ride Volume by Temperature and Precipitation\",\n         subtitle = \"2°C temperature bins grouped by rain condition\",\n         x = \"Temperature Bin (°C)\",\n         y = \"Total Rides\",\n         color = \"User Type\"\n     ) +\n     scale_x_continuous(breaks = seq(-30, 40, by = 10)) +\n     theme_minimal(base_size = 14)"
  },
  {
    "objectID": "viz/visualizations.html#temperature-vs-ride-volume-by-user-type",
    "href": "viz/visualizations.html#temperature-vs-ride-volume-by-user-type",
    "title": "Visualizations",
    "section": "Temperature vs Ride Volume by User Type",
    "text": "Temperature vs Ride Volume by User Type\n\n  \n\nHourly ride volume by temperature, faceted by user type. Warmer temperatures correlate strongly with increased ride volume for both customers and subscribers, with subscriber volume remaining higher across all temperatures.\n\n\n\nTemperature vs Ride Volume by User Type\nThis dual-panel line plot compares hourly ride volume to temperature (°C) for customers (left) and subscribers (right). Both panels show a strong nonlinear increase in ride volume as temperatures rise.\n\nKey Observations:\n\nRide volume is lowest below freezing and begins to climb around 0°C.\nSubscribers maintain higher ride volume than customers across the full temperature range, suggesting greater resilience to cold weather.\nBoth curves exhibit a steep increase above 20°C, peaking near 35–40°C.\nThe growth is smooth and continuous, indicative of a nonlinear relationship rather than a threshold effect.\n\nThese findings support the inclusion of temperature as a continuous predictor of ride behavior in seasonal and temporal analyses.\nggplot(rides_weather_df, aes(x = temp, y = rides)) +\n     geom_smooth(method = \"loess\", se = FALSE, color = \"darkgreen\") +\n     scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +\n     facet_wrap(~ user_type) +\n     labs(\n         title = \"Temperature vs Ride Volume by User Type\",\n         x = \"Temperature (°C)\",\n         y = \"Hourly Ride Volume\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#total-hourly-rides-vs-temperature-total-subscribers-and-customers",
    "href": "viz/visualizations.html#total-hourly-rides-vs-temperature-total-subscribers-and-customers",
    "title": "Visualizations",
    "section": "Total Hourly Rides vs Temperature (Total, Subscribers and Customers)",
    "text": "Total Hourly Rides vs Temperature (Total, Subscribers and Customers)\n\n  \n\nFIGCAPTION"
  },
  {
    "objectID": "viz/visualizations.html#average-hourly-rides-vs-temperature-2-buckets",
    "href": "viz/visualizations.html#average-hourly-rides-vs-temperature-2-buckets",
    "title": "Visualizations",
    "section": "Average Hourly Rides vs Temperature (2° Buckets)",
    "text": "Average Hourly Rides vs Temperature (2° Buckets)\n\n  \n\nFIGCAPTION\n\n\n\nOverview\nThis chart presents the average number of hourly bike rides as a function of temperature (°C). The data is aggregated across all users, without distinguishing between subscriber or casual rider types.\n\n\nChart Details\n\nX-Axis: Temperature in degrees Celsius, ranging from below -10°C to above 35°C.\nY-Axis: Average hourly ride count.\nLine: A single curve showing average ride volume across all users, bucketed by temperature.\n\n\n\nPurpose\nThis visualization is intended to illustrate how temperature alone affects overall ridership behavior, independent of time of day, day of week, or rider category.\n\n\nObservations\n\nSub-zero temperatures (&lt; 0°C): Very low ridership, close to zero, as expected.\nGradual increase: Ride volume increases steadily with temperature from around 0°C to the low 20s.\nPeak ridership: Occurs near 25°C, representing the optimal weather for riding.\nDrop-off above 30°C: Suggests decreased willingness to ride in high heat, likely due to discomfort or health concerns.\n\n\n\nInterpretation\n\nThe chart suggests a strong correlation between temperature and total ride volume.\nThe symmetric, bell-shaped curve implies that moderate temperatures are ideal for cycling.\nExtremes on either end (cold or hot) sharply reduce bike usage.\n\n\n\nTechnical Notes\n\nRides are put into bucked with 2°C increments based on the temperature at ride start times.\nThe “2-bucket” term refers to the fact that the temperatures readings were grouped into bins of 2°C. Binning is a form of data smoothing applied to reduce noise.\n\n.headers off          -- we only want raw numbers\n.mode tabs            -- gnuplot likes tab‑ or space‑separated columns\n.output temp_vs_rides.dat\nWITH t AS (\n  SELECT\n    CAST(temp / 2.0 AS INT)*2  AS temp_bin,   -- 2 °C buckets: …, 14, 16, 18 …\n    AVG(rides)                 AS avg_rides\n  FROM rides_weather\n  GROUP BY temp_bin\n  ORDER BY temp_bin\n)\nSELECT temp_bin, avg_rides\nFROM t;\n.output stdout         -- restore console\nset title \"Average hourly rides vs. temperature\"\nset xlabel \"Temperature (°C)\"\nset ylabel \"Average rides per hour\"\nset grid\nset key off\n\n# Simple connected line\nplot \"temp_vs_rides.dat\" using 1:2 with linespoints lw 2 pt 7"
  },
  {
    "objectID": "viz/visualizations.html#average-hourly-rides-vs-temperature-2-buckets-with-cubic-spline-interpolation",
    "href": "viz/visualizations.html#average-hourly-rides-vs-temperature-2-buckets-with-cubic-spline-interpolation",
    "title": "Visualizations",
    "section": "Average Hourly Rides vs Temperature (2° Buckets with cubic spline interpolation)",
    "text": "Average Hourly Rides vs Temperature (2° Buckets with cubic spline interpolation)\n\n  \n\nFIGCAPTION\n\n\n\nOverview\nThis chart presents the average number of hourly bike rides as a function of temperature (°C). The data is aggregated across all users, without distinguishing between subscriber or casual rider types.\n\n\nChart Details\n\nX-Axis: Temperature in degrees Celsius, ranging from below -10°C to above 35°C.\nY-Axis: Average hourly ride count.\nLine: A single curve showing average ride volume across all users, smoothed with cubic spline interpolation and bucketed by temperature.\n\n\n\nPurpose\nThis visualization is intended to illustrate how temperature alone affects overall ridership behavior, independent of time of day, day of week, or rider category.\n\n\nObservations\n\nSub-zero temperatures (&lt; 0°C): Very low ridership, close to zero, as expected.\nGradual increase: Ride volume increases steadily with temperature from around 0°C to the low 20s.\nPeak ridership: Occurs near 25°C, representing the optimal weather for riding.\nDrop-off above 30°C: Suggests decreased willingness to ride in high heat, likely due to discomfort or health concerns.\n\n\n\nInterpretation\n\nThe chart suggests a strong correlation between temperature and total ride volume.\nThe symmetric, bell-shaped curve implies that moderate temperatures are ideal for cycling.\nExtremes on either end (cold or hot) sharply reduce bike usage.\n\n\n\nTechnical Notes\n\nRides are put into bucked with 2°C increments based on the temperature at ride start times.\nThe “2-bucket” term refers to the fact that the temperatures readings were grouped into bins of 2°C. Binning is a form of data smoothing applied to reduce noise.\nCurve was further smoothrf though the use of cubic spline interpolation, which creates a smooth, curved line that passes through the data points.\n\n.headers off          -- we only want raw numbers\n.mode tabs            -- gnuplot likes tab‑ or space‑separated columns\n.output temp_vs_rides.dat\nWITH t AS (\n  SELECT\n    CAST(temp / 2.0 AS INT)*2  AS temp_bin,   -- 2 °C buckets: …, 14, 16, 18 …\n    AVG(rides)                 AS avg_rides\n  FROM rides_weather\n  GROUP BY temp_bin\n  ORDER BY temp_bin\n)\nSELECT temp_bin, avg_rides\nFROM t;\n.output stdout         -- restore console\nset title \"Average hourly rides vs. temperature\"\nset xlabel \"Temperature (°C)\"\nset ylabel \"Average rides per hour\"\nset grid\nset key off\n\n\n# smoothed curve (Cubic Spline)\nplot \"temp_vs_rides.dat\" using 1:2 smooth csplines lw 2\n\n\n⏳ Ride Duration and Distance Distributions\nFocused on duration, distance, and their distributions by user type or cluster."
  },
  {
    "objectID": "viz/visualizations.html#ride-duration-distribution",
    "href": "viz/visualizations.html#ride-duration-distribution",
    "title": "Visualizations",
    "section": "Ride Duration Distribution",
    "text": "Ride Duration Distribution\n\n  \n\nFIGCAPTION\n\n\n# Connect to the SQLite database\ncon &lt;- dbConnect(RSQLite::SQLite(), \"caseStudy.db\")\n\n# Pull ride durations for valid subscriber/customer rides under 60 min\nride_durations &lt;- dbGetQuery(con, \"\n  SELECT\n    CASE user_type\n      WHEN 0 THEN 'subscriber'\n      WHEN 1 THEN 'customer'\n    END AS user_type,\n    (end_time - start_time) / 60.0 AS duration_min\n  FROM rides\n  WHERE user_type IN (0, 1)\n    AND end_time &gt; start_time\n    AND (end_time - start_time) &lt; 12000\n\")\n\n# Disconnect\n dbDisconnect(con)\nggplot(ride_durations, aes(x = duration_min, fill = user_type)) +\n     geom_histogram(binwidth = 2, position = \"identity\", alpha = 0.6) +\n     labs(title = \"Ride Duration Distribution\", x = \"Duration (minutes)\", y = \"Ride Count\") +\n     scale_fill_manual(values = c(\"subscriber\" = \"#1f77b4\", \"customer\" = \"#ff7f0e\")) +\n     scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) + \n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#ride-duration-density",
    "href": "viz/visualizations.html#ride-duration-density",
    "title": "Visualizations",
    "section": "Ride Duration Density",
    "text": "Ride Duration Density\n\n  \n\nFIGCAPTION\n\n\n# Connect to the SQLite database\ncon &lt;- dbConnect(RSQLite::SQLite(), \"caseStudy.db\")\n\n# Pull ride durations for valid subscriber/customer rides under 60 min\nride_durations &lt;- dbGetQuery(con, \"\n  SELECT\n    CASE user_type\n      WHEN 0 THEN 'subscriber'\n      WHEN 1 THEN 'customer'\n    END AS user_type,\n    (end_time - start_time) / 60.0 AS duration_min\n  FROM rides\n  WHERE user_type IN (0, 1)\n    AND end_time &gt; start_time\n    AND (end_time - start_time) &lt; 12000\n\")\n\n# Disconnect \n dbDisconnect(con)\nggplot(ride_durations, aes(x = duration_min, color = user_type, fill = user_type)) +\n     geom_density(alpha = 0.3) +\n     labs(title = \"Ride Duration Density\", x = \"Duration (minutes)\", y = \"Density\") +\n     scale_color_manual(values = c(\"subscriber\" = \"#1f77b4\", \"customer\" = \"#ff7f0e\")) +\n     scale_fill_manual(values = c(\"subscriber\" = \"#1f77b4\", \"customer\" = \"#ff7f0e\")) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#ride-duration-by-user-type-box-plot",
    "href": "viz/visualizations.html#ride-duration-by-user-type-box-plot",
    "title": "Visualizations",
    "section": "Ride Duration by User Type ( box plot )",
    "text": "Ride Duration by User Type ( box plot )\n\n  \n\nFIGCAPTION\n\n\n# Connect to the SQLite database\ncon &lt;- dbConnect(RSQLite::SQLite(), \"caseStudy.db\")\n\n# Pull ride durations for valid subscriber/customer rides under 60 min\nride_durations &lt;- dbGetQuery(con, \"\n  SELECT\n    CASE user_type\n      WHEN 0 THEN 'subscriber'\n      WHEN 1 THEN 'customer'\n    END AS user_type,\n    (end_time - start_time) / 60.0 AS duration_min\n  FROM rides\n  WHERE user_type IN (0, 1)\n    AND end_time &gt; start_time\n    AND (end_time - start_time) &lt; 12000\n\")\n\n# Disconnect\n dbDisconnect(con)\nggplot(ride_durations, aes(x = user_type, y = duration_min, fill = user_type)) +\n     geom_boxplot(outlier.alpha = 0.1) +\n     labs(title = \"Ride Duration by User Type\", x = \"\", y = \"Duration (minutes)\") +\n     scale_fill_manual(values = c(\"subscriber\" = \"#1f77b4\", \"customer\" = \"#ff7f0e\")) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#ride-duration-distribution-by-weekday-vs-weekend-non-tourist-customers",
    "href": "viz/visualizations.html#ride-duration-distribution-by-weekday-vs-weekend-non-tourist-customers",
    "title": "Visualizations",
    "section": "Ride Duration Distribution by Weekday vs Weekend (Non-Tourist Customers)",
    "text": "Ride Duration Distribution by Weekday vs Weekend (Non-Tourist Customers)\n\n  \n\nRide Duration Distribution by Day Type (Customer Rides Only) This density plot shows the distribution of ride durations in minutes for non-tourist customer rides, separated by weekdays and weekends. Weekday rides tend to peak slightly earlier and higher than weekend rides, indicating a stronger presence of short utility trips during the work week.\n\n\n\nOverview\nThis kernel density plot compares the ride duration (in minutes) of non-tourist customer bike rides, distinguishing between weekday and weekend behavior. It focuses exclusively on non-subscriber riders whose trips did not start or end near tourist destinations.\n\n\nAxes\n\nX-Axis (Ride Length in Minutes):\n\nRanges from 0 to 150 minutes.\nMeasures the total ride time as reported in the dataset.\nFocuses on the practical duration range; longer trips beyond 150 minutes were likely excluded or negligible.\n\nY-Axis (Density):\n\nRepresents the smoothed distribution of ride durations using kernel density estimation.\nHigher values reflect more common durations.\n\n\n\n\nDay Type Colors\n\nWeekday (Blue):\n\nStrong peak at short durations (approximately 6–8 minutes).\nSteeper decline after peak.\n\nWeekend (Orange):\n\nPeak is broader and slightly lower, centered just after 8 minutes.\nSlower decline, suggesting more variety in weekend usage.\n\n\n\n\nObservations\n\nWeekday rides are slightly shorter on average and more tightly concentrated.\n\nLikely dominated by quick errands, commutes, or first-mile/last-mile transport.\n\nWeekend rides show greater variability.\n\nSuggests a mix of errand and recreational uses, especially among customers who may be exploring neighborhoods or casually traveling.\n\nBoth distributions are right-skewed, with long tails indicating occasional extended rides by some users.\n\n\n\nBehavioral Insight\nThis view supports the hypothesis that weekday customer rides are more task-oriented, while weekend usage involves longer, discretionary trips. Although the differences are subtle, they are consistent with other indicators of time-based travel patterns in non-tourist areas.\n\n\nUse Case\nThis chart is useful for: - Understanding ride duration norms by day type. - Supporting demand modeling and pricing strategies tailored to weekdays vs weekends. - Refining customer journey segmentation without needing user-level metadata.\nggplot(non_tourist_customer_rides_df, aes(x = ride_length_min, fill = week_part)) +\n     geom_density(alpha = 0.4) +\n     scale_fill_manual(values = c(\"Weekday\" = \"darkblue\", \"Weekend\" = \"darkorange\")) +\n     labs(\n         title = \"Non-Tourist Customer Ride Duration by Weekday vs Weekend\",\n         x = \"Ride Length (minutes)\",\n         fill = \"Day Type\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#non-tourist-customer-ride-duration-density",
    "href": "viz/visualizations.html#non-tourist-customer-ride-duration-density",
    "title": "Visualizations",
    "section": "Non-Tourist Customer Ride Duration Density",
    "text": "Non-Tourist Customer Ride Duration Density\n\n  \n\nFIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = ride_length_min)) +\n     geom_density(fill = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Customer Ride Duration Density\",\n         x = \"Ride Length (minutes)\",\n         y = \"Density\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#non-tourist-customer-ride-duration-for-loop-rides",
    "href": "viz/visualizations.html#non-tourist-customer-ride-duration-for-loop-rides",
    "title": "Visualizations",
    "section": "Non-Tourist Customer Ride Duration for Loop Rides",
    "text": "Non-Tourist Customer Ride Duration for Loop Rides\n\n  \n\nFIGCAPTION"
  },
  {
    "objectID": "viz/visualizations.html#ride-duration-vs.-station-distance-non-tourist-customers",
    "href": "viz/visualizations.html#ride-duration-vs.-station-distance-non-tourist-customers",
    "title": "Visualizations",
    "section": "Ride Duration vs. Station Distance (Non-Tourist Customers)",
    "text": "Ride Duration vs. Station Distance (Non-Tourist Customers)\n\n  \n\nRide Duration vs. Station Distance (Non-Tourist Customer Rides) This scatterplot displays the relationship between ride length and distance between stations. While longer distances generally correspond to longer durations, many short-distance rides also exhibit long durations, suggesting varied usage patterns. A linear reference line highlights the lower boundary of likely direct trips.\n\n\n\nOverview\nThis scatterplot shows the relationship between ride duration and station-to-station distance for non-tourist customer rides. A linear reference line is included for interpretive comparison.\n\n\nAxes\n\nX-Axis (Distance Between Stations in km):\n\nRanges from 0 to ~30 km.\nRepresents the straight-line distance between the ride’s start and end stations.\n\nY-Axis (Ride Length in minutes):\n\nRanges from 0 to 150 minutes.\nIndicates the duration of each ride.\n\n\n\n\nVisual Elements\n\nGreen points:\n\nRepresent individual non-tourist customer rides.\nHeavily concentrated in the lower-left region, tapering as distance increases.\n\nBlue line:\n\nA linear reference line (possibly showing a constant-speed model or fitted trend).\nHelps visualize the general relationship between time and distance.\n\n\n\n\nObservations\n\nDense cluster near origin:\n\nThe majority of rides are short in both duration and distance.\nSuggests highly localized use, likely for errands or short commutes.\n\nWide variance in ride length for short distances:\n\nSome very short-distance rides take a long time — could indicate indirect routes, traffic, or leisurely pacing.\n\nSparse long-distance rides:\n\nAs station distance increases, rides become less frequent but follow a wider spread of durations.\n\nLinear boundary below the point cloud:\n\nThe blue line roughly follows the lower edge of the ride cloud, suggesting a speed floor (minimum speed threshold).\nThis could represent the fastest direct rides, possibly made with electric bikes or scooters.\n\n\n\n\nInterpretation\n\nThere’s a positive relationship between station distance and ride duration, but with high variance.\nMany long-duration rides cover only short distances, hinting at circuitous routes, heavy traffic, or recreational usage.\nThe plot may also reflect the impact of stop time (e.g., errands, pauses) not being filtered out.\n\n\n\nUse Case\nThis visualization helps: - Explore efficiency and routing behavior of customers. - Identify outliers and usage extremes (e.g., long duration for short distances). - Evaluate suitability of distance as a proxy for estimating ride time.\nnon_loop_rides_df &lt;- non_tourist_customer_rides_df %&gt;%\nfilter(start_station_id != end_station_id)\nlibrary(geosphere)  # for distHaversine\nnon_loop_rides_df &lt;- non_loop_rides_df %&gt;%\nleft_join(non_tourist_stations_df %&gt;% select(start_station_id = station_id, start_lat = latitude, st\nart_lon = longitude),\nby = \"start_station_id\") %&gt;%\nleft_join(non_tourist_stations_df %&gt;% select(end_station_id = station_id, end_lat = latitude, end_lo\nn = longitude),\nby = \"end_station_id\") %&gt;%\nmutate(\ndistance_m = distHaversine(matrix(c(start_lon, start_lat), ncol = 2),\nmatrix(c(end_lon, end_lat), ncol = 2)),\ndistance_km = distance_m / 1000\n)\n\n\nnon_loop_rides_df &lt;- non_loop_rides_df %&gt;%\nleft_join(stations_df %&gt;%\nrename(start_station_id = station_id,\nstart_lat = lat,\nstart_long = long),\nby = \"start_station_id\") %&gt;%\nleft_join(stations_df %&gt;%\nrename(end_station_id = station_id,\nend_lat = lat,\nend_long = long),\nby = \"end_station_id\")\nnon_loop_rides_df &lt;- non_loop_rides_df %&gt;%\nmutate(\ndistance_m = distHaversine(\nmatrix(c(start_long, start_lat), ncol = 2),\nmatrix(c(end_long, end_lat), ncol = 2)\n),\ndistance_km = distance_m / 1000\n)\n'''\n\n\n'''R\nlibrary(ggplot2)\nggplot(non_loop_rides_df, aes(x = distance_km, y = ride_length_min)) +\ngeom_point(alpha = 0.05, color = \"darkgreen\") +\ngeom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +\nlabs(\ntitle = \"Ride Duration vs. Station Distance\",\nx = \"Distance Between Stations (km)\",\ny = \"Ride Length (minutes)\"\n) +\ntheme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#non-tourist-customer-ride-count-by-distance",
    "href": "viz/visualizations.html#non-tourist-customer-ride-count-by-distance",
    "title": "Visualizations",
    "section": "Non-Tourist Customer Ride Count by Distance",
    "text": "Non-Tourist Customer Ride Count by Distance\n\n  \n\nFIGCAPTION"
  },
  {
    "objectID": "viz/visualizations.html#non-tourist-customer-distribution-of-station-to-station-distances",
    "href": "viz/visualizations.html#non-tourist-customer-distribution-of-station-to-station-distances",
    "title": "Visualizations",
    "section": "Non-Tourist Customer Distribution of Station-to-Station Distances",
    "text": "Non-Tourist Customer Distribution of Station-to-Station Distances\n\n  \n\nFIGCAPTION\n\n\nggplot(non_loop_rides_df, aes(x = distance_km)) + \ngeom_density(fill = \"darkorange\", alpha = 0.6) +\nlabs(\ntitle = \"Non-Tourist_Customer_Distribution of Station-to-Station Distances\",\nx = \"Distance Between Stations (km)\",\ny = \"Density\"\n) +\ntheme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#ride-distance-distribution-by-duration-cluster-non-tourist-non-loop-customers",
    "href": "viz/visualizations.html#ride-distance-distribution-by-duration-cluster-non-tourist-non-loop-customers",
    "title": "Visualizations",
    "section": "Ride Distance Distribution by Duration Cluster (Non-Tourist, Non-Loop, Customers)",
    "text": "Ride Distance Distribution by Duration Cluster (Non-Tourist, Non-Loop, Customers)\n\n  \n\nRide Distance Distribution by Duration Cluster (Customer Rides Only) This density plot compares ride distances for non-tourist, non-loop customer rides, grouped into clusters based on ride duration. Short-duration rides are tightly concentrated around 1–2 km, medium-duration rides cover a broader 2–6 km range, and long-duration rides extend further, reflecting distinct usage behaviors within the same user group.\n\n\n\nOverview\nThis kernel density plot illustrates the distribution of ride distances (in kilometers) for non-tourist, non-loop customer rides, broken out by ride duration clusters labeled as Short, Medium, and Long.\n\n\nAxes\n\nX-Axis (Distance in km):\n\nRanges from 0 to 10 km.\nRepresents the straight-line distance from the start stations to the end stations (the minimum possilbe distatnce covered). Do not confuse this with the actual distance ridden, we have no way of knowing that from the currently available data.\n\nY-Axis (Density):\n\nRepresents the probability density of ride distances within each cluster.\nHigher peaks indicate more common distances in that cluster.\n\n\n\n\nCluster Colors\n\nShort (Blue):\n\nPeaks sharply between 0.5–2.5 km.\nCharacterized by high density at shorter distances and a quick drop-off after 3 km.\n\nMedium (Green):\n\nPeaks broadly from ~2.5 km to 6 km.\nForms a wider and flatter distribution, indicating greater variability in ride lengths.\n\nLong (Red/Pink):\n\nStarts lower but maintains a relatively even presence across 3–10 km.\nLongest tail, with density extending up to the maximum distance shown (10 km).\n\n\n\n\nObservations\n\nShort Cluster:\n\nHighest density of all clusters.\nIndicates that most customer rides classified as “short” are under 3 km.\nMay reflect last-mile or station-to-neighborhood travel.\n\nMedium Cluster:\n\nBroadest range of distances.\nOverlaps with both short and long clusters, suggesting transitional ride behavior.\n\nLong Cluster:\n\nLess frequent but not rare.\nRide distances in this group begin at approximatley 1.5 km and extend up to 10 km.\nPossibly includes destination-oriented or special-purpose trips.\n\n\n\n\nInterpretations\n\nBehavioral Insights:\n\nThe sharp peak of the short cluster implies highly consistent short-distance use, likely for errands or short hops.\nThe medium cluster suggests a flexible usage pattern, potentially including both commuting and recreational trips.\nLong-duration rides, although less common, cover the widest distance range, reflecting diverse travel purposes.\n\nData Characteristics:\n\nRides were filtered to exclude tourist, subscribers and loop rides, increasing the likelihood that these reflect practical customer travel behavior (e.g., commuting, errands).\nClustering these customer rides by duration helps uncover distinct usage patterns — such as short errand-like trips versus longer recreational journeys — without needing to segment riders any further or rely on additional metadata.\n\n\n\n\nUse Case\nThis chart helps: - Understand ride behavior by duration across distance ranges. - Support clustering-based segmentation strategies. - Inform infrastructure placement, pricing models, or service design for non-tourist use cases."
  },
  {
    "objectID": "viz/visualizations.html#non-tourist-non-loop-customer-ride-distance-distribution-by-ride-duration-cluster-201m-grid",
    "href": "viz/visualizations.html#non-tourist-non-loop-customer-ride-distance-distribution-by-ride-duration-cluster-201m-grid",
    "title": "Visualizations",
    "section": "Non-Tourist Non-Loop Customer Ride Distance Distribution by Ride Duration Cluster 201M Grid",
    "text": "Non-Tourist Non-Loop Customer Ride Distance Distribution by Ride Duration Cluster 201M Grid\n\n  \n\nFIGCAPTION"
  },
  {
    "objectID": "viz/visualizations.html#loop-ride-length-distribution-by-week-part-and-time-of-day",
    "href": "viz/visualizations.html#loop-ride-length-distribution-by-week-part-and-time-of-day",
    "title": "Visualizations",
    "section": "Loop Ride Length Distribution by Week Part and Time of Day",
    "text": "Loop Ride Length Distribution by Week Part and Time of Day\n\n  \n\nLoop ride durations among non-tourist customers show a consistently skewed distribution, regardless of time of day or whether the ride occurred on a weekday or weekend. Ride length is typically short, with a rapid drop-off in frequency after the first 10–15 minutes across all hourly intervals.\n\n\n\n📝 Image Notes\nTitle: Loop Ride Length Distribution by Week Part and Time of Day Source: Non-tourist customer rides classified as “loop rides” (start and end at the same station) X-Axis: Ride Length (minutes) Y-Axis: Ride Count Faceting: 24 hourly bins (0–23), each split by weekday/weekend Color Encoding: Different fill colors for each Week.Part.Hour combination (e.g., Weekend.0, Weekday.14) shown in the legend\n\n\nKey Observations\nConsistent Right Skew: In every hourly panel, ride length distributions are heavily skewed right, peaking in the 0–10 minute range and tapering off sharply.\n\nNo Strong Time-of-Day Effect: There is no significant shift in distribution shape across hours, though some hour blocks (e.g., mid-afternoon) show more total rides.\n\nLoop Behavior: This pattern reinforces the idea that many loop rides — likely recreational — are short and time-insensitive.\n\nWeekend vs. Weekday: Although both categories are shown, the duration distributions remain similar, suggesting time of day may be less influential for loop ride length than ride purpose or rider type.\nggplot(loop_rides_non_tourist, aes(x = ride_length_min, fill = interaction(week_part, hour_local))) \n+\ngeom_histogram(binwidth = 1, position = \"identity\", alpha = 0.5) +\nfacet_wrap(~ hour_local, ncol = 4) +\nlabs(title = \"Loop Ride Length Distribution by Week Part and Time of Day\",\nx = \"Ride Length (minutes)\",\ny = \"Ride Count\",\nfill = \"Week/Time\") +\ntheme_minimal()\n\n\n🗺️ Spatial Patterns\nMaps and spatial insights."
  },
  {
    "objectID": "viz/visualizations.html#top-25-non-tourist-stations-by-customer-ride-count",
    "href": "viz/visualizations.html#top-25-non-tourist-stations-by-customer-ride-count",
    "title": "Visualizations",
    "section": "Top 25 Non-Tourist Stations by Customer Ride Count",
    "text": "Top 25 Non-Tourist Stations by Customer Ride Count\n\n  \n\nFIGCAPTION\n\n\nggplot(top_non_tourist_stations_named, aes(\n   x = reorder(name, customer_ride_count),\n   y = customer_ride_count\n   )) +\n   geom_col(fill = \"steelblue\") +\n   coord_flip() +\n   labs(\n     title = \"Top 25 Non-Tourist Stations by Customer Ride Count\",\n     x = \"Station\",\n     y = \"Customer Rides\"\n) +\ntheme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#non-tourist-customer-distribution-of-stations-to-station-distance",
    "href": "viz/visualizations.html#non-tourist-customer-distribution-of-stations-to-station-distance",
    "title": "Visualizations",
    "section": "Non-Tourist Customer Distribution of Stations to Station Distance",
    "text": "Non-Tourist Customer Distribution of Stations to Station Distance\n\n  \n\nFIGCAPTION\n\n\n\n\nFleet & Usage Patterns\nInsights about bikes themselves and system-level metrics."
  },
  {
    "objectID": "viz/visualizations.html#image-notes-average-daily-rides-by-bike-type-and-user-type-post-electric-launch",
    "href": "viz/visualizations.html#image-notes-average-daily-rides-by-bike-type-and-user-type-post-electric-launch",
    "title": "Visualizations",
    "section": "Image Notes: Average Daily Rides by Bike Type and User Type (Post-Electric Launch)",
    "text": "Image Notes: Average Daily Rides by Bike Type and User Type (Post-Electric Launch)\n\n  \n\nFIGCAPTION\n\n\n\nOverview\nThis bar chart displays the average number of daily rides by bike type, grouped by user type (Subscriber vs. Customer), for the period after the introduction of electric bikes and scooters.\n\n\nAxes and Groupings\n\nX-Axis (Bike Type):\n\nclassic_bike\ndocked_bike\nelectric_bike\nelectric_scooter\n\nY-Axis (Average Rides per Day):\n\nRanges from 0 to over 4,500 rides per day.\n\nColor Legend:\n\nRed = Subscriber\nTeal = Customer\n\n\n\n\nObservations\n\nClassic Bikes:\n\nMost used overall.\nSubscribers (red) significantly outnumber Customers in ride volume.\n\nDocked Bikes:\n\nVery low usage overall.\nOnly Customers use docked bikes in this dataset — Subscribers have no visible rides.\n\nElectric Bikes:\n\nPopular among both user types.\nSubscribers still dominate, but the Customer share is substantial.\n\nElectric Scooters:\n\nSlightly more popular with Customers than Subscribers.\nTotal volume is lower than bikes but non-trivial.\n\n\n\n\nInterpretation\n\nSubscriber Preference:\n\nStrongly favors classic and electric bikes.\nLikely reflects commuting and utilitarian travel patterns.\n\nCustomer Preference:\n\nMore evenly spread across bike types.\nHigher share of docked bike and scooter usage, suggesting casual or occasional use.\n\nModal Shift:\n\nThe presence of electric modes (bike and scooter) introduces significant usage from both user groups, possibly pulling some traffic away from classic bikes.\n\n\n\n\nUse Case\nThis visualization supports: - Infrastructure planning (e.g., expansion of electric charging or docking stations), - Marketing strategy (targeting modal preferences by user type), - Evaluating post-launch success of electric mobility options.\npost_electric_rides_df &lt;- dbGetQuery(con, \"SELECT\n   DATE(start_time, 'unixepoch') AS ride_date,\n   user_type,\n   bike_type,\n   COUNT(*) AS ride_count,\n   AVG((end_time - start_time) / 60.0) AS avg_duration_minutes\nFROM rides\nWHERE start_time &gt;= strftime('%s', '2023-01-01') --first e-bike appeared\nGROUP BY ride_date, user_type, bike_type;\n\")\n\ndaily_avg_df &lt;- post_electric_rides_df %&gt;%\n  group_by(user_type, bike_type) %&gt;%\n  summarise(\n    avg_rides_per_day = mean(ride_count),\n    .groups = \"drop\"\n  )\nggplot(daily_avg_df, aes(\n     x = bike_type,\n     y = avg_rides_per_day,\n     fill = fct_recode(as.factor(user_type),\n                       \"Subscriber\" = \"0\",\n                       \"Customer\" = \"1\")\n )) +\n     geom_bar(stat = \"identity\", position = \"dodge\") +\n     labs(\n         title = \"Average Daily Rides by Bike Type and User Type (Post-Electric Launch)\",\n         x = \"Bike Type\",\n         y = \"Average Rides per Day\",\n         fill = \"User Type\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/visualizations.html#distribution-of-ride-counts-per-bike",
    "href": "viz/visualizations.html#distribution-of-ride-counts-per-bike",
    "title": "Visualizations",
    "section": "Distribution of Ride Counts per Bike",
    "text": "Distribution of Ride Counts per Bike\n\n  \n\nFIGCAPTION\n\n\n\nOverview\nThis histogram visualizes the distribution of total ride counts per bike, grouped into buckets of 100 rides each. It provides insight into how evenly or unevenly individual bikes are used over the dataset’s timespan.\n\n\nAxes\n\nX-Axis (Ride Count Range):\n\nLabeled in bins of 100 rides (e.g., 0-99, 100-199, …, 5500-5599).\nRepresents the total number of rides associated with each bike.\n\nY-Axis (Number of Bikes):\n\nIndicates how many bikes fall within each ride count range.\nPeaks near 300 bikes in the most frequently occurring bins.\n\n\n\n\nVisual Elements\n\nBars:\n\nColored purple with black borders.\nUniform width, covering each 100-ride range.\nDistribution forms a roughly symmetric bell-shaped curve centered around the 2700–3499 range.\n\n\n\n\nObservations\n\nLow-end Outliers:\n\nA noticeable spike in the 0–99 bin (~130 bikes), suggesting a set of bikes with extremely limited or no use.\nMay include stolen, damaged, or new bikes added near the end of the data collection period.\n\nCore Distribution:\n\nThe majority of bikes (~200–280 per bin) fall between 2200–3999 rides.\nIndicates typical usage patterns and operational consistency.\n\nHigh-end Tail:\n\nUsage drops off steadily after ~4000 rides per bike.\nVery few bikes exceed 5000 rides.\n\n\n\n\nInterpretation\n\nThe chart implies a relatively well-utilized fleet with a normal distribution centered around ~3000 rides per bike.\nThe left-side spike at 0–99 highlights potential outliers worth investigating:\n\nUnderused bikes,\nPossible malfunctions,\nSeasonal deployments,\nRecent fleet additions.\n\nThe right tail shows some high-mileage bikes that may be candidates for maintenance or replacement soon.\n\n\n\nUse Case\nThis visualization is valuable for: - Fleet maintenance planning (identify overused/underused bikes), - Lifecycle analysis (detect uneven distribution of wear), - Deployment strategy (optimize rotation or redistribution).\n.headers on\n.mode csv\n.output bike_ride_buckets.csv\nWITH bucketed AS (\n  SELECT\n    (ride_count / 100) * 100 AS bucket_start,\n    COUNT(*) AS bike_count\n  FROM (\n    SELECT bike_id, COUNT(*) AS ride_count\n    FROM rides\n    WHERE bike_id IS NOT NULL\n    GROUP BY bike_id\n  )\n  GROUP BY bucket_start\n  ORDER BY bucket_start\n)\nSELECT\n  bucket_start,\n  bucket_start + 99 AS bucket_end,\n  bike_count\nFROM bucketed;\n.output stdout\nset datafile separator \",\"\nset terminal pngcairo size 1000,600 enhanced font 'Verdana,10'\nset output 'bike_ride_bucket_histogram.png'\n\nset title \"Distribution of Ride Counts per Bike\"\nset xlabel \"Ride Count Range\"\nset ylabel \"Number of Bikes\"\nset style fill solid 1.0 border -1\nset boxwidth 0.9\nset grid ytics\nunset key\nset xtics rotate by -45\n\n# Format x-tics with the bucket label, like \"0–99\"\nplot 'bike_ride_buckets.csv' using ($0):3:xtic(strcol(1).\"-\".strcol(2)) with boxes\n\n\n🔄 Route Asymmetry\nWhere paths are not balanced in both directions by user type."
  },
  {
    "objectID": "viz/visualizations.html#top-20-most-asymmetric-paths",
    "href": "viz/visualizations.html#top-20-most-asymmetric-paths",
    "title": "Visualizations",
    "section": "Top 20 Most Asymmetric Paths",
    "text": "Top 20 Most Asymmetric Paths\n\n  \n\nTop 20 most asymmetric ride paths by user type. Asymmetry ratio is calculated as the proportion of rides taken in one direction relative to the total rides between two stations. Distinct path preferences emerge between customers and subscribers.\n\n\n\nTop 20 Most Asymmetric Paths by User Type\nThis side-by-side horizontal bar chart identifies the 20 most directionally imbalanced ride paths (i.e., asymmetric) for each user type — customers on the left and subscribers on the right.\n\nWhat is Asymmetry?\nThe asymmetry ratio is defined as: &gt; rides in one direction / total rides in both directions\nValues closer to 1.0 indicate strong directional bias.\n\n\nKey Observations:\n\nCustomer paths tend to involve routes to and from major downtown hubs like Canal St, Clinton St, and Wacker Dr — possibly reflecting less predictable, one-way tourist or ad hoc travel.\nSubscriber paths are more concentrated near recreational or scenic areas like Columbus Dr, Streeter Dr, and Lake Shore Dr, hinting at commuting or habitual use involving these corridors.\nSubscribers’ top asymmetric paths skew toward locations like Millennium Park, McCormick Place, and DuSable Harbor, supporting recreational or last-mile transit interpretations.\nDespite both groups sharing some geographical overlap, their most imbalanced paths differ significantly in direction and endpoint distribution.\n\nThis visualization helps highlight the behavioral contrast in directional ride patterns between user types."
  },
  {
    "objectID": "viz/visualizations.html#top-20-most-asymmetric-paths-by-user-type-1",
    "href": "viz/visualizations.html#top-20-most-asymmetric-paths-by-user-type-1",
    "title": "Visualizations",
    "section": "Top 20 Most Asymmetric Paths by User Type",
    "text": "Top 20 Most Asymmetric Paths by User Type\n\n  \n\nTop 20 bike-share station pairs with the most directional imbalance by user type. Customers show high asymmetry around central business district hubs, while subscriber asymmetries often reflect lakefront access or commuter endpoint behavior.\n\n\n\n📝 Image Notes\nTitle: Top 20 Most Asymmetric Paths by User Type X-Axis: Asymmetry Ratio (from 0.0 to ~0.7) Panels: Two side-by-side bar charts\n\nLeft panel: Top asymmetric paths for Customers\nRight panel: Top asymmetric paths for Subscribers\n\n\n\nInterpretation\n\nAsymmetry Ratio\n\nA value approaching 1 indicates heavy one-way usage between a pair of stations. Rides commonly occur in one direction but rarely the other.\n\nCustomer Patterns\n\nConcentrated near transit stations and central business districts. Reflect unidirectional use, possibly due to nearby public transit hubs, tourism drop-offs, or lack of return trips.\n\nSubscriber Patterns\n\nFocus on lakefront access (e.g., Streeter Dr, Lake Shore Dr) and commuter endpoints. Suggest consistent commuting flows where riders may use other transportation methods for return trips (e.g., walking or transit).\n\nContrast\n\nWhile customers show asymmetry in the urban core, subscribers show it around recreational or edge areas."
  },
  {
    "objectID": "viz/visualizations.html#screenshots",
    "href": "viz/visualizations.html#screenshots",
    "title": "Visualizations",
    "section": "🖥️ ScreenShots",
    "text": "🖥️ ScreenShots"
  },
  {
    "objectID": "viz/visualizations.html#divvy-stations-in-qgis",
    "href": "viz/visualizations.html#divvy-stations-in-qgis",
    "title": "Visualizations",
    "section": "Divvy Stations in QGIS",
    "text": "Divvy Stations in QGIS\n\n  \n\nDivvy Stations in QGIS\n\n\nThis is a screen shot of the Divvy Stations plotted in QGIS. This was found in Divvy_Stations_2013.shp.zip which was included in the Divvy_Stations_Trips_2013.zip file."
  },
  {
    "objectID": "viz/visualizations.html#divvy-stations-table",
    "href": "viz/visualizations.html#divvy-stations-table",
    "title": "Visualizations",
    "section": "Divvy Stations Table",
    "text": "Divvy Stations Table\n\n  \n\nFIGCAPTION\n\n\nThis is a screen shot of the Divvy_Stations_2013 table taken from QGIS"
  },
  {
    "objectID": "side-quest/prj-grammar.html",
    "href": "side-quest/prj-grammar.html",
    "title": ".prj Grammar",
    "section": "",
    "text": "Is there a grammar for these .prj files?\nYes, there is a formal grammar for the Well-Known Text (WKT) that forms the content of ESRI .prj files. It’s a structured, machine-readable, and human-readable text markup language.\nThe WKT format was originally defined by the Open Geospatial Consortium (OGC), and these specifications often include a formal grammar, typically in Extended Backus-Naur Form (EBNF). ESRI’s implementation, while largely adhering to these OGC standards (specifically WKT 1 for most .prj files), has had some minor variations or stricter interpretations.\n\nThe OGC WKT Standard and its Grammar\nThe definitive grammar for WKT (both WKT 1 and the newer WKT 2) comes from the OGC.\n\nWKT 1 (OGC Abstract Specification Topic 2: Spatial Reference Systems, 1999/2001): This is the version most commonly found in older .prj files. The specification details the syntax using a formal grammar (often expressed in EBNF). It defines keywords like GEOGCS, PROJCS, DATUM, SPHEROID, PRIMEM, UNIT, and PARAMETER, along with the rules for nesting them and their arguments.\nWKT 2 (ISO 19162:2015 and ISO 19162:2019): This is the more recent standard, aiming to be more robust, less ambiguous, and to fully align with the ISO 19111 conceptual model for Coordinate Reference Systems. It introduces new keywords (e.g., GEODCRS, PROJCRS) and a more explicit structure for elements like units and coordinate operations. Many modern GIS software and libraries are moving towards WKT 2.\n\n\n\nHow to Find the Grammar\nYou can typically find the formal grammar (EBNF) within the official OGC specifications themselves. These documents are publicly available from the OGC website. For instance, searching for “OGC WKT grammar EBNF” or “ISO 19162 EBNF” will lead you to relevant parts of these standards.\n###Key Aspects of the WKT Grammar\nThe grammar defines:\n\nKeywords: Specific capitalized terms (e.g., PROJCS, GEOGCS, DATUM, SPHEROID, UNIT, PARAMETER).\nStructure: How these keywords are nested using parentheses () or square brackets [] (historically, some implementations were flexible with these).\nParameters/Arguments: The types of values associated with each keyword (e.g., string names in double quotes ““, floating-point numbers for values like semi-major axis, inverse flattening, parameter values, or angular/linear unit conversion factors).\nSeparators: Commas , are used to separate elements within a keyword’s definition.\nOrder: The order of elements within a keyword’s definition is strictly defined by the grammar (e.g., for SPHEROID, the name comes first, then the semi-major axis, then inverse flattening).\n\n\n\nESRI’s Interpretation\nESRI’s software (like ArcGIS Pro, ArcMap) reads and writes .prj files that adhere to a specific WKT syntax. While it largely matches OGC WKT 1, there have been historical nuances:\n\nCase Sensitivity: ESRI’s WKT is generally case-sensitive for keywords.\nWhitespace: While the OGC standard technically allows for minimal whitespace, ESRI .prj files are typically written as a single, continuous string without line breaks for maximum compatibility, though parsing software is often forgiving.\nNames: ESRI often uses specific naming conventions for internal identifiers within the WKT string (e.g., GCS_WGS_1984 instead of just WGS 84 for the GCS name).\nTOWGS84 Clause: As mentioned before, this clause was sometimes used in ESRI WKT 1 to embed datum transformation parameters. However, ESRI’s projection engine usually handles transformations dynamically rather than solely relying on this embedded information.\n\nIn essence, while ESRI .prj files adhere to a WKT grammar, it’s best to consider them as following the OGC WKT 1 specification, with ESRI’s specific naming conventions and occasional minor deviations. When dealing with WKT from different sources, it’s always good practice to use a robust geospatial library (like GDAL/PROJ) that can parse various WKT flavors and perform transformations accurately."
  },
  {
    "objectID": "side-quest/NAD83andGRS1980.html",
    "href": "side-quest/NAD83andGRS1980.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "You’re diving into the fundamental concepts of geodesy, which are crucial for understanding how GIS data accurately represents locations on Earth!\nLet’s break down NAD83 and the GRS 1980 spheroid.\n\nNAD83 (North American Datum of 1983)\nNAD83 is a horizontal and geometric control datum for the United States, Canada, Mexico, and Central America. In simpler terms, it’s a reference system that defines the latitude and longitude coordinates of points on the Earth’s surface within North America.\nHere’s what that means:\n\nDatum: A datum is a defined reference surface (like a spheroid) and a set of precisely measured points that are used to establish a coordinate system. It provides a fixed, known base from which all other points are measured.\nHorizontal and Geometric: This refers to the measurement of positions in terms of latitude and longitude (horizontal) and also accounting for the three-dimensional geometry of the Earth.\nGeocentric Origin: Unlike its predecessor (NAD27), NAD83 has its origin (0,0,0 point) at the Earth’s center of mass. This makes it more compatible with satellite-based positioning systems like GPS.\nDevelopment: NAD83 was released in 1986, using both ground-based and satellite observations (including GPS) to create a more accurate and consistent network of control points across the continent. It superseded the North American Datum of 1927 (NAD27), which was based on older technologies and a different reference ellipsoid.\nRealizations: Over time, with improved technology and more observations, NAD83 has undergone several adjustments (or “realizations”) to improve its accuracy. Examples include NAD83(CORS96), NAD83(NSRS2007), and NAD83(2011). While these are adjustments, they are still considered part of the same NAD83 datum.\nRelation to WGS84: When first published, NAD83 and WGS84 (World Geodetic System of 1984, which GPS natively uses) were considered virtually identical. However, because WGS84 is a global datum tied to the Earth’s center of mass and dynamic with respect to plate tectonics, while NAD83 is generally fixed to the North American tectonic plate, they have slowly drifted apart over time (typically by 1-2 meters). For most everyday mapping and GIS at larger scales, the differences might be negligible, but for high-precision surveying, transformations between them are necessary.\n\n\n\nGRS 1980 Spheroid (Geodetic Reference System 1980)\nThe GRS 1980 spheroid (often referred to as GRS80) is a mathematical model of the Earth’s shape that is used as the reference ellipsoid for the NAD83 datum.\nHere’s what that means:\n\nSpheroid (or Ellipsoid): The Earth is not a perfect sphere; it bulges slightly at the equator and is flattened at the poles, resembling an oblate spheroid. A spheroid is a mathematically defined, smooth surface that approximates the Earth’s actual shape.\nParameters: Spheroids are defined by two key parameters:\n\nSemi-major axis (equatorial radius): The radius from the center to the equator. For GRS 1980, this is 6,378,137 meters.\nInverse flattening: A value that describes how much the spheroid is flattened at the poles. For GRS 1980, this is approximately 1/298.257222101.\n\nGlobal Standard: GRS 1980 was adopted by the International Union of Geodesy and Geophysics (IUGG) in 1979 as a global standard.\nAccuracy: It is a modern, satellite-determined spheroid that provides a more accurate representation of the Earth’s shape compared to older, ground-measured ellipsoids (like the Clarke 1866 spheroid used by NAD27).\nNear Identical to WGS84 Ellipsoid: The GRS 1980 spheroid is very nearly identical in its dimensions to the WGS 1984 ellipsoid, which is why NAD83 and WGS84 were initially considered equivalent.\n\nIn essence, NAD83 is the system of coordinates used in North America, and the GRS 1980 spheroid is the mathematical model of the Earth’s shape that serves as the foundation for those coordinates. The datum (NAD83) tells you where the coordinate system starts and how it’s oriented, while the spheroid (GRS 1980) defines the shape of the Earth that the coordinates are mapped onto."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Case Study",
    "section": "",
    "text": "🚧 This case study is currently under construction.\nPlease check back soon for a complete walkthrough, analysis, and visualizations."
  },
  {
    "objectID": "index.html#project-context",
    "href": "index.html#project-context",
    "title": "Case Study",
    "section": "📚 Project Context",
    "text": "📚 Project Context\nThis project satisfies the requirements of the Google Data Analytics capstone while also serving as a portfolio piece demonstrating:\n\nIndependent sourcing and integration of multi-year real-world data\nUse of tools beyond the course scope (e.g., SQLite, Leaflet, Tableau, shell scripting)\nRealistic data cleaning, transformation, and exploratory analysis\n\nThe fictional business challenge of Cyclistic is explored through the lens of actual Divvy usage patterns."
  },
  {
    "objectID": "index.html#business-task",
    "href": "index.html#business-task",
    "title": "Case Study",
    "section": "🎯 Business Task",
    "text": "🎯 Business Task\nHow do casual riders and annual members use Divvy bikes differently, and how can that inform marketing strategies?"
  },
  {
    "objectID": "index.html#data-sources",
    "href": "index.html#data-sources",
    "title": "Case Study",
    "section": "📦 Data Sources",
    "text": "📦 Data Sources\nThe analysis is based on the following datasets:\n\nDivvy Bike Trip Data (2013–2025)1 : This dataset includes anonymized ride-level data from Chicago’s Divvy bike sharing system. The bulk of the data (June 2013 through Sep 2019) (Divvy_Trips_20250501.csv) was obtained from the City of Chicago Data Portal. The rest (Oct 2019 through Jan 23 2020 and Jun 2023 – April 30 225) was downloaded from Divvy’s S3 archive . Please note, rides from the time period of the COVID-19 Pandemic are not included.\nChicago Weather Data (Hourly): Hourly weather data for Midway International Airport (station ID: 72534) was downloaded from the Metostat bulk archive. The dataset includes temperature, wind speed, precipitation, and other key weather indicators for correlation with bike usage patterns.\nTourist Attractions Dataset (Custom): A manually curated dataset of key tourist attractions in Chicago (e.g., Navy Pier, Millennium Park, Willis Tower) was created to identify rides likely associated with tourism. Latitude and longitude coordinates were obtained using Google Maps for educational use and spatial filtering.\n\n\n🔗 Attribution\n\nCity of Chicago. (2025). Divvy Trips Dataset. https://data.cityofchicago.org/Transportation/Divvy-Trips/fg6s-gzvg/about_data\nLyft. (2025). Divvy Trip Data Archive. https://divvy-tripdata.s3.amazonaws.com/index.html\nMeteostat (https://meteostat.net). (2025). Hourly Weather Data – Midway Airport (72534). https://bulk.meteostat.net/v2/hourly/72534.csv.gz Provided under the terms of the Creative Commons Attribution-NonCommercial 4.0 International Public License (CC BY-NC 4.0)\nTourist location coordinates obtained via Google Maps (maps.google.com) for educational and analytical purposes."
  },
  {
    "objectID": "index.html#key-metrics-and-analysis",
    "href": "index.html#key-metrics-and-analysis",
    "title": "Case Study",
    "section": "🔍 Key Metrics and Analysis",
    "text": "🔍 Key Metrics and Analysis"
  },
  {
    "objectID": "index.html#summary-of-findings",
    "href": "index.html#summary-of-findings",
    "title": "Case Study",
    "section": "📊 Summary of Findings",
    "text": "📊 Summary of Findings"
  },
  {
    "objectID": "index.html#implications-and-recommendations",
    "href": "index.html#implications-and-recommendations",
    "title": "Case Study",
    "section": "💡 Implications and Recommendations",
    "text": "💡 Implications and Recommendations"
  },
  {
    "objectID": "index.html#next-steps",
    "href": "index.html#next-steps",
    "title": "Case Study",
    "section": "⏩ Next Steps",
    "text": "⏩ Next Steps"
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "Case Study",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nDivvy Bikes ride data from June 13th 2013 to April 30th 2025 with the exception of the COVID-19 Pandemic, as that date is not representative of normal bike usage.↩︎"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "📦 Data Sources and Cleaning",
    "section": "",
    "text": "🚧 This project is currently a work in progress.\nI’m actively building out my case study as part of the Google Data Analytics Capstone.\nFull write-up, code, and visualizations will be available soon!"
  },
  {
    "objectID": "data.html#overview",
    "href": "data.html#overview",
    "title": "📦 Data Sources and Cleaning",
    "section": "🗂️ Overview",
    "text": "🗂️ Overview\nThis project integrates and analyzes Divvy bike-share trip data, station data, and Chicago weather data. The cleaning steps below describe the transformations, filters, and fixes applied to ensure high-quality, analysis-ready data."
  },
  {
    "objectID": "data.html#data-sources",
    "href": "data.html#data-sources",
    "title": "📦 Data Sources and Cleaning",
    "section": "📦 Data Sources",
    "text": "📦 Data Sources\n\nDivvy Trip Data: Divvy Trip Archive and City of Chicago Data Portal\nWeather Data: Meteostat Hourly Bulk Data\nTourist Stations: Custom dataset created from Google Maps lat/lng queries\n\nSee the 📦 Data Sources page for more details and attribution."
  },
  {
    "objectID": "data.html#ride-data-cleaning",
    "href": "data.html#ride-data-cleaning",
    "title": "📦 Data Sources and Cleaning",
    "section": "🚟️ Ride Data Cleaning",
    "text": "🚟️ Ride Data Cleaning\n\nRemoved pandemic-period rides:\n\nDropped all rides with start_time &gt; Jan 1, 2020 to avoid skew due to COVID-19 lockdown.\nAlso removed one late outlier from April 2020.\n\nRemoved zero-duration loop rides:\n\nFiltered out rides where start_time == end_time and start_station_id == end_station_id.\n\nRemoved “teleportation” rides:\n\nRides with start_time == end_time but different start and end stations were eliminated.\n\nEliminated negative-duration rides (“time travelers”):\n\nRides where start_time &gt; end_time were removed.\n\nDropped long-duration rides:\n\nExcluded rides longer than 24 hours (duration &gt; 86400 seconds).\nThese were excluded from analysis but retained in the database.\n\nFiltered rides missing user type:\n\nRemoved 194 rides with user_type IS NULL.\n\nDeduplicated rides:\n\nRemoved ~2,767 duplicate records where bike_id, start_time, and end_time were identical.\n\nFiltered overlapping rides per bike:\n\nFor bikes with multiple overlapping rides, kept the ride with the lowest ride_id."
  },
  {
    "objectID": "data.html#station-data-cleaning",
    "href": "data.html#station-data-cleaning",
    "title": "📦 Data Sources and Cleaning",
    "section": "📍 Station Data Cleaning",
    "text": "📍 Station Data Cleaning\n\nAllowed stations with same name but different coordinates:\n\nReplaced unique constraint on name with composite index:\nCREATE UNIQUE INDEX uniq_vector ON stations(name, lat, long);\nCREATE INDEX idx_name ON stations(name);\n\nRenamed ambiguous duplicates:\n\nManually added suffixes like ” II” to disambiguate repeated station names at different coordinates.\n\nNormalized source formats:\n\nSome station data was manually extracted from Excel, then converted to CSV for uniform processing."
  },
  {
    "objectID": "data.html#weather-data-cleaning",
    "href": "data.html#weather-data-cleaning",
    "title": "📦 Data Sources and Cleaning",
    "section": "☁️ Weather Data Cleaning",
    "text": "☁️ Weather Data Cleaning\n\nSelected Midway Airport station (72534):\n\nChosen for completeness and consistency across years.\n\nDropped unused or missing columns:\n\nsnow, wpgt, tsun, pres, and datetime were excluded from final dataset.\n\nCreated epoch column for joins:\n\nCombined date and hour fields into datetime, then converted to UNIX epoch to align with ride timestamps."
  },
  {
    "objectID": "data.html#notes",
    "href": "data.html#notes",
    "title": "📦 Data Sources and Cleaning",
    "section": "💡 Notes",
    "text": "💡 Notes\n\nAll transformations were tracked in versioned scripts and logged in logs/workLog.md.\nWeather data cleaning steps were scripted in src/load_weather.R.\nStation and ride data were validated and transformed via shell scripts and SQLite."
  },
  {
    "objectID": "data.html#license",
    "href": "data.html#license",
    "title": "📦 Data Sources and Cleaning",
    "section": "📋 License",
    "text": "📋 License\nDivvy and City of Chicago data is subject to the City of Chicago Terms of Use.\n\n\nSource: Meteostat  (opens new window)\n\n\nThis case study is © 2025 Scott Sesher and provided under the MIT License. See LICENSE for details."
  },
  {
    "objectID": "case-study.html",
    "href": "case-study.html",
    "title": "case-study",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "case-study.html#quarto",
    "href": "case-study.html#quarto",
    "title": "case-study",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "glossary.html",
    "href": "glossary.html",
    "title": "Glossary",
    "section": "",
    "text": "Glossary of Terms\nThis glossary defines key terms used throughout the case study.\n\n\n\nAverage Daily Rides\n\nThe total number of rides for a specific category (e.g., bike type or user type), divided by the number of days in the analysis period. This metric normalizes ride volume to allow comparisons across bike types or groups.\n\n\n\n\n\nBucket\n\nA predefined range used to group continuous data, such as ride counts or temperatures, for aggregation or visualization. For example, ride counts per bike may be grouped into 100-ride buckets.\n\n\n\n\n\nCluster (Ride Duration Cluster)\n\nA grouping of rides based on their duration using a clustering algorithm or predefined thresholds. In this study, rides are grouped into Short, Medium, and Long clusters to distinguish different usage behaviors.\n\n\n\n\n\nCustomer\n\nA user who does not have an annual or recurring membership. Customers include Day Pass riders, single-ride users, and other casual or pay-per-use riders. All non-subscriber users are classified as customers. The term casual rider might also be used for customers, but for this case study only the term customer is used.\n\n\n\n\n\nDensity Plot (Kernel Density Plot)\n\nA smoothed visualization of the distribution of a continuous variable, such as ride distance. It estimates the probability density function and often provides clearer insight than a histogram by reducing noise through smoothing.\n\n\n\n\n\nHaversine formula\n\nA mathematical formula used to cacluate the distance between any two points on a sphere along the great-arc going through both points.\n\n\n\n\n\nKernel\n\nA mathematical function (usually bell-shaped) used in kernel density estimation to create a smooth curve over individual data points. The width and shape of the kernel affect how smoothed the resulting density plot is.\n\n\n\n\n\nLoop Ride\n\nA bike ride that starts and ends at the same station. Often used as a proxy for recreational or tourist behavior. These rides are excluded from this analysis.\n\n\n\n\n\nMaximum Simultaneous Rides\n\nThe maximum number of rides that were active at the same time during a given period (e.g., a year). Calculated by tracking ride start and end events, computing a running total of concurrent rides, and taking the peak value. This metric is used to assess fleet load and system demand during peak usage periods. Also know as peak concurrency\n\n\n\n\n\nNon-Tourist Ride\n\nA ride that does not start or end near designated tourist destinations. These rides are considered more likely to reflect routine or local travel behavior.\n\n\n\n\n\nNon-Tourist Station\n\nA station not in or near a designated tourist destinations. These stations are considered to be more frequented by commuters.\n\n\n\n\n\nNormalization (Normalized Ride Volume)\n\nThe process of scaling data, typically between 0 and 1, to allow for comparisons across categories with different absolute values. For example, normalized ride volume allows temperature-based comparisons regardless of the overall number of rides.\n\n\n\n\n\nPeak Concurrency\n\nThe highest number of bike rides occurring simultaneously within a given time window (e.g., a day, month, or year). In this study, peak concurrency is equivalent to the maximum number of bikes in use at the same time, calculated using ride start and end times. Also referred to as max simultaneous rides. This metric helps assess system load, infrastructure limits, and usage spikes.\n\n\n\n\n\nRide Count per Bike\n\nThe total number of rides recorded for an individual bike over the dataset’s time span. Used to evaluate fleet utilization and wear.\n\n\n\n\n\nRide Distance (km)\n\nThe distance between start and end stations, caclulated using the Haversine formula, and measured in kilometers. Used as a proxy for trip length and user intent.\n\n\n\n\n\nRide Duration\n\nThe difference between ride end_time and start_time.\n\n\n\n\n\nStation\n\nA docking location where bikes or scooters can be picked up or returned. Used in geographic and behavioral analyses.\n\n\n\n\n\nSubscriber\n\nA user who holds an annual or annual-billed-monthly membership with the bike-sharing service. Subscribers might also be know as members, but for the purpose of this case study only the term Subscriber is used.\n\n\n\n\n\nUser Type\n\nA classification of users based on their relationship with the bike-share system, for the purpose of this case study the are devided into two groups, Subscribers or Customers.\n\n\n\n\n\nVisualization\n\nA graphical representation of data, such as bar charts, histograms, or density plots, used to communicate patterns and insights from the dataset."
  },
  {
    "objectID": "side-quest/Understanding_.prj_Files.html",
    "href": "side-quest/Understanding_.prj_Files.html",
    "title": "Understanding .prj Files in GIS: Your Geospatial Data’s Silent Interpreter",
    "section": "",
    "text": "In the world of Geographic Information Systems (GIS), data isn’t just about points, lines, and polygons; it’s also about where those features exist on Earth. This is where the .prj file comes in. A .prj file is a fundamental component of many geospatial datasets, particularly ESRI Shapefiles. It’s a plain text file that acts as the essential blueprint, defining the coordinate system and projection information for the accompanying spatial data.\n\nWhat’s Inside a .prj File?\nThe .prj file contains a precise, machine-readable description of the spatial reference system. This description is typically formatted in Well-Known Text (WKT), a standardized string that details how the data’s coordinates relate to a real-world location and how they are displayed on a flat map.\nA WKT string can specify both Geographic Coordinate Systems (GCS) and Projected Coordinate Systems (PCS):\n\nGeographic Coordinate System (GCS): This defines the global, spherical coordinate system. It includes:\n\nDatum: The model of the Earth’s shape (an ellipsoid or spheroid) and its position relative to the Earth’s center (e.g., WGS84, NAD83).\nSpheroid/Ellipsoid: The specific mathematical model of the Earth’s shape used by the datum.\nPrime Meridian: The reference longitude (usually Greenwich).\nAngular Unit: The unit for latitude and longitude (e.g., degrees).\n\nProjected Coordinate System (PCS): This defines how the 3D GCS coordinates are transformed onto a 2D flat plane, enabling measurement and mapping on a flat surface. It includes:\n\nProjection Type: The mathematical method used for the transformation (e.g., Transverse Mercator, Lambert Conformal Conic, Universal Transverse Mercator (UTM)).\nProjection Parameters: Specific values needed by the chosen projection, such as False Easting, False Northing, Central Meridian, Scale Factor, and Latitude of Origin.\nLinear Unit: The unit of measurement for the projected coordinates (e.g., meters, US survey feet).\n\nAuthority: Often includes an EPSG code (e.g., AUTHORITY[“EPSG”,“4326”] for WGS84 Geographic Coordinate System), which is a standardized code for a specific coordinate system definition.\n\n.prj files often also include an EPSG code, which is a standardized identifier for a specific coordinate system definition, allowing software to easily recognize and apply it.\nExample of a (simplified) .prj file content:\nPROJCS[\"NAD_1983_StatePlane_Washington_South_FIPS_4602_Ft_US\",GEOGCS[\"GCS_NAD_1983\",DATUM[\"D_NAD_1983\",SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Lambert_Conformal_Conic\"],PARAMETER[\"False_Easting\",1640416.666666667],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-120.5833333333333],PARAMETER[\"Standard_Parallel_1\",45.83333333333334],PARAMETER[\"Standard_Parallel_2\",47.33333333333334],PARAMETER[\"Latitude_Of_Origin\",45.33333333333334],UNIT[\"Foot_US\",0.3048006096012192]]\n(Note: In actual files, this is often a single, very long line with no extra spaces for compactness.)\n\n\nWhy is a .prj File Important in GIS?\nThe .prj file is critically important because it provides the necessary context for GIS software to correctly interpret, display, and analyze your spatial data. Without it, the software lacks the crucial information needed to understand where on Earth your data is located or how it should be presented.\nHere’s why it’s so vital:\n\nAccurate Display and Alignment: Without the .prj file, GIS software cannot correctly position your data on a map. Data might appear in the wrong location, be severely stretched or compressed, or even be completely invisible when overlaid with other layers.\nReliable Analysis: All spatial analysis operations (like calculating areas, distances, buffers, or performing overlays) depend on accurate coordinate system information. An incorrect or missing .prj file will lead to erroneous analytical results.\nInteroperability: GIS involves combining datasets from many sources. The .prj file enables “on-the-fly” projection, allowing GIS software to transform data from different coordinate systems into a common system for seamless integration and comparison.\nData Integrity: It ensures that your data retains its spatial meaning and integrity as it’s moved between different systems or shared with other users.\n\nWhile some older GIS software or workflows might allow you to work without a .prj file (by making assumptions), this is highly discouraged. A missing or incorrect .prj file is a common source of error and frustration in GIS.\n\n\nHow .prj Files are Typically Used\n\nCompanion File: For formats like the ESRI Shapefile, the .prj file is a companion file that carries the same base filename as the main data files (e.g., rivers.shp, rivers.dbf, rivers.shx, and rivers.prj) and resides in the same directory. GIS software automatically looks for it when loading the dataset.\nMetadata: It serves as vital metadata, explicitly defining the spatial reference properties that are not stored within the primary data file itself.\nProgrammatic Use: GIS software and libraries (like GDAL/OGR or ArcPy) can read, parse, and generate .prj files to ensure proper data handling and transformations.\n\nIn essence, the .prj file is the unsung hero of GIS data, providing the crucial spatial context that allows your maps to be accurate, your analyses to be valid, and your data to be truly meaningful in the real world.\n\n\nSources\n\nWhat is Data Mapping? Definition and Examples | Talend\nWhat is Data Mapping? | Informatica\nWhat is Data Mapping? The Ultimate Guide | Amplitude\nData mapping - Wikipedia\nPRJ Definition | GIS Dictionary - Esri Support\nESRI PRJ File\nWhat the prj-file stands for? - GIS StackExchange\n\nAttribution: Generated by Gemini (as your AI assistant)"
  },
  {
    "objectID": "side-quest/prj-quest.html",
    "href": "side-quest/prj-quest.html",
    "title": ".PRJ Side Quest",
    "section": "",
    "text": "Introduction\nThe soft hum of your GPU fans is a soothing backdrop as you monitor a complex data extraction, a mountain of zipped archives, purportedly filled with nothing but clean CSVs, is steadily being processed. You’ve automated most of it, trusting your script fu to handle the grunt work. But then, a subtle deviation,\nFile not found: Divvy_Stations_2013.shp.csv\nthat wasn’t expected. You curse yourself for not having better error handling, but these files were suppose to all follow the same naming convention. “Dot-s-h-p-dot-c-s-v” you mumble. What the hell is that? So you go looking for Divvy_Stations_2013.shp.zip, as that’s what would have been needed for it to be looking for Divvy_Stations_2013.shp.csv, to see what’s up.\nYou find it and it looks like it’s contents have been extracted into a directory named Divvy_Stations_2013.shp\nYou lean closer, a frown creasing your brow. Not a log, not a CSV file in sie and a bunch of files with extensions do recognize. You call upon your most reliable digital ally, the venerable file command, for its infallible wisdom.\nYou (to yourself, a quiet murmur): “Alright, file, old friend. Time to shed some light on this mystery.”\n(You type the command, the bytes of the file streaming through your discerning companion.)\n$ file *\nThe response appears, but it’s not the confident classification you expected. Instead, the file command’s output seems to be a slightly perplexed, glowing text on your screen, its usual stoic confidence replaced by a rare flicker of uncertainty.\nDivvy_Stations_2013.dbf: FoxBase+/dBase III DBF, 300 records * 319, update-date 114-2-6, codepage ID=0x57, at offset 193 1st record \"        5.000000State St & Harrison St                                                                                         \"\nDivvy_Stations_2013.prj: ASCII text, with no line terminators\nDivvy_Stations_2013.sbn: ESRI Shapefile version 738263040 length 1598\nDivvy_Stations_2013.sbx: ESRI Shapefile version 738263040 length 170\nDivvy_Stations_2013.shp: ESRI Shapefile version 1000 length 4250 type Point\nDivvy_Stations_2013.shx: ESRI Shapefile version 1000 length 1250 type Point\n“ASCII text, with no line terminators”, file didn’t know what it was, I think to myself.\nUNIX file Command (its glowing text box pulsing faintly): “Hmph. Divvy_Stations_2013.prj: ASCII text. That’s all I’ve got. I pride myself on recognizing the very soul of a file, its intrinsic nature, regardless of its flimsy namesake suffix. I know what a .csv is by its comma-separated heart, a .json by its curly-bracketed spirit, even a .tar.gz by its compressed archiveyness. But this… this .prj file. Its contents whisper of structure, of a world’s placement, of coordinates and projections… yet, my internal knowledge base, vast as it is, draws a blank when I analyze its raw essence alone. I can only infer it’s ‘ASCII text’ But it feels like so much more.”\nThe file command’s manifestation seems to sigh, its light dimming slightly in digital frustration. Suddenly, a new option pops up on your screen, a prompt for a deeper interaction: “Help file Recognize .prj?”\nUNIX file Command (its glow returning with renewed purpose): “If you, astute data wrangler, could delve into its depths and help me understand this .prj type – not merely by its extension, but by its very content, its internal patterns, its Well-Known Text signature… it would be an invaluable addition to my wisdom. It would empower me to instantly classify such files for all your future data extractions, making me truly complete in the realm of geospatial information. Will you embark on this small, yet intellectually profound, Quest for .prj Enlightenment?”\nThis quest will challenge you to apply your knowledge of GIS data structures and delve into the specifics of .prj files to enhance your trusted command-line companion’s capabilities.\nYou of course accept the quest as your always up for a challenge, but where to start. Well file said it was ASCII so let’s have a look at it with cat. Wait first we should see how big it is.\n$ ls -l Divvy_Stations_2013.prj \n-rw-rw-r-- 1 sas sas 145 Feb  6  2014 Divvy_Stations_2013.prj\nIt’s small so …\n$ cat Divvy_Stations_2013.prj\nGEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]]\nThat looks a little bit like GIS stuff, I don’t know much about that (if that’s what it is). Let’s consult one of the modern day oracles. So a quick trip on the Internet takes us to the Temple of OpenAI where we ask the oracle ChatGPT. Together with an offering of tokens you submit this prompt to the oracle.\nwhat does this look like, it's in a filename with the .prj extension?\nGEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]]\nAfter what seems like a long time the oracle responds\n\nThat .prj file is simply the Well-Known Text (WKT) definition of the dataset’s coordinate reference system. In your &gt; case it tells you that everything is in plain latitude/longitude on the WGS 84 datum. Here’s what each bit means:\n\n**GEOGCS[“GCS_WGS_1984”] This declares a Geographic Coordinate System called “WGS 1984” (i.e. not a projected system).\nDATUM[“D_WGS_1984”,SPHEROID[“WGS_1984”,6378137.0,298.257223563]] Defines the datum** (“D_WGS_1984”) and its reference ellipsoid (“WGS_1984”) with\nSemi-major axis = 6 378 137.0 m\n\nInverse flattening = 298.257223563\n\nPRIMEM[“Greenwich”,0.0] Sets the prime meridian at Greenwich (0° longitude).\nUNIT[“Degree”,0.0174532925199433] Says coordinates are measured in degrees, where 1 degree = 0.01745… radians.\n\nIn practice: any GIS or mapping tool reading that .prj will know your data’s points are in un-projected WGS84 lat/long. If you need to display or analyze it alongside data in another CRS (say UTM or Web Mercator), you’d re-project using that definition as the source.\n\n“Oracles speak in riddles because the gods do not tell plain truths to mortals.” Well, it confirms my hunch that this is GIS related, but now we have more questions and how can we possible tell file he didn’t know what something that was “Well-Known Text” was. The shame would be too much.\nMy tokens exhausted I leave the temple to find more answers, since now I have more questions now.\nWalking along wonder how to proceed, I mentally kick myself even getting into the thing. Then it hits me I don’t need to know all this GIS stuff, I just need to know enough to help file out. I might not have any more tokens but I do have a digital assistant at my disposal.\nSo I ask my digital assistant Gemini to find out what the hell “WGS 84 datum” means. while I get to work restating my purpose, because I’m getting off track and I want to knock this out and get back to importing those CSV files.\n\n\n🎯 Purpose\nEnable the UNIX file utility to recognize ESRI .prj projection files based on their content (not file extension), which follow a Well-Known Text (WKT) format. I don’t need to know everything about GIS, just enough to give file the info it needs.\n\n\n🔷 Gemini Returns\nWell Gemini what did you find out?\n\nThe World Geodetic System 1984 (WGS 84) is the global standard for defining the Earth’s size and shape and for precisely locating positions on its surface. It’s much more than just a coordinate system; it’s a comprehensive geodetic datum that serves as the fundamental reference for almost all modern geospatial applications, most notably the Global Positioning System (GPS).\nHere’s a breakdown of what WGS 84 encompasses and its key characteristics:\nWhat is a Geodetic Datum?\nBefore diving into WGS 84, it’s helpful to understand what a “geodetic datum” is. A geodetic datum is a reference system that defines how positions are represented on the Earth. It includes:\n\nA Coordinate System: A framework (like latitude, longitude, and height) for specifying locations.\nA Reference Ellipsoid (or Spheroid): A smooth, mathematical model of the Earth’s shape, which is an oblate spheroid (a sphere flattened at the poles and bulging at the equator). This ellipsoid is used as the surface on which latitude and longitude are defined.\nAn Origin and Orientation: Defines where the coordinate system starts and how it’s aligned in space relative to the Earth.\n\nKey Characteristics of WGS 84\nWGS 84 is defined and maintained by the United States National Geospatial-Intelligence Agency (NGA) and has several important characteristics:\n1 Earth-Centered, Earth-Fixed (ECEF): * Its origin (0,0,0) is located at the Earth’s geometric center of mass, including oceans and atmosphere.\n\nIts axes are fixed relative to the Earth’s crust, meaning they rotate with the Earth. This makes it ideal for global positioning as it provides a consistent reference frame for points on the moving Earth.\n\n2 Global Coverage:\n\nUnlike older, local datums (which were optimized for specific regions and could have significant discrepancies when moving across boundaries), WGS 84 provides a seamless, consistent reference frame for the entire globe.\n\n3 Reference Ellipsoid:\n\nWGS 84 uses its own specific reference ellipsoid (also called WGS 84 ellipsoid) with defined semi-major and semi-minor axes, and a flattening factor. This ellipsoid provides the mathematical surface for defining latitude and longitude.\n\n4 Reference for GPS:\n\nWGS 84 is the primary geodetic datum used by the Global Positioning System (GPS). All GPS receivers output coordinates in WGS 84 latitude, longitude, and ellipsoidal height by default. This makes it universally compatible with GPS devices and applications worldwide.\n\n5 Dynamic Nature (with Realizations):\n\nWhile WGS 84 is defined by a fixed set of parameters, the Earth’s surface is constantly changing due to tectonic plate movement, post-glacial rebound, and other geological processes.\nTo maintain high accuracy, WGS 84 is periodically updated through “realizations” (e.g., WGS 84 (G1762) being a more recent realization). These updates align WGS 84 with the International Terrestrial Reference Frame (ITRF), which incorporates global geodetic observations with very high precision. For most common uses, the differences between WGS 84 realizations are negligible, but for very high-precision applications, the specific realization used is important.\n\n6 Components: WGS 84 technically comprises:\n\nAn ellipsoid\nA horizontal datum (for latitude and longitude)\nA vertical datum (for ellipsoidal height)\nA coordinate system\n\n7 Associated Models: WGS 84 also includes associated models like the Earth Gravitational Model (EGM) and the World Magnetic Model (WMM), which describe Earth’s gravity and magnetic fields, respectively.\nPurpose and Importance\nThe main purposes of WGS 84 are:\n\nStandardization: To provide a single, consistent, and globally applicable reference system for geospatial information, enabling seamless data exchange and interoperability across different countries, organizations, and applications.\nNavigation: To serve as the foundation for satellite navigation systems like GPS, allowing accurate positioning and navigation worldwide. Mapping and GIS: To provide a fundamental framework for creating maps, charts, and Geographic Information Systems (GIS) data that are globally consistent.\nScientific Research: To support various geoscientific studies, including monitoring Earth’s gravity field, sea level changes, and tectonic plate movements.\n\nIn essence, WGS 84 is the invisible framework that underpins much of our modern world’s location-based technologies and understanding of the Earth.\n\nWell, I think I’m starting to understand that this GIS stuff is a little complicated. We need to hone in on the info we need a little more. Can you create a report for me about .prj files in the context of GIS? While I figure out what has to be done to get file to recognize these files once we have the information. I’ll ask my friend man, he knows about almost all the commands.\n\n\n📄 Custom magic File Snippet\nFilename: .magic or magic.local\n0   string  GEOGCS[        ESRI WKT projection file (geographic)\n0   string  PROJCS[        ESRI WKT projection file (projected)\n0   string  LOCAL_CS[      ESRI WKT projection file (local coordinate system)\n&gt;0  string  DATUM[         (with DATUM)\n&gt;0  string  SPHEROID[      (with SPHEROID)\n\n0   search/20   DATUM[     ESRI WKT projection file (WKT with DATUM)\n0   search/20   SPHEROID[  ESRI WKT projection file (WKT with SPHEROID)\n\n!:mime  text/plain\nUsage:\nfile -m ~/.magic somefile\nSupports detection even if the file has no .prj extension."
  },
  {
    "objectID": "viz/2025_Divvy_Stations.html",
    "href": "viz/2025_Divvy_Stations.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "🗺️ Screenshot: 2025 Divvy Stations Map\n\n  \n\nMap showing Divvy station locations across Chicago, captured during early data source exploration.\n\n\nThis is a screenshot of the Divvy Bicycle Stations Map from the City of Chicago Transportations web site. This image is referenced by the workLog during the exploratory stage of the case study while searching for a street map of Chicago to use in my own visualizations. This image was not used as a part of the case study.\nSource: Divvy Station Map Copyright: Map © City of Chicago. Used here under fair use for educational and analytical documentation."
  },
  {
    "objectID": "viz/Avg_Hourly_Rides_vs_Temp.html",
    "href": "viz/Avg_Hourly_Rides_vs_Temp.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Average Hourly Rides vs. Temperature\n\n  \n\nAverage hourly rides by temperature (°C), showing subscriber, customer, and total ride volume peaking near 25°C. Customers are slightly more temperature-sensitive; subscribers remain steadier.\n\n\nThis chart illustrates the relationship between ambient temperature (°C) and the average number of rides per hour, with data grouped into 2°C bins to smooth short-term fluctuations and reveal broader trends..\n\nThe x-axis shows temperature in degrees Celsius.\nThe y-axis displays the average number of rides per hour.\nGrid lines and a clear legend outside the plot area aid interpretability.\n\nThree ride categories are plotted:\n\nTotal Rides (all users)\nSubscribers (dark blue line)\nCustomers (dark orange line)\n\n\nInsights:\n\nBike usage increases with warmer weather, peaking for both Subscribers and Customers at 26°C (78.8∘F) temperatures, after which it falls off sharplybe.\nSubscribers tend to be less dependant on temperature range (correlation coefficient VALUE compared to VALUE for Customers), but sill follow the same basic pattern.\nCustomers show a sharper increase in usage with warmth, indicating stronger sensitivity to weather.\n\nThese trends can inform operational decisions and user engagement strategies, particularly around marketing and bike redistribution efforts during seasonal changes.\nBelow is the gnuplot command used to generate the chart.\nset title \"Average Hourly Rides vs. Temperature (2°C Bins)\"\nset xlabel \"Temperature (°C)\"\nset ylabel \"Average Rides per Hour\"\nset datafile separator '\\t'\nset term wxt\nset grid\nset key outside\nset format y \"%.0f\"\nplot \\\n&gt;    \"temp_vs_rides.tsv\" every ::35::68 using 1:2 with lines lw 2 lc rgb \"black\" title \"Avg Total\", \\\n    \"\" every ::35::68 using 1:3 with lines lw 2 lc rgb \"dark-blue\" title \"Avg Subscribers\", \\\n    \"\" every ::35::68 using 1:4 with lines lw 2 lc rgb \"dark-orange\" title \"Avg Customers\"\nplot \\\n    \"temp_vs_rides.tsv\" every ::35::68 using 1:2 with lines lw 2 lc rgb \"black\" title \"Avg Total\", \\\n    \"\" every ::35::68 using 1:3 with lines lw 2 lc rgb \"dark-blue\" title \"Avg Subscribers\", \\\n    \"\" every ::35::68 using 1:4 with lines lw 2 lc rgb \"dark-orange\" title \"Avg Customers\"\nBelow is the the SQL command used to gather data for this chart.\n.headers off\n.mode tabs\n.output avg_temp_vs_rides.tsv\n\nWITH binned AS (                          -- 2 °C comfort‑oriented buckets\n    SELECT\n        CAST(temp / 2.0 AS INT) * 2              AS temp_bin,         -- –10,‑8,…,34\n        r.user_type,\n        SUM(r.rides)                             AS rides\n    FROM rides_per_hour_tbl   AS r\n    JOIN hourly_weather       AS w  ON w.epoch = r.epoch\n    GROUP BY temp_bin, r.user_type\n), pivot AS (                             -- turn rows into columns\n    SELECT\n        temp_bin,\n        AVG(rides)                                  AS total,\n        AVG(CASE WHEN user_type='subscriber' THEN rides END) AS subs,\n        AVG(CASE WHEN user_type='customer'   THEN rides END) AS cust\n    FROM binned\n    GROUP BY temp_bin\n    ORDER BY temp_bin\n)\nSELECT temp_bin, total, subs, cust\nFROM pivot;\n\n.output stdout"
  },
  {
    "objectID": "viz/Difference_in_Ride_Proportions_Weekday-Weekend.html",
    "href": "viz/Difference_in_Ride_Proportions_Weekday-Weekend.html",
    "title": "Add week, month, season",
    "section": "",
    "text": "Hourly difference in ride proportions: Weekday minus Weekend. Red tones highlight hours where weekday rides are more frequent proportionally; blue tones highlight hours dominated by weekend activity.\n\n\n\n\nTitle: Difference in Ride Proportions: Weekday - Weekend X-axis: Hour of Day (0–23) Y-axis: Arbitrary (used to create banded heatmap effect) Color Scale:\n\nRed: Higher ride proportion on weekdays\nBlue: Higher ride proportion on weekends\nWhite: No significant difference in proportion\n\nInterpretation\n\nMorning hours (~7–9 AM) and afternoon hours (~4–6 PM) are clearly more active on weekdays, likely driven by commuting.\nMidday (10 AM–3 PM) shows a higher proportional share of rides on weekends, possibly indicating more recreational usage during these hours.\nNighttime hours (~8 PM onward) still lean toward weekday use, albeit more modestly.\n\nThis visualization normalizes by total weekday and weekend ride volume, enabling meaningful comparison of usage patterns across the day regardless of total volume differences.\n’’’R\nride_query &lt;- sprintf(” SELECT ride_id, start_time, end_time, start_station_id, end_station_id, bike_type FROM rides WHERE user_type = 1 AND start_station_id IN (%s) AND end_station_id IN (%s) AND start_time &gt;= strftime(‘%%s’, ‘2023-01-01’) “, station_ids_sql, station_ids_sql)\nnon_tourist_customer_rides_df &lt;- dbGetQuery(con, ride_query)\nnon_tourist_customer_rides_df &lt;- non_tourist_customer_rides_df %&gt;% mutate( ride_date = as.Date(as.POSIXct(start_time, origin = “1970-01-01”)), day_of_week = weekdays(ride_date), month = format(ride_date, “%B”), season = case_when( month %in% c(“December”, “January”, “February”) ~ “Winter”, month %in% c(“March”, “April”, “May”) ~ “Spring”, month %in% c(“June”, “July”, “August”) ~ “Summer”, month %in% c(“September”, “October”, “November”) ~ “Fall” ) )"
  },
  {
    "objectID": "viz/Difference_in_Ride_Proportions_Weekday-Weekend.html#difference-in-ride-proportions-weedkay-to-weekend",
    "href": "viz/Difference_in_Ride_Proportions_Weekday-Weekend.html#difference-in-ride-proportions-weedkay-to-weekend",
    "title": "Add week, month, season",
    "section": "",
    "text": "Hourly difference in ride proportions: Weekday minus Weekend. Red tones highlight hours where weekday rides are more frequent proportionally; blue tones highlight hours dominated by weekend activity.\n\n\n\n\nTitle: Difference in Ride Proportions: Weekday - Weekend X-axis: Hour of Day (0–23) Y-axis: Arbitrary (used to create banded heatmap effect) Color Scale:\n\nRed: Higher ride proportion on weekdays\nBlue: Higher ride proportion on weekends\nWhite: No significant difference in proportion\n\nInterpretation\n\nMorning hours (~7–9 AM) and afternoon hours (~4–6 PM) are clearly more active on weekdays, likely driven by commuting.\nMidday (10 AM–3 PM) shows a higher proportional share of rides on weekends, possibly indicating more recreational usage during these hours.\nNighttime hours (~8 PM onward) still lean toward weekday use, albeit more modestly.\n\nThis visualization normalizes by total weekday and weekend ride volume, enabling meaningful comparison of usage patterns across the day regardless of total volume differences.\n’’’R\nride_query &lt;- sprintf(” SELECT ride_id, start_time, end_time, start_station_id, end_station_id, bike_type FROM rides WHERE user_type = 1 AND start_station_id IN (%s) AND end_station_id IN (%s) AND start_time &gt;= strftime(‘%%s’, ‘2023-01-01’) “, station_ids_sql, station_ids_sql)\nnon_tourist_customer_rides_df &lt;- dbGetQuery(con, ride_query)\nnon_tourist_customer_rides_df &lt;- non_tourist_customer_rides_df %&gt;% mutate( ride_date = as.Date(as.POSIXct(start_time, origin = “1970-01-01”)), day_of_week = weekdays(ride_date), month = format(ride_date, “%B”), season = case_when( month %in% c(“December”, “January”, “February”) ~ “Winter”, month %in% c(“March”, “April”, “May”) ~ “Spring”, month %in% c(“June”, “July”, “August”) ~ “Summer”, month %in% c(“September”, “October”, “November”) ~ “Fall” ) )"
  },
  {
    "objectID": "viz/Divvy_Stations_table.html",
    "href": "viz/Divvy_Stations_table.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nThis is a screen shot of the Divvy_Stations_2013 table taken from QGIS"
  },
  {
    "objectID": "viz/Divvy_Stations_table.html#divvy-stations-table",
    "href": "viz/Divvy_Stations_table.html#divvy-stations-table",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nThis is a screen shot of the Divvy_Stations_2013 table taken from QGIS"
  },
  {
    "objectID": "viz/Hourly_Ride_Volume_vs_Temperature.html",
    "href": "viz/Hourly_Ride_Volume_vs_Temperature.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(rides_weather_df, aes(x = temp, y = rides, color = user_type)) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +\n  scale_color_manual(values = c(\"subscriber\" = \"blue\", \"customer\" = \"red\")) +\n  labs(\n    title = \"Hourly Ride Volume vs Temperature\",\n    x = \"Temperature (°C)\",\n    y = \"Hourly Ride Volume\",\n    color = \"User Type\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "viz/Hourly_Ride_Volume_vs_Temperature.html#hourly-ride-volume-vs-temperature",
    "href": "viz/Hourly_Ride_Volume_vs_Temperature.html#hourly-ride-volume-vs-temperature",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(rides_weather_df, aes(x = temp, y = rides, color = user_type)) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +\n  scale_color_manual(values = c(\"subscriber\" = \"blue\", \"customer\" = \"red\")) +\n  labs(\n    title = \"Hourly Ride Volume vs Temperature\",\n    x = \"Temperature (°C)\",\n    y = \"Hourly Ride Volume\",\n    color = \"User Type\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Distribution_Station_to_Station_Distance.html",
    "href": "viz/Non-Tourist_Customer_Distribution_Station_to_Station_Distance.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_loop_rides_df, aes(x = distance_km)) + \ngeom_density(fill = \"darkorange\", alpha = 0.6) +\nlabs(\ntitle = \"Non-Tourist_Customer_Distribution of Station-to-Station Distances\",\nx = \"Distance Between Stations (km)\",\ny = \"Density\"\n) +\ntheme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Distribution_Station_to_Station_Distance.html#non-tourist-customer-distribution-of-station-to-station-distances",
    "href": "viz/Non-Tourist_Customer_Distribution_Station_to_Station_Distance.html#non-tourist-customer-distribution-of-station-to-station-distances",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_loop_rides_df, aes(x = distance_km)) + \ngeom_density(fill = \"darkorange\", alpha = 0.6) +\nlabs(\ntitle = \"Non-Tourist_Customer_Distribution of Station-to-Station Distances\",\nx = \"Distance Between Stations (km)\",\ny = \"Density\"\n) +\ntheme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Loop_Ride_Length_Distribution.html",
    "href": "viz/Non-Tourist_Customer_Loop_Ride_Length_Distribution.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Loop ride durations among non-tourist customers show a consistently skewed distribution, regardless of time of day or whether the ride occurred on a weekday or weekend. Ride length is typically short, with a rapid drop-off in frequency after the first 10–15 minutes across all hourly intervals.\n\n\n\n\nTitle: Loop Ride Length Distribution by Week Part and Time of Day Source: Non-tourist customer rides classified as “loop rides” (start and end at the same station) X-Axis: Ride Length (minutes) Y-Axis: Ride Count Faceting: 24 hourly bins (0–23), each split by weekday/weekend Color Encoding: Different fill colors for each Week.Part.Hour combination (e.g., Weekend.0, Weekday.14) shown in the legend\n\n\n\nConsistent Right Skew: In every hourly panel, ride length distributions are heavily skewed right, peaking in the 0–10 minute range and tapering off sharply.\n\nNo Strong Time-of-Day Effect: There is no significant shift in distribution shape across hours, though some hour blocks (e.g., mid-afternoon) show more total rides.\n\nLoop Behavior: This pattern reinforces the idea that many loop rides — likely recreational — are short and time-insensitive.\n\nWeekend vs. Weekday: Although both categories are shown, the duration distributions remain similar, suggesting time of day may be less influential for loop ride length than ride purpose or rider type.\nggplot(loop_rides_non_tourist, aes(x = ride_length_min, fill = interaction(week_part, hour_local))) \n+\ngeom_histogram(binwidth = 1, position = \"identity\", alpha = 0.5) +\nfacet_wrap(~ hour_local, ncol = 4) +\nlabs(title = \"Loop Ride Length Distribution by Week Part and Time of Day\",\nx = \"Ride Length (minutes)\",\ny = \"Ride Count\",\nfill = \"Week/Time\") +\ntheme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Loop_Ride_Length_Distribution.html#loop-ride-length-distribution-by-week-part-and-time-of-day",
    "href": "viz/Non-Tourist_Customer_Loop_Ride_Length_Distribution.html#loop-ride-length-distribution-by-week-part-and-time-of-day",
    "title": "Bike share case-study",
    "section": "",
    "text": "Loop ride durations among non-tourist customers show a consistently skewed distribution, regardless of time of day or whether the ride occurred on a weekday or weekend. Ride length is typically short, with a rapid drop-off in frequency after the first 10–15 minutes across all hourly intervals.\n\n\n\n\nTitle: Loop Ride Length Distribution by Week Part and Time of Day Source: Non-tourist customer rides classified as “loop rides” (start and end at the same station) X-Axis: Ride Length (minutes) Y-Axis: Ride Count Faceting: 24 hourly bins (0–23), each split by weekday/weekend Color Encoding: Different fill colors for each Week.Part.Hour combination (e.g., Weekend.0, Weekday.14) shown in the legend\n\n\n\nConsistent Right Skew: In every hourly panel, ride length distributions are heavily skewed right, peaking in the 0–10 minute range and tapering off sharply.\n\nNo Strong Time-of-Day Effect: There is no significant shift in distribution shape across hours, though some hour blocks (e.g., mid-afternoon) show more total rides.\n\nLoop Behavior: This pattern reinforces the idea that many loop rides — likely recreational — are short and time-insensitive.\n\nWeekend vs. Weekday: Although both categories are shown, the duration distributions remain similar, suggesting time of day may be less influential for loop ride length than ride purpose or rider type.\nggplot(loop_rides_non_tourist, aes(x = ride_length_min, fill = interaction(week_part, hour_local))) \n+\ngeom_histogram(binwidth = 1, position = \"identity\", alpha = 0.5) +\nfacet_wrap(~ hour_local, ncol = 4) +\nlabs(title = \"Loop Ride Length Distribution by Week Part and Time of Day\",\nx = \"Ride Length (minutes)\",\ny = \"Ride Count\",\nfill = \"Week/Time\") +\ntheme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_Duration_Density.html",
    "href": "viz/Non-Tourist_Customer_Ride_Duration_Density.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = ride_length_min)) +\n     geom_density(fill = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Customer Ride Duration Density\",\n         x = \"Ride Length (minutes)\",\n         y = \"Density\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_Duration_Density.html#non-tourist-customer-ride-duration-density",
    "href": "viz/Non-Tourist_Customer_Ride_Duration_Density.html#non-tourist-customer-ride-duration-density",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = ride_length_min)) +\n     geom_density(fill = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Customer Ride Duration Density\",\n         x = \"Ride Length (minutes)\",\n         y = \"Density\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_Duration_by_Weekday_vs_Weekend.html",
    "href": "viz/Non-Tourist_Customer_Ride_Duration_by_Weekday_vs_Weekend.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Ride Duration Distribution by Day Type (Customer Rides Only) This density plot shows the distribution of ride durations in minutes for non-tourist customer rides, separated by weekdays and weekends. Weekday rides tend to peak slightly earlier and higher than weekend rides, indicating a stronger presence of short utility trips during the work week.\n\n\n\n\nThis kernel density plot compares the ride duration (in minutes) of non-tourist customer bike rides, distinguishing between weekday and weekend behavior. It focuses exclusively on non-subscriber riders whose trips did not start or end near tourist destinations.\n\n\n\n\nX-Axis (Ride Length in Minutes):\n\nRanges from 0 to 150 minutes.\nMeasures the total ride time as reported in the dataset.\nFocuses on the practical duration range; longer trips beyond 150 minutes were likely excluded or negligible.\n\nY-Axis (Density):\n\nRepresents the smoothed distribution of ride durations using kernel density estimation.\nHigher values reflect more common durations.\n\n\n\n\n\n\nWeekday (Blue):\n\nStrong peak at short durations (approximately 6–8 minutes).\nSteeper decline after peak.\n\nWeekend (Orange):\n\nPeak is broader and slightly lower, centered just after 8 minutes.\nSlower decline, suggesting more variety in weekend usage.\n\n\n\n\n\n\nWeekday rides are slightly shorter on average and more tightly concentrated.\n\nLikely dominated by quick errands, commutes, or first-mile/last-mile transport.\n\nWeekend rides show greater variability.\n\nSuggests a mix of errand and recreational uses, especially among customers who may be exploring neighborhoods or casually traveling.\n\nBoth distributions are right-skewed, with long tails indicating occasional extended rides by some users.\n\n\n\n\nThis view supports the hypothesis that weekday customer rides are more task-oriented, while weekend usage involves longer, discretionary trips. Although the differences are subtle, they are consistent with other indicators of time-based travel patterns in non-tourist areas.\n\n\n\nThis chart is useful for: - Understanding ride duration norms by day type. - Supporting demand modeling and pricing strategies tailored to weekdays vs weekends. - Refining customer journey segmentation without needing user-level metadata.\nggplot(non_tourist_customer_rides_df, aes(x = ride_length_min, fill = week_part)) +\n     geom_density(alpha = 0.4) +\n     scale_fill_manual(values = c(\"Weekday\" = \"darkblue\", \"Weekend\" = \"darkorange\")) +\n     labs(\n         title = \"Non-Tourist Customer Ride Duration by Weekday vs Weekend\",\n         x = \"Ride Length (minutes)\",\n         fill = \"Day Type\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_Duration_by_Weekday_vs_Weekend.html#ride-duration-distribution-by-weekday-vs-weekend-non-tourist-customers",
    "href": "viz/Non-Tourist_Customer_Ride_Duration_by_Weekday_vs_Weekend.html#ride-duration-distribution-by-weekday-vs-weekend-non-tourist-customers",
    "title": "Bike share case-study",
    "section": "",
    "text": "Ride Duration Distribution by Day Type (Customer Rides Only) This density plot shows the distribution of ride durations in minutes for non-tourist customer rides, separated by weekdays and weekends. Weekday rides tend to peak slightly earlier and higher than weekend rides, indicating a stronger presence of short utility trips during the work week.\n\n\n\n\nThis kernel density plot compares the ride duration (in minutes) of non-tourist customer bike rides, distinguishing between weekday and weekend behavior. It focuses exclusively on non-subscriber riders whose trips did not start or end near tourist destinations.\n\n\n\n\nX-Axis (Ride Length in Minutes):\n\nRanges from 0 to 150 minutes.\nMeasures the total ride time as reported in the dataset.\nFocuses on the practical duration range; longer trips beyond 150 minutes were likely excluded or negligible.\n\nY-Axis (Density):\n\nRepresents the smoothed distribution of ride durations using kernel density estimation.\nHigher values reflect more common durations.\n\n\n\n\n\n\nWeekday (Blue):\n\nStrong peak at short durations (approximately 6–8 minutes).\nSteeper decline after peak.\n\nWeekend (Orange):\n\nPeak is broader and slightly lower, centered just after 8 minutes.\nSlower decline, suggesting more variety in weekend usage.\n\n\n\n\n\n\nWeekday rides are slightly shorter on average and more tightly concentrated.\n\nLikely dominated by quick errands, commutes, or first-mile/last-mile transport.\n\nWeekend rides show greater variability.\n\nSuggests a mix of errand and recreational uses, especially among customers who may be exploring neighborhoods or casually traveling.\n\nBoth distributions are right-skewed, with long tails indicating occasional extended rides by some users.\n\n\n\n\nThis view supports the hypothesis that weekday customer rides are more task-oriented, while weekend usage involves longer, discretionary trips. Although the differences are subtle, they are consistent with other indicators of time-based travel patterns in non-tourist areas.\n\n\n\nThis chart is useful for: - Understanding ride duration norms by day type. - Supporting demand modeling and pricing strategies tailored to weekdays vs weekends. - Refining customer journey segmentation without needing user-level metadata.\nggplot(non_tourist_customer_rides_df, aes(x = ride_length_min, fill = week_part)) +\n     geom_density(alpha = 0.4) +\n     scale_fill_manual(values = c(\"Weekday\" = \"darkblue\", \"Weekend\" = \"darkorange\")) +\n     labs(\n         title = \"Non-Tourist Customer Ride Duration by Weekday vs Weekend\",\n         x = \"Ride Length (minutes)\",\n         fill = \"Day Type\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_Duration_vs_Station_Distance.html",
    "href": "viz/Non-Tourist_Customer_Ride_Duration_vs_Station_Distance.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Ride Duration vs. Station Distance (Non-Tourist Customer Rides) This scatterplot displays the relationship between ride length and distance between stations. While longer distances generally correspond to longer durations, many short-distance rides also exhibit long durations, suggesting varied usage patterns. A linear reference line highlights the lower boundary of likely direct trips.\n\n\n\n\nThis scatterplot shows the relationship between ride duration and station-to-station distance for non-tourist customer rides. A linear reference line is included for interpretive comparison.\n\n\n\n\nX-Axis (Distance Between Stations in km):\n\nRanges from 0 to ~30 km.\nRepresents the straight-line distance between the ride’s start and end stations.\n\nY-Axis (Ride Length in minutes):\n\nRanges from 0 to 150 minutes.\nIndicates the duration of each ride.\n\n\n\n\n\n\nGreen points:\n\nRepresent individual non-tourist customer rides.\nHeavily concentrated in the lower-left region, tapering as distance increases.\n\nBlue line:\n\nA linear reference line (possibly showing a constant-speed model or fitted trend).\nHelps visualize the general relationship between time and distance.\n\n\n\n\n\n\nDense cluster near origin:\n\nThe majority of rides are short in both duration and distance.\nSuggests highly localized use, likely for errands or short commutes.\n\nWide variance in ride length for short distances:\n\nSome very short-distance rides take a long time — could indicate indirect routes, traffic, or leisurely pacing.\n\nSparse long-distance rides:\n\nAs station distance increases, rides become less frequent but follow a wider spread of durations.\n\nLinear boundary below the point cloud:\n\nThe blue line roughly follows the lower edge of the ride cloud, suggesting a speed floor (minimum speed threshold).\nThis could represent the fastest direct rides, possibly made with electric bikes or scooters.\n\n\n\n\n\n\nThere’s a positive relationship between station distance and ride duration, but with high variance.\nMany long-duration rides cover only short distances, hinting at circuitous routes, heavy traffic, or recreational usage.\nThe plot may also reflect the impact of stop time (e.g., errands, pauses) not being filtered out.\n\n\n\n\nThis visualization helps: - Explore efficiency and routing behavior of customers. - Identify outliers and usage extremes (e.g., long duration for short distances). - Evaluate suitability of distance as a proxy for estimating ride time.\nnon_loop_rides_df &lt;- non_tourist_customer_rides_df %&gt;%\nfilter(start_station_id != end_station_id)\nlibrary(geosphere)  # for distHaversine\nnon_loop_rides_df &lt;- non_loop_rides_df %&gt;%\nleft_join(non_tourist_stations_df %&gt;% select(start_station_id = station_id, start_lat = latitude, st\nart_lon = longitude),\nby = \"start_station_id\") %&gt;%\nleft_join(non_tourist_stations_df %&gt;% select(end_station_id = station_id, end_lat = latitude, end_lo\nn = longitude),\nby = \"end_station_id\") %&gt;%\nmutate(\ndistance_m = distHaversine(matrix(c(start_lon, start_lat), ncol = 2),\nmatrix(c(end_lon, end_lat), ncol = 2)),\ndistance_km = distance_m / 1000\n)\n\n\nnon_loop_rides_df &lt;- non_loop_rides_df %&gt;%\nleft_join(stations_df %&gt;%\nrename(start_station_id = station_id,\nstart_lat = lat,\nstart_long = long),\nby = \"start_station_id\") %&gt;%\nleft_join(stations_df %&gt;%\nrename(end_station_id = station_id,\nend_lat = lat,\nend_long = long),\nby = \"end_station_id\")\nnon_loop_rides_df &lt;- non_loop_rides_df %&gt;%\nmutate(\ndistance_m = distHaversine(\nmatrix(c(start_long, start_lat), ncol = 2),\nmatrix(c(end_long, end_lat), ncol = 2)\n),\ndistance_km = distance_m / 1000\n)\n'''\n\n\n'''R\nlibrary(ggplot2)\nggplot(non_loop_rides_df, aes(x = distance_km, y = ride_length_min)) +\ngeom_point(alpha = 0.05, color = \"darkgreen\") +\ngeom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +\nlabs(\ntitle = \"Ride Duration vs. Station Distance\",\nx = \"Distance Between Stations (km)\",\ny = \"Ride Length (minutes)\"\n) +\ntheme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Ride_Duration_vs_Station_Distance.html#ride-duration-vs.-station-distance-non-tourist-customers",
    "href": "viz/Non-Tourist_Customer_Ride_Duration_vs_Station_Distance.html#ride-duration-vs.-station-distance-non-tourist-customers",
    "title": "Bike share case-study",
    "section": "",
    "text": "Ride Duration vs. Station Distance (Non-Tourist Customer Rides) This scatterplot displays the relationship between ride length and distance between stations. While longer distances generally correspond to longer durations, many short-distance rides also exhibit long durations, suggesting varied usage patterns. A linear reference line highlights the lower boundary of likely direct trips.\n\n\n\n\nThis scatterplot shows the relationship between ride duration and station-to-station distance for non-tourist customer rides. A linear reference line is included for interpretive comparison.\n\n\n\n\nX-Axis (Distance Between Stations in km):\n\nRanges from 0 to ~30 km.\nRepresents the straight-line distance between the ride’s start and end stations.\n\nY-Axis (Ride Length in minutes):\n\nRanges from 0 to 150 minutes.\nIndicates the duration of each ride.\n\n\n\n\n\n\nGreen points:\n\nRepresent individual non-tourist customer rides.\nHeavily concentrated in the lower-left region, tapering as distance increases.\n\nBlue line:\n\nA linear reference line (possibly showing a constant-speed model or fitted trend).\nHelps visualize the general relationship between time and distance.\n\n\n\n\n\n\nDense cluster near origin:\n\nThe majority of rides are short in both duration and distance.\nSuggests highly localized use, likely for errands or short commutes.\n\nWide variance in ride length for short distances:\n\nSome very short-distance rides take a long time — could indicate indirect routes, traffic, or leisurely pacing.\n\nSparse long-distance rides:\n\nAs station distance increases, rides become less frequent but follow a wider spread of durations.\n\nLinear boundary below the point cloud:\n\nThe blue line roughly follows the lower edge of the ride cloud, suggesting a speed floor (minimum speed threshold).\nThis could represent the fastest direct rides, possibly made with electric bikes or scooters.\n\n\n\n\n\n\nThere’s a positive relationship between station distance and ride duration, but with high variance.\nMany long-duration rides cover only short distances, hinting at circuitous routes, heavy traffic, or recreational usage.\nThe plot may also reflect the impact of stop time (e.g., errands, pauses) not being filtered out.\n\n\n\n\nThis visualization helps: - Explore efficiency and routing behavior of customers. - Identify outliers and usage extremes (e.g., long duration for short distances). - Evaluate suitability of distance as a proxy for estimating ride time.\nnon_loop_rides_df &lt;- non_tourist_customer_rides_df %&gt;%\nfilter(start_station_id != end_station_id)\nlibrary(geosphere)  # for distHaversine\nnon_loop_rides_df &lt;- non_loop_rides_df %&gt;%\nleft_join(non_tourist_stations_df %&gt;% select(start_station_id = station_id, start_lat = latitude, st\nart_lon = longitude),\nby = \"start_station_id\") %&gt;%\nleft_join(non_tourist_stations_df %&gt;% select(end_station_id = station_id, end_lat = latitude, end_lo\nn = longitude),\nby = \"end_station_id\") %&gt;%\nmutate(\ndistance_m = distHaversine(matrix(c(start_lon, start_lat), ncol = 2),\nmatrix(c(end_lon, end_lat), ncol = 2)),\ndistance_km = distance_m / 1000\n)\n\n\nnon_loop_rides_df &lt;- non_loop_rides_df %&gt;%\nleft_join(stations_df %&gt;%\nrename(start_station_id = station_id,\nstart_lat = lat,\nstart_long = long),\nby = \"start_station_id\") %&gt;%\nleft_join(stations_df %&gt;%\nrename(end_station_id = station_id,\nend_lat = lat,\nend_long = long),\nby = \"end_station_id\")\nnon_loop_rides_df &lt;- non_loop_rides_df %&gt;%\nmutate(\ndistance_m = distHaversine(\nmatrix(c(start_long, start_lat), ncol = 2),\nmatrix(c(end_long, end_lat), ncol = 2)\n),\ndistance_km = distance_m / 1000\n)\n'''\n\n\n'''R\nlibrary(ggplot2)\nggplot(non_loop_rides_df, aes(x = distance_km, y = ride_length_min)) +\ngeom_point(alpha = 0.05, color = \"darkgreen\") +\ngeom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +\nlabs(\ntitle = \"Ride Duration vs. Station Distance\",\nx = \"Distance Between Stations (km)\",\ny = \"Ride Length (minutes)\"\n) +\ntheme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Rides_by_Day_of_the_Week.html",
    "href": "viz/Non-Tourist_Customer_Rides_by_Day_of_the_Week.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = day_of_week)) +\n     geom_bar(fill = \"steelblue\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Day of the Week\",\n         x = \"Day of the Week\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Rides_by_Day_of_the_Week.html#non-tourist-customer-rides-by-day-of-the-week",
    "href": "viz/Non-Tourist_Customer_Rides_by_Day_of_the_Week.html#non-tourist-customer-rides-by-day-of-the-week",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = day_of_week)) +\n     geom_bar(fill = \"steelblue\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Day of the Week\",\n         x = \"Day of the Week\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Rides_by_Hour_of_Day.html",
    "href": "viz/Non-Tourist_Customer_Rides_by_Hour_of_Day.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(rides_by_hour_weekpart, aes(x = hour, y = ride_count, fill = week_part)) +\n     geom_col(position = \"dodge\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Hour of Day\",\n         subtitle = \"Adjusted to Chicago Local Time\",\n         x = \"Hour of Day\",\n         y = \"Ride Count\",\n         fill = \"Day Type\"\n     ) +\n     scale_x_continuous(breaks = 0:23) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Rides_by_Hour_of_Day.html#non-tourist-customer-rides-by-hour-of-day",
    "href": "viz/Non-Tourist_Customer_Rides_by_Hour_of_Day.html#non-tourist-customer-rides-by-hour-of-day",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(rides_by_hour_weekpart, aes(x = hour, y = ride_count, fill = week_part)) +\n     geom_col(position = \"dodge\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Hour of Day\",\n         subtitle = \"Adjusted to Chicago Local Time\",\n         x = \"Hour of Day\",\n         y = \"Ride Count\",\n         fill = \"Day Type\"\n     ) +\n     scale_x_continuous(breaks = 0:23) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Rides_by_Season.html",
    "href": "viz/Non-Tourist_Customer_Rides_by_Season.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = season)) +\n     geom_bar(fill = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Season\",\n         x = \"Season\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Customer_Rides_by_Season.html#non-tourist-customer-rides-by-season",
    "href": "viz/Non-Tourist_Customer_Rides_by_Season.html#non-tourist-customer-rides-by-season",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(non_tourist_customer_rides_df, aes(x = season)) +\n     geom_bar(fill = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Customer Rides by Season\",\n         x = \"Season\",\n         y = \"Number of Rides\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Non-Loop_Customer_Ride_Distance_Distribution_by_Ride_Duration_Cluster.html",
    "href": "viz/Non-Tourist_Non-Loop_Customer_Ride_Distance_Distribution_by_Ride_Duration_Cluster.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Ride Distance Distribution by Duration Cluster (Customer Rides Only) This density plot compares ride distances for non-tourist, non-loop customer rides, grouped into clusters based on ride duration. Short-duration rides are tightly concentrated around 1–2 km, medium-duration rides cover a broader 2–6 km range, and long-duration rides extend further, reflecting distinct usage behaviors within the same user group.\n\n\n\n\nThis kernel density plot illustrates the distribution of ride distances (in kilometers) for non-tourist, non-loop customer rides, broken out by ride duration clusters labeled as Short, Medium, and Long.\n\n\n\n\nX-Axis (Distance in km):\n\nRanges from 0 to 10 km.\nRepresents the straight-line distance from the start stations to the end stations (the minimum possilbe distatnce covered). Do not confuse this with the actual distance ridden, we have no way of knowing that from the currently available data.\n\nY-Axis (Density):\n\nRepresents the probability density of ride distances within each cluster.\nHigher peaks indicate more common distances in that cluster.\n\n\n\n\n\n\nShort (Blue):\n\nPeaks sharply between 0.5–2.5 km.\nCharacterized by high density at shorter distances and a quick drop-off after 3 km.\n\nMedium (Green):\n\nPeaks broadly from ~2.5 km to 6 km.\nForms a wider and flatter distribution, indicating greater variability in ride lengths.\n\nLong (Red/Pink):\n\nStarts lower but maintains a relatively even presence across 3–10 km.\nLongest tail, with density extending up to the maximum distance shown (10 km).\n\n\n\n\n\n\nShort Cluster:\n\nHighest density of all clusters.\nIndicates that most customer rides classified as “short” are under 3 km.\nMay reflect last-mile or station-to-neighborhood travel.\n\nMedium Cluster:\n\nBroadest range of distances.\nOverlaps with both short and long clusters, suggesting transitional ride behavior.\n\nLong Cluster:\n\nLess frequent but not rare.\nRide distances in this group begin at approximatley 1.5 km and extend up to 10 km.\nPossibly includes destination-oriented or special-purpose trips.\n\n\n\n\n\n\nBehavioral Insights:\n\nThe sharp peak of the short cluster implies highly consistent short-distance use, likely for errands or short hops.\nThe medium cluster suggests a flexible usage pattern, potentially including both commuting and recreational trips.\nLong-duration rides, although less common, cover the widest distance range, reflecting diverse travel purposes.\n\nData Characteristics:\n\nRides were filtered to exclude tourist, subscribers and loop rides, increasing the likelihood that these reflect practical customer travel behavior (e.g., commuting, errands).\nClustering these customer rides by duration helps uncover distinct usage patterns — such as short errand-like trips versus longer recreational journeys — without needing to segment riders any further or rely on additional metadata.\n\n\n\n\n\nThis chart helps: - Understand ride behavior by duration across distance ranges. - Support clustering-based segmentation strategies. - Inform infrastructure placement, pricing models, or service design for non-tourist use cases."
  },
  {
    "objectID": "viz/Non-Tourist_Non-Loop_Customer_Ride_Distance_Distribution_by_Ride_Duration_Cluster.html#ride-distance-distribution-by-duration-cluster-non-tourist-non-loop-customers",
    "href": "viz/Non-Tourist_Non-Loop_Customer_Ride_Distance_Distribution_by_Ride_Duration_Cluster.html#ride-distance-distribution-by-duration-cluster-non-tourist-non-loop-customers",
    "title": "Bike share case-study",
    "section": "",
    "text": "Ride Distance Distribution by Duration Cluster (Customer Rides Only) This density plot compares ride distances for non-tourist, non-loop customer rides, grouped into clusters based on ride duration. Short-duration rides are tightly concentrated around 1–2 km, medium-duration rides cover a broader 2–6 km range, and long-duration rides extend further, reflecting distinct usage behaviors within the same user group.\n\n\n\n\nThis kernel density plot illustrates the distribution of ride distances (in kilometers) for non-tourist, non-loop customer rides, broken out by ride duration clusters labeled as Short, Medium, and Long.\n\n\n\n\nX-Axis (Distance in km):\n\nRanges from 0 to 10 km.\nRepresents the straight-line distance from the start stations to the end stations (the minimum possilbe distatnce covered). Do not confuse this with the actual distance ridden, we have no way of knowing that from the currently available data.\n\nY-Axis (Density):\n\nRepresents the probability density of ride distances within each cluster.\nHigher peaks indicate more common distances in that cluster.\n\n\n\n\n\n\nShort (Blue):\n\nPeaks sharply between 0.5–2.5 km.\nCharacterized by high density at shorter distances and a quick drop-off after 3 km.\n\nMedium (Green):\n\nPeaks broadly from ~2.5 km to 6 km.\nForms a wider and flatter distribution, indicating greater variability in ride lengths.\n\nLong (Red/Pink):\n\nStarts lower but maintains a relatively even presence across 3–10 km.\nLongest tail, with density extending up to the maximum distance shown (10 km).\n\n\n\n\n\n\nShort Cluster:\n\nHighest density of all clusters.\nIndicates that most customer rides classified as “short” are under 3 km.\nMay reflect last-mile or station-to-neighborhood travel.\n\nMedium Cluster:\n\nBroadest range of distances.\nOverlaps with both short and long clusters, suggesting transitional ride behavior.\n\nLong Cluster:\n\nLess frequent but not rare.\nRide distances in this group begin at approximatley 1.5 km and extend up to 10 km.\nPossibly includes destination-oriented or special-purpose trips.\n\n\n\n\n\n\nBehavioral Insights:\n\nThe sharp peak of the short cluster implies highly consistent short-distance use, likely for errands or short hops.\nThe medium cluster suggests a flexible usage pattern, potentially including both commuting and recreational trips.\nLong-duration rides, although less common, cover the widest distance range, reflecting diverse travel purposes.\n\nData Characteristics:\n\nRides were filtered to exclude tourist, subscribers and loop rides, increasing the likelihood that these reflect practical customer travel behavior (e.g., commuting, errands).\nClustering these customer rides by duration helps uncover distinct usage patterns — such as short errand-like trips versus longer recreational journeys — without needing to segment riders any further or rely on additional metadata.\n\n\n\n\n\nThis chart helps: - Understand ride behavior by duration across distance ranges. - Support clustering-based segmentation strategies. - Inform infrastructure placement, pricing models, or service design for non-tourist use cases."
  },
  {
    "objectID": "viz/Non-Tourist_Proportion_of_Daily_Rides_by_Hour_and_Day_Type.html",
    "href": "viz/Non-Tourist_Proportion_of_Daily_Rides_by_Hour_and_Day_Type.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Proportion of daily non-tourist rides by hour of day and day type (weekday vs. weekend). Weekdays show a clear peak in the late afternoon commute hours, while weekends have a more uniform midday distribution.\n\n\n\n\nThis heatmap visualizes the hourly share of total daily rides for non-tourist users, broken out by Day Type (Weekday vs. Weekend). Darker orange indicates a higher proportion of rides within that hour relative to the day’s total.\n\n\n\nWeekdays show a pronounced peak around 17:00–18:00, corresponding to the evening commute.\nWeekend ride proportions are more evenly spread from late morning through mid-afternoon, peaking slightly between 12:00–16:00.\nEarly morning (before 6:00) and late evening (after 21:00) show minimal ride activity for both day types.\n\nThis visualization provides insight into how ride timing differs based on routine schedules, further supporting inferences about commuter versus recreational behavior.\nggplot(ride_props, aes(x = hour, y = week_part, fill = prop)) +\n     geom_tile() +\n     scale_fill_gradient(low = \"white\", high = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Proportion of Daily Rides by Hour and Day Type\",\n         x = \"Hour of Day\",\n         y = \"Day Type\",\n         fill = \"Ride Proportion\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Non-Tourist_Proportion_of_Daily_Rides_by_Hour_and_Day_Type.html#non-tourist-proportion-of-daily-rides-by-hour-and-day-type",
    "href": "viz/Non-Tourist_Proportion_of_Daily_Rides_by_Hour_and_Day_Type.html#non-tourist-proportion-of-daily-rides-by-hour-and-day-type",
    "title": "Bike share case-study",
    "section": "",
    "text": "Proportion of daily non-tourist rides by hour of day and day type (weekday vs. weekend). Weekdays show a clear peak in the late afternoon commute hours, while weekends have a more uniform midday distribution.\n\n\n\n\nThis heatmap visualizes the hourly share of total daily rides for non-tourist users, broken out by Day Type (Weekday vs. Weekend). Darker orange indicates a higher proportion of rides within that hour relative to the day’s total.\n\n\n\nWeekdays show a pronounced peak around 17:00–18:00, corresponding to the evening commute.\nWeekend ride proportions are more evenly spread from late morning through mid-afternoon, peaking slightly between 12:00–16:00.\nEarly morning (before 6:00) and late evening (after 21:00) show minimal ride activity for both day types.\n\nThis visualization provides insight into how ride timing differs based on routine schedules, further supporting inferences about commuter versus recreational behavior.\nggplot(ride_props, aes(x = hour, y = week_part, fill = prop)) +\n     geom_tile() +\n     scale_fill_gradient(low = \"white\", high = \"darkorange\") +\n     labs(\n         title = \"Non-Tourist Proportion of Daily Rides by Hour and Day Type\",\n         x = \"Hour of Day\",\n         y = \"Day Type\",\n         fill = \"Ride Proportion\"\n     ) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Ride_Duration_Density.html",
    "href": "viz/Ride_Duration_Density.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n# Connect to the SQLite database\ncon &lt;- dbConnect(RSQLite::SQLite(), \"caseStudy.db\")\n\n# Pull ride durations for valid subscriber/customer rides under 60 min\nride_durations &lt;- dbGetQuery(con, \"\n  SELECT\n    CASE user_type\n      WHEN 0 THEN 'subscriber'\n      WHEN 1 THEN 'customer'\n    END AS user_type,\n    (end_time - start_time) / 60.0 AS duration_min\n  FROM rides\n  WHERE user_type IN (0, 1)\n    AND end_time &gt; start_time\n    AND (end_time - start_time) &lt; 12000\n\")\n\n# Disconnect \n dbDisconnect(con)\nggplot(ride_durations, aes(x = duration_min, color = user_type, fill = user_type)) +\n     geom_density(alpha = 0.3) +\n     labs(title = \"Ride Duration Density\", x = \"Duration (minutes)\", y = \"Density\") +\n     scale_color_manual(values = c(\"subscriber\" = \"#1f77b4\", \"customer\" = \"#ff7f0e\")) +\n     scale_fill_manual(values = c(\"subscriber\" = \"#1f77b4\", \"customer\" = \"#ff7f0e\")) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Ride_Duration_Density.html#ride-duration-density",
    "href": "viz/Ride_Duration_Density.html#ride-duration-density",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n# Connect to the SQLite database\ncon &lt;- dbConnect(RSQLite::SQLite(), \"caseStudy.db\")\n\n# Pull ride durations for valid subscriber/customer rides under 60 min\nride_durations &lt;- dbGetQuery(con, \"\n  SELECT\n    CASE user_type\n      WHEN 0 THEN 'subscriber'\n      WHEN 1 THEN 'customer'\n    END AS user_type,\n    (end_time - start_time) / 60.0 AS duration_min\n  FROM rides\n  WHERE user_type IN (0, 1)\n    AND end_time &gt; start_time\n    AND (end_time - start_time) &lt; 12000\n\")\n\n# Disconnect \n dbDisconnect(con)\nggplot(ride_durations, aes(x = duration_min, color = user_type, fill = user_type)) +\n     geom_density(alpha = 0.3) +\n     labs(title = \"Ride Duration Density\", x = \"Duration (minutes)\", y = \"Density\") +\n     scale_color_manual(values = c(\"subscriber\" = \"#1f77b4\", \"customer\" = \"#ff7f0e\")) +\n     scale_fill_manual(values = c(\"subscriber\" = \"#1f77b4\", \"customer\" = \"#ff7f0e\")) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Ride_Duration_by_User_Type_box.html",
    "href": "viz/Ride_Duration_by_User_Type_box.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n# Connect to the SQLite database\ncon &lt;- dbConnect(RSQLite::SQLite(), \"caseStudy.db\")\n\n# Pull ride durations for valid subscriber/customer rides under 60 min\nride_durations &lt;- dbGetQuery(con, \"\n  SELECT\n    CASE user_type\n      WHEN 0 THEN 'subscriber'\n      WHEN 1 THEN 'customer'\n    END AS user_type,\n    (end_time - start_time) / 60.0 AS duration_min\n  FROM rides\n  WHERE user_type IN (0, 1)\n    AND end_time &gt; start_time\n    AND (end_time - start_time) &lt; 12000\n\")\n\n# Disconnect\n dbDisconnect(con)\nggplot(ride_durations, aes(x = user_type, y = duration_min, fill = user_type)) +\n     geom_boxplot(outlier.alpha = 0.1) +\n     labs(title = \"Ride Duration by User Type\", x = \"\", y = \"Duration (minutes)\") +\n     scale_fill_manual(values = c(\"subscriber\" = \"#1f77b4\", \"customer\" = \"#ff7f0e\")) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Ride_Duration_by_User_Type_box.html#ride-duration-by-user-type-box-plot",
    "href": "viz/Ride_Duration_by_User_Type_box.html#ride-duration-by-user-type-box-plot",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n# Connect to the SQLite database\ncon &lt;- dbConnect(RSQLite::SQLite(), \"caseStudy.db\")\n\n# Pull ride durations for valid subscriber/customer rides under 60 min\nride_durations &lt;- dbGetQuery(con, \"\n  SELECT\n    CASE user_type\n      WHEN 0 THEN 'subscriber'\n      WHEN 1 THEN 'customer'\n    END AS user_type,\n    (end_time - start_time) / 60.0 AS duration_min\n  FROM rides\n  WHERE user_type IN (0, 1)\n    AND end_time &gt; start_time\n    AND (end_time - start_time) &lt; 12000\n\")\n\n# Disconnect\n dbDisconnect(con)\nggplot(ride_durations, aes(x = user_type, y = duration_min, fill = user_type)) +\n     geom_boxplot(outlier.alpha = 0.1) +\n     labs(title = \"Ride Duration by User Type\", x = \"\", y = \"Duration (minutes)\") +\n     scale_fill_manual(values = c(\"subscriber\" = \"#1f77b4\", \"customer\" = \"#ff7f0e\")) +\n     theme_minimal()"
  },
  {
    "objectID": "viz/Ride_Volume_by_Temp_and_Precipitation.html",
    "href": "viz/Ride_Volume_by_Temp_and_Precipitation.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Ride Volume by Temperature and Rain Condition This panel chart shows total ride volume for subscribers and customers, grouped by dry, wet, and unknown precipitation conditions. Most rides occur in dry weather at temperatures between 20–25°C. Wet conditions significantly suppress ridership for both user types, revealing clear sensitivity to rain.\n\n\n\n\nThis line chart panel shows the total ride volume across 2°C temperature bins, broken down by user type (Customer vs. Subscriber) and grouped by rain condition (Dry, Wet, No data). Each panel represents a different precipitation category, allowing direct comparison of behavior under different weather conditions.\n\n\n\n\nX-Axis (Temperature Bin °C):\n\nTemperature ranges from -30°C to +30°C.\nBinned in 2°C increments.\n\nY-Axis (Total Rides):\n\nNumber of rides recorded within each temperature bin.\n\nFacets (Panels):\n\nDry: Rides that occurred with no recorded rain.\nNo data: Weather data was missing.\nWet: Rides that occurred during rain conditions.\n\nLines:\n\nRed: Customer ride volume.\nCyan: Subscriber ride volume.\n\n\n\n\n\n\n\n\nMost ride volume occurs here, peaking between 20–26°C.\nSubscribers consistently log more rides than customers across all temperature bins.\nClear bell-shaped distribution centered around optimal riding weather (20–25°C).\n\n\n\n\n\nVery little volume, but patterns still mirror the dry curve.\nCould include early data before weather tracking began or corrupted weather records.\n\n\n\n\n\nDramatic decrease in ride volume for both user types.\nSubscriber and customer patterns flatten and converge, showing less variance in behavior when it’s raining.\n\n\n\n\n\n\nTemperature strongly influences ridership, with optimal weather (20–25°C) showing the highest activity.\nPrecipitation is a major deterrent, suppressing ride volume across all temperatures.\nSubscribers ride more often and in a wider temperature range than customers, especially when conditions are dry.\n\n\n\n\nThis visualization helps: - Quantify the impact of weather on bike share demand. - Support decisions around dynamic pricing, rebalancing, or user alerts based on forecasted weather. - Segment usage patterns based on environmental conditions, without requiring detailed user data beyond type.\ngroup_by(temp_bin, user_type, precip_label) %&gt;%\n     summarise(rides = sum(rides), .groups = \"drop\") %&gt;%\n     ggplot(aes(x = temp_bin, y = rides, color = user_type)) +\n     geom_line(size = 1) +\n     facet_wrap(~ precip_label, nrow = 1) +\n     labs(\n         title = \"Ride Volume by Temperature and Precipitation\",\n         subtitle = \"2°C temperature bins grouped by rain condition\",\n         x = \"Temperature Bin (°C)\",\n         y = \"Total Rides\",\n         color = \"User Type\"\n     ) +\n     scale_x_continuous(breaks = seq(-30, 40, by = 10)) +\n     theme_minimal(base_size = 14)"
  },
  {
    "objectID": "viz/Ride_Volume_by_Temp_and_Precipitation.html#ride-volume-by-temperature-and-precipitation",
    "href": "viz/Ride_Volume_by_Temp_and_Precipitation.html#ride-volume-by-temperature-and-precipitation",
    "title": "Bike share case-study",
    "section": "",
    "text": "Ride Volume by Temperature and Rain Condition This panel chart shows total ride volume for subscribers and customers, grouped by dry, wet, and unknown precipitation conditions. Most rides occur in dry weather at temperatures between 20–25°C. Wet conditions significantly suppress ridership for both user types, revealing clear sensitivity to rain.\n\n\n\n\nThis line chart panel shows the total ride volume across 2°C temperature bins, broken down by user type (Customer vs. Subscriber) and grouped by rain condition (Dry, Wet, No data). Each panel represents a different precipitation category, allowing direct comparison of behavior under different weather conditions.\n\n\n\n\nX-Axis (Temperature Bin °C):\n\nTemperature ranges from -30°C to +30°C.\nBinned in 2°C increments.\n\nY-Axis (Total Rides):\n\nNumber of rides recorded within each temperature bin.\n\nFacets (Panels):\n\nDry: Rides that occurred with no recorded rain.\nNo data: Weather data was missing.\nWet: Rides that occurred during rain conditions.\n\nLines:\n\nRed: Customer ride volume.\nCyan: Subscriber ride volume.\n\n\n\n\n\n\n\n\nMost ride volume occurs here, peaking between 20–26°C.\nSubscribers consistently log more rides than customers across all temperature bins.\nClear bell-shaped distribution centered around optimal riding weather (20–25°C).\n\n\n\n\n\nVery little volume, but patterns still mirror the dry curve.\nCould include early data before weather tracking began or corrupted weather records.\n\n\n\n\n\nDramatic decrease in ride volume for both user types.\nSubscriber and customer patterns flatten and converge, showing less variance in behavior when it’s raining.\n\n\n\n\n\n\nTemperature strongly influences ridership, with optimal weather (20–25°C) showing the highest activity.\nPrecipitation is a major deterrent, suppressing ride volume across all temperatures.\nSubscribers ride more often and in a wider temperature range than customers, especially when conditions are dry.\n\n\n\n\nThis visualization helps: - Quantify the impact of weather on bike share demand. - Support decisions around dynamic pricing, rebalancing, or user alerts based on forecasted weather. - Segment usage patterns based on environmental conditions, without requiring detailed user data beyond type.\ngroup_by(temp_bin, user_type, precip_label) %&gt;%\n     summarise(rides = sum(rides), .groups = \"drop\") %&gt;%\n     ggplot(aes(x = temp_bin, y = rides, color = user_type)) +\n     geom_line(size = 1) +\n     facet_wrap(~ precip_label, nrow = 1) +\n     labs(\n         title = \"Ride Volume by Temperature and Precipitation\",\n         subtitle = \"2°C temperature bins grouped by rain condition\",\n         x = \"Temperature Bin (°C)\",\n         y = \"Total Rides\",\n         color = \"User Type\"\n     ) +\n     scale_x_continuous(breaks = seq(-30, 40, by = 10)) +\n     theme_minimal(base_size = 14)"
  },
  {
    "objectID": "viz/Top_20_Most_Asymmetric_Paths.html",
    "href": "viz/Top_20_Most_Asymmetric_Paths.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "Top 20 most asymmetric ride paths by user type. Asymmetry ratio is calculated as the proportion of rides taken in one direction relative to the total rides between two stations. Distinct path preferences emerge between customers and subscribers.\n\n\n\n\nThis side-by-side horizontal bar chart identifies the 20 most directionally imbalanced ride paths (i.e., asymmetric) for each user type — customers on the left and subscribers on the right.\n\n\nThe asymmetry ratio is defined as: &gt; rides in one direction / total rides in both directions\nValues closer to 1.0 indicate strong directional bias.\n\n\n\n\nCustomer paths tend to involve routes to and from major downtown hubs like Canal St, Clinton St, and Wacker Dr — possibly reflecting less predictable, one-way tourist or ad hoc travel.\nSubscriber paths are more concentrated near recreational or scenic areas like Columbus Dr, Streeter Dr, and Lake Shore Dr, hinting at commuting or habitual use involving these corridors.\nSubscribers’ top asymmetric paths skew toward locations like Millennium Park, McCormick Place, and DuSable Harbor, supporting recreational or last-mile transit interpretations.\nDespite both groups sharing some geographical overlap, their most imbalanced paths differ significantly in direction and endpoint distribution.\n\nThis visualization helps highlight the behavioral contrast in directional ride patterns between user types."
  },
  {
    "objectID": "viz/Top_20_Most_Asymmetric_Paths.html#top-20-most-asymmetric-paths",
    "href": "viz/Top_20_Most_Asymmetric_Paths.html#top-20-most-asymmetric-paths",
    "title": "Bike share case-study",
    "section": "",
    "text": "Top 20 most asymmetric ride paths by user type. Asymmetry ratio is calculated as the proportion of rides taken in one direction relative to the total rides between two stations. Distinct path preferences emerge between customers and subscribers.\n\n\n\n\nThis side-by-side horizontal bar chart identifies the 20 most directionally imbalanced ride paths (i.e., asymmetric) for each user type — customers on the left and subscribers on the right.\n\n\nThe asymmetry ratio is defined as: &gt; rides in one direction / total rides in both directions\nValues closer to 1.0 indicate strong directional bias.\n\n\n\n\nCustomer paths tend to involve routes to and from major downtown hubs like Canal St, Clinton St, and Wacker Dr — possibly reflecting less predictable, one-way tourist or ad hoc travel.\nSubscriber paths are more concentrated near recreational or scenic areas like Columbus Dr, Streeter Dr, and Lake Shore Dr, hinting at commuting or habitual use involving these corridors.\nSubscribers’ top asymmetric paths skew toward locations like Millennium Park, McCormick Place, and DuSable Harbor, supporting recreational or last-mile transit interpretations.\nDespite both groups sharing some geographical overlap, their most imbalanced paths differ significantly in direction and endpoint distribution.\n\nThis visualization helps highlight the behavioral contrast in directional ride patterns between user types."
  },
  {
    "objectID": "viz/Top_25_Non-Tourist_Stations_by_Customer_Ride_Count.html",
    "href": "viz/Top_25_Non-Tourist_Stations_by_Customer_Ride_Count.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(top_non_tourist_stations_named, aes(\n   x = reorder(name, customer_ride_count),\n   y = customer_ride_count\n   )) +\n   geom_col(fill = \"steelblue\") +\n   coord_flip() +\n   labs(\n     title = \"Top 25 Non-Tourist Stations by Customer Ride Count\",\n     x = \"Station\",\n     y = \"Customer Rides\"\n) +\ntheme_minimal()"
  },
  {
    "objectID": "viz/Top_25_Non-Tourist_Stations_by_Customer_Ride_Count.html#top-25-non-tourist-stations-by-customer-ride-count",
    "href": "viz/Top_25_Non-Tourist_Stations_by_Customer_Ride_Count.html#top-25-non-tourist-stations-by-customer-ride-count",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\nggplot(top_non_tourist_stations_named, aes(\n   x = reorder(name, customer_ride_count),\n   y = customer_ride_count\n   )) +\n   geom_col(fill = \"steelblue\") +\n   coord_flip() +\n   labs(\n     title = \"Top 25 Non-Tourist Stations by Customer Ride Count\",\n     x = \"Station\",\n     y = \"Customer Rides\"\n) +\ntheme_minimal()"
  },
  {
    "objectID": "viz/average_hourly_rides_vs_temp_2_bucket.html",
    "href": "viz/average_hourly_rides_vs_temp_2_bucket.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n\n\nThis chart presents the average number of hourly bike rides as a function of temperature (°C). The data is aggregated across all users, without distinguishing between subscriber or casual rider types.\n\n\n\n\nX-Axis: Temperature in degrees Celsius, ranging from below -10°C to above 35°C.\nY-Axis: Average hourly ride count.\nLine: A single curve showing average ride volume across all users, bucketed by temperature.\n\n\n\n\nThis visualization is intended to illustrate how temperature alone affects overall ridership behavior, independent of time of day, day of week, or rider category.\n\n\n\n\nSub-zero temperatures (&lt; 0°C): Very low ridership, close to zero, as expected.\nGradual increase: Ride volume increases steadily with temperature from around 0°C to the low 20s.\nPeak ridership: Occurs near 25°C, representing the optimal weather for riding.\nDrop-off above 30°C: Suggests decreased willingness to ride in high heat, likely due to discomfort or health concerns.\n\n\n\n\n\nThe chart suggests a strong correlation between temperature and total ride volume.\nThe symmetric, bell-shaped curve implies that moderate temperatures are ideal for cycling.\nExtremes on either end (cold or hot) sharply reduce bike usage.\n\n\n\n\n\nRides are put into bucked with 2°C increments based on the temperature at ride start times.\nThe “2-bucket” term refers to the fact that the temperatures readings were grouped into bins of 2°C. Binning is a form of data smoothing applied to reduce noise.\n\n.headers off          -- we only want raw numbers\n.mode tabs            -- gnuplot likes tab‑ or space‑separated columns\n.output temp_vs_rides.dat\nWITH t AS (\n  SELECT\n    CAST(temp / 2.0 AS INT)*2  AS temp_bin,   -- 2 °C buckets: …, 14, 16, 18 …\n    AVG(rides)                 AS avg_rides\n  FROM rides_weather\n  GROUP BY temp_bin\n  ORDER BY temp_bin\n)\nSELECT temp_bin, avg_rides\nFROM t;\n.output stdout         -- restore console\nset title \"Average hourly rides vs. temperature\"\nset xlabel \"Temperature (°C)\"\nset ylabel \"Average rides per hour\"\nset grid\nset key off\n\n# Simple connected line\nplot \"temp_vs_rides.dat\" using 1:2 with linespoints lw 2 pt 7"
  },
  {
    "objectID": "viz/average_hourly_rides_vs_temp_2_bucket.html#average-hourly-rides-vs-temperature-2-buckets",
    "href": "viz/average_hourly_rides_vs_temp_2_bucket.html#average-hourly-rides-vs-temperature-2-buckets",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n\n\nThis chart presents the average number of hourly bike rides as a function of temperature (°C). The data is aggregated across all users, without distinguishing between subscriber or casual rider types.\n\n\n\n\nX-Axis: Temperature in degrees Celsius, ranging from below -10°C to above 35°C.\nY-Axis: Average hourly ride count.\nLine: A single curve showing average ride volume across all users, bucketed by temperature.\n\n\n\n\nThis visualization is intended to illustrate how temperature alone affects overall ridership behavior, independent of time of day, day of week, or rider category.\n\n\n\n\nSub-zero temperatures (&lt; 0°C): Very low ridership, close to zero, as expected.\nGradual increase: Ride volume increases steadily with temperature from around 0°C to the low 20s.\nPeak ridership: Occurs near 25°C, representing the optimal weather for riding.\nDrop-off above 30°C: Suggests decreased willingness to ride in high heat, likely due to discomfort or health concerns.\n\n\n\n\n\nThe chart suggests a strong correlation between temperature and total ride volume.\nThe symmetric, bell-shaped curve implies that moderate temperatures are ideal for cycling.\nExtremes on either end (cold or hot) sharply reduce bike usage.\n\n\n\n\n\nRides are put into bucked with 2°C increments based on the temperature at ride start times.\nThe “2-bucket” term refers to the fact that the temperatures readings were grouped into bins of 2°C. Binning is a form of data smoothing applied to reduce noise.\n\n.headers off          -- we only want raw numbers\n.mode tabs            -- gnuplot likes tab‑ or space‑separated columns\n.output temp_vs_rides.dat\nWITH t AS (\n  SELECT\n    CAST(temp / 2.0 AS INT)*2  AS temp_bin,   -- 2 °C buckets: …, 14, 16, 18 …\n    AVG(rides)                 AS avg_rides\n  FROM rides_weather\n  GROUP BY temp_bin\n  ORDER BY temp_bin\n)\nSELECT temp_bin, avg_rides\nFROM t;\n.output stdout         -- restore console\nset title \"Average hourly rides vs. temperature\"\nset xlabel \"Temperature (°C)\"\nset ylabel \"Average rides per hour\"\nset grid\nset key off\n\n# Simple connected line\nplot \"temp_vs_rides.dat\" using 1:2 with linespoints lw 2 pt 7"
  },
  {
    "objectID": "viz/average_hourly_rides_vs_temp_2_bucket_smooth.html",
    "href": "viz/average_hourly_rides_vs_temp_2_bucket_smooth.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n\n\nThis chart presents the average number of hourly bike rides as a function of temperature (°C). The data is aggregated across all users, without distinguishing between subscriber or casual rider types.\n\n\n\n\nX-Axis: Temperature in degrees Celsius, ranging from below -10°C to above 35°C.\nY-Axis: Average hourly ride count.\nLine: A single curve showing average ride volume across all users, smoothed with cubic spline interpolation and bucketed by temperature.\n\n\n\n\nThis visualization is intended to illustrate how temperature alone affects overall ridership behavior, independent of time of day, day of week, or rider category.\n\n\n\n\nSub-zero temperatures (&lt; 0°C): Very low ridership, close to zero, as expected.\nGradual increase: Ride volume increases steadily with temperature from around 0°C to the low 20s.\nPeak ridership: Occurs near 25°C, representing the optimal weather for riding.\nDrop-off above 30°C: Suggests decreased willingness to ride in high heat, likely due to discomfort or health concerns.\n\n\n\n\n\nThe chart suggests a strong correlation between temperature and total ride volume.\nThe symmetric, bell-shaped curve implies that moderate temperatures are ideal for cycling.\nExtremes on either end (cold or hot) sharply reduce bike usage.\n\n\n\n\n\nRides are put into bucked with 2°C increments based on the temperature at ride start times.\nThe “2-bucket” term refers to the fact that the temperatures readings were grouped into bins of 2°C. Binning is a form of data smoothing applied to reduce noise.\nCurve was further smoothrf though the use of cubic spline interpolation, which creates a smooth, curved line that passes through the data points.\n\n.headers off          -- we only want raw numbers\n.mode tabs            -- gnuplot likes tab‑ or space‑separated columns\n.output temp_vs_rides.dat\nWITH t AS (\n  SELECT\n    CAST(temp / 2.0 AS INT)*2  AS temp_bin,   -- 2 °C buckets: …, 14, 16, 18 …\n    AVG(rides)                 AS avg_rides\n  FROM rides_weather\n  GROUP BY temp_bin\n  ORDER BY temp_bin\n)\nSELECT temp_bin, avg_rides\nFROM t;\n.output stdout         -- restore console\nset title \"Average hourly rides vs. temperature\"\nset xlabel \"Temperature (°C)\"\nset ylabel \"Average rides per hour\"\nset grid\nset key off\n\n\n# smoothed curve (Cubic Spline)\nplot \"temp_vs_rides.dat\" using 1:2 smooth csplines lw 2"
  },
  {
    "objectID": "viz/average_hourly_rides_vs_temp_2_bucket_smooth.html#average-hourly-rides-vs-temperature-2-buckets-with-cubic-spline-interpolation",
    "href": "viz/average_hourly_rides_vs_temp_2_bucket_smooth.html#average-hourly-rides-vs-temperature-2-buckets-with-cubic-spline-interpolation",
    "title": "Bike share case-study",
    "section": "",
    "text": "FIGCAPTION\n\n\n\n\nThis chart presents the average number of hourly bike rides as a function of temperature (°C). The data is aggregated across all users, without distinguishing between subscriber or casual rider types.\n\n\n\n\nX-Axis: Temperature in degrees Celsius, ranging from below -10°C to above 35°C.\nY-Axis: Average hourly ride count.\nLine: A single curve showing average ride volume across all users, smoothed with cubic spline interpolation and bucketed by temperature.\n\n\n\n\nThis visualization is intended to illustrate how temperature alone affects overall ridership behavior, independent of time of day, day of week, or rider category.\n\n\n\n\nSub-zero temperatures (&lt; 0°C): Very low ridership, close to zero, as expected.\nGradual increase: Ride volume increases steadily with temperature from around 0°C to the low 20s.\nPeak ridership: Occurs near 25°C, representing the optimal weather for riding.\nDrop-off above 30°C: Suggests decreased willingness to ride in high heat, likely due to discomfort or health concerns.\n\n\n\n\n\nThe chart suggests a strong correlation between temperature and total ride volume.\nThe symmetric, bell-shaped curve implies that moderate temperatures are ideal for cycling.\nExtremes on either end (cold or hot) sharply reduce bike usage.\n\n\n\n\n\nRides are put into bucked with 2°C increments based on the temperature at ride start times.\nThe “2-bucket” term refers to the fact that the temperatures readings were grouped into bins of 2°C. Binning is a form of data smoothing applied to reduce noise.\nCurve was further smoothrf though the use of cubic spline interpolation, which creates a smooth, curved line that passes through the data points.\n\n.headers off          -- we only want raw numbers\n.mode tabs            -- gnuplot likes tab‑ or space‑separated columns\n.output temp_vs_rides.dat\nWITH t AS (\n  SELECT\n    CAST(temp / 2.0 AS INT)*2  AS temp_bin,   -- 2 °C buckets: …, 14, 16, 18 …\n    AVG(rides)                 AS avg_rides\n  FROM rides_weather\n  GROUP BY temp_bin\n  ORDER BY temp_bin\n)\nSELECT temp_bin, avg_rides\nFROM t;\n.output stdout         -- restore console\nset title \"Average hourly rides vs. temperature\"\nset xlabel \"Temperature (°C)\"\nset ylabel \"Average rides per hour\"\nset grid\nset key off\n\n\n# smoothed curve (Cubic Spline)\nplot \"temp_vs_rides.dat\" using 1:2 smooth csplines lw 2"
  },
  {
    "objectID": "viz/test.html",
    "href": "viz/test.html",
    "title": "Bike share case-study",
    "section": "",
    "text": "This is it baby."
  },
  {
    "objectID": "viz/test.html#the-test",
    "href": "viz/test.html#the-test",
    "title": "Bike share case-study",
    "section": "",
    "text": "This is it baby."
  }
]